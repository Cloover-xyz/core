/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RandomProvider,
  RandomProviderInterface,
} from "../../../src/core/RandomProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IImplementationManager",
        name: "_implementationManager",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "vrfCoordinator",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "keyHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "callbackGasLimit",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "requestConfirmations",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
        ],
        internalType: "struct RandomProvider.ChainlinkVRFData",
        name: "_data",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NOT_RAFFLE_CONTRACT",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [],
    name: "COORDINATOR",
    outputs: [
      {
        internalType: "contract VRFCoordinatorV2Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkVRFData",
    outputs: [
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "requestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationManager",
    outputs: [
      {
        internalType: "contract IImplementationManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIdToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516107ca3803806107ca83398101604081905261002f9161014b565b80516001600160a01b039081166080908152600180549483166001600160a01b0319958616179055825160008054919093169085168117909255600280549094169091179092556020810151600355604081015160048054606084015194909301516001600160401b0316660100000000000002600160301b600160701b031961ffff9095166401000000000265ffffffffffff1990941663ffffffff909316929092179290921792909216919091179055610208565b6001600160a01b03811681146100fb57600080fd5b50565b8051610109816100e6565b919050565b805163ffffffff8116811461010957600080fd5b805161ffff8116811461010957600080fd5b80516001600160401b038116811461010957600080fd5b60008082840360c081121561015f57600080fd5b835161016a816100e6565b925060a0601f198201121561017e57600080fd5b5060405160a081016001600160401b03811182821017156101af57634e487b7160e01b600052604160045260246000fd5b6040526101be602085016100fe565b8152604084015160208201526101d66060850161010e565b60408201526101e760808501610122565b60608201526101f860a08501610134565b6080820152809150509250929050565b6080516105a061022a6000396000818161018901526101cb01526105a06000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631fe543e3146100675780632bafa11b1461007c5780633b2bcbf1146100ac578063637c4320146100bf5780637ef9af4e146100e85780638678a7b214610176575b600080fd5b61007a610075366004610428565b61017e565b005b60015461008f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60005461008f906001600160a01b031681565b61008f6100cd3660046104f2565b6005602052600090815260409020546001600160a01b031681565b60025460035460045461012c926001600160a01b0316919063ffffffff811690640100000000810461ffff16906601000000000000900467ffffffffffffffff1685565b604080516001600160a01b039096168652602086019490945263ffffffff9092169284019290925261ffff909116606083015267ffffffffffffffff16608082015260a0016100a3565b61007a61020a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101fc5760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440160405180910390fd5b6102068282610384565b5050565b6001546040516302abf57960e61b81526d149859999b1950dbdb9d1c9858dd60921b600482015233916001600160a01b03169063aafd5e4090602401602060405180830381865afa158015610263573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610287919061050b565b6001600160a01b0316146102ae57604051635b4a90ad60e11b815260040160405180910390fd5b60008054600354600480546040516305d3b1d360e41b8152918201929092526601000000000000820467ffffffffffffffff166024820152640100000000820461ffff16604482015263ffffffff9091166064820152600160848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af115801561033f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610363919061053b565b600090815260056020526040902080546001600160a01b0319163317905550565b60008281526005602052604081205482516001600160a01b03909116916387409f3c918491906103b6576103b6610554565b60200260200101516040518263ffffffff1660e01b81526004016103dc91815260200190565b600060405180830381600087803b1580156103f657600080fd5b505af115801561040a573d6000803e3d6000fd5b505050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561043b57600080fd5b8235915060208084013567ffffffffffffffff8082111561045b57600080fd5b818601915086601f83011261046f57600080fd5b81358181111561048157610481610412565b8060051b604051601f19603f830116810181811085821117156104a6576104a6610412565b6040529182528482019250838101850191898311156104c457600080fd5b938501935b828510156104e2578435845293850193928501926104c9565b8096505050505050509250929050565b60006020828403121561050457600080fd5b5035919050565b60006020828403121561051d57600080fd5b81516001600160a01b038116811461053457600080fd5b9392505050565b60006020828403121561054d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203ee5a2aef1200af8ee84ac3b3805e30690bb8aa0c7c44aca67beeea6b97b647264736f6c63430008110033";

type RandomProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomProvider__factory extends ContractFactory {
  constructor(...args: RandomProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementationManager: PromiseOrValue<string>,
    _data: RandomProvider.ChainlinkVRFDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RandomProvider> {
    return super.deploy(
      _implementationManager,
      _data,
      overrides || {}
    ) as Promise<RandomProvider>;
  }
  override getDeployTransaction(
    _implementationManager: PromiseOrValue<string>,
    _data: RandomProvider.ChainlinkVRFDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _implementationManager,
      _data,
      overrides || {}
    );
  }
  override attach(address: string): RandomProvider {
    return super.attach(address) as RandomProvider;
  }
  override connect(signer: Signer): RandomProvider__factory {
    return super.connect(signer) as RandomProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomProviderInterface {
    return new utils.Interface(_abi) as RandomProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomProvider {
    return new Contract(address, _abi, signerOrProvider) as RandomProvider;
  }
}
