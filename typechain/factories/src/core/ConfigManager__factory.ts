/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ConfigManager,
  ConfigManagerInterface,
  ConfiguratorInputTypes,
} from "../../../src/core/ConfigManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IImplementationManager",
        name: "implManager",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocolFeesPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTicketSupplyAllowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTicketSalesDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTicketSalesDuration",
            type: "uint256",
          },
        ],
        internalType: "struct ConfiguratorInputTypes.InitConfigManagerInput",
        name: "_data",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CANT_BE_ZERO",
    type: "error",
  },
  {
    inputs: [],
    name: "EXCEED_MAX_PERCENTAGE",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_MAINTAINER",
    type: "error",
  },
  {
    inputs: [],
    name: "WRONG_DURATION_LIMITS",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxTicketSalesDuration",
        type: "uint256",
      },
    ],
    name: "MaxTicketSalesDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxTicketSupplyAllowed",
        type: "uint256",
      },
    ],
    name: "MaxTicketSupplyAllowedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinTicketSalesDuration",
        type: "uint256",
      },
    ],
    name: "MinTicketSalesDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeePercentage",
        type: "uint256",
      },
    ],
    name: "ProtocolFeesPercentageUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_implementationManager",
    outputs: [
      {
        internalType: "contract IImplementationManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationManager",
    outputs: [
      {
        internalType: "contract IImplementationManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTicketSalesDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTicketSupplyAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTicketSalesDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "procolFeesPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxTicketSalesDuration",
        type: "uint256",
      },
    ],
    name: "setMaxTicketSalesDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxTicketSupplyAllowed",
        type: "uint256",
      },
    ],
    name: "setMaxTicketSupplyAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinTicketSalesDuration",
        type: "uint256",
      },
    ],
    name: "setMinTicketSalesDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePercentage",
        type: "uint256",
      },
    ],
    name: "setProcolFeesPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketSalesDurationLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "minDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b0e380380610b0e83398101604081905261002f91610105565b80516127101015610053576040516350a8f55b60e11b815260040160405180910390fd5b80606001518160400151111561007c576040516303eddc2f60e21b815260040160405180910390fd5b80602001516000036100a1576040516398fccb2760e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03939093169290921790915560408051608081018252825180825260208085015190830181905283850151938301849052606094850151949092018490526001556002556003556004556101aa565b60008082840360a081121561011957600080fd5b83516001600160a01b038116811461013057600080fd5b92506080601f198201121561014457600080fd5b50604051608081016001600160401b038111828210171561017557634e487b7160e01b600052604160045260246000fd5b806040525060208401518152604084015160208201526060840151604082015260808401516060820152809150509250929050565b610955806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063922d59c711610071578063922d59c71461012d578063924a323914610135578063a22aa73c14610148578063b069d8d414610150578063b5ee6f8c14610163578063e1aaa5101461017657600080fd5b80631aba4c77146100ae5780632bafa11b146100ce5780632dc5faee146100f35780635c1f9392146101055780637be936671461011a575b600080fd5b600354600454604080519283526020830191909152015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c5565b6002545b6040519081526020016100c5565b61011861011336600461089b565b61017e565b005b61011861012836600461089b565b610354565b6004546100f7565b6000546100db906001600160a01b031681565b6001546100f7565b61011861015e36600461089b565b610522565b61011861017136600461089b565b6106f0565b6003546100f7565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe91906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906108fd565b6102f4576040516337ab45b760e01b815260040160405180910390fd5b600354821015610317576040516303eddc2f60e21b815260040160405180910390fd5b60048290556040518281527fec9aa96f5c01df3367d8bf559f54b8f3e820824ebdbbf21de024e1abd5249801906020015b60405180910390a15050565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d491906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044791906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad91906108fd565b6104ca576040516337ab45b760e01b815260040160405180910390fd5b6004548211156104ed576040516303eddc2f60e21b815260040160405180910390fd5b60038290556040518281527f92b7e0608ee052b48b518ee11571e667dadc4a5502eb107cec57e81d43a325dc90602001610348565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a291906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061591906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b91906108fd565b610698576040516337ab45b760e01b815260040160405180910390fd5b6127108211156106bb576040516350a8f55b60e11b815260040160405180910390fd5b60018290556040518281527fa379179b7c6ebd2bdfa1d438b72e256d0832023a395b3dc94e4a7d656118ae7190602001610348565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077091906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610825573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084991906108fd565b610866576040516337ab45b760e01b815260040160405180910390fd5b60028290556040518281527f7b3b5a1bcc706225ad01d4083196eb8e246429642b489ac878f3b2eead866aae90602001610348565b6000602082840312156108ad57600080fd5b5035919050565b6000602082840312156108c657600080fd5b81516001600160a01b03811681146108dd57600080fd5b9392505050565b6000602082840312156108f657600080fd5b5051919050565b60006020828403121561090f57600080fd5b815180151581146108dd57600080fdfea26469706673582212203643f3734705ca8988dd03bff34cbf62101aedb3cefcfe9cd4d65c185ac57d2e64736f6c63430008110033";

type ConfigManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfigManager__factory extends ContractFactory {
  constructor(...args: ConfigManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implManager: PromiseOrValue<string>,
    _data: ConfiguratorInputTypes.InitConfigManagerInputStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConfigManager> {
    return super.deploy(
      implManager,
      _data,
      overrides || {}
    ) as Promise<ConfigManager>;
  }
  override getDeployTransaction(
    implManager: PromiseOrValue<string>,
    _data: ConfiguratorInputTypes.InitConfigManagerInputStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implManager, _data, overrides || {});
  }
  override attach(address: string): ConfigManager {
    return super.attach(address) as ConfigManager;
  }
  override connect(signer: Signer): ConfigManager__factory {
    return super.connect(signer) as ConfigManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigManagerInterface {
    return new utils.Interface(_abi) as ConfigManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConfigManager {
    return new Contract(address, _abi, signerOrProvider) as ConfigManager;
  }
}
