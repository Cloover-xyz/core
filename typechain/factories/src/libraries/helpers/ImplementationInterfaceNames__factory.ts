/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ImplementationInterfaceNames,
  ImplementationInterfaceNamesInterface,
} from "../../../../src/libraries/helpers/ImplementationInterfaceNames";

const _abi = [
  {
    inputs: [],
    name: "AccessController",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ConfigManager",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFTWhitelist",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RaffleFactory",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RandomProvider",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61011961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610605b5760003560e01c806324aa2b9a146060578063276b0a2914608757806337c1de4c14609d578063d4fc88231460b4578063e0dc3adb1460cd575b600080fd5b60756b13919515da1a5d195b1a5cdd60a21b81565b60405190815260200160405180910390f35b60756c526166666c65466163746f727960981b81565b60756d2930b73237b6a83937bb34b232b960911b81565b60756f20b1b1b2b9b9a1b7b73a3937b63632b960811b81565b60756c21b7b73334b3a6b0b730b3b2b960991b8156fea2646970667358221220796b3628906355b42e868d8fc8ec988de21ce32bdb8d04032bb5c843e5d32f5164736f6c63430008110033";

type ImplementationInterfaceNamesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationInterfaceNamesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationInterfaceNames__factory extends ContractFactory {
  constructor(...args: ImplementationInterfaceNamesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ImplementationInterfaceNames> {
    return super.deploy(
      overrides || {}
    ) as Promise<ImplementationInterfaceNames>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ImplementationInterfaceNames {
    return super.attach(address) as ImplementationInterfaceNames;
  }
  override connect(signer: Signer): ImplementationInterfaceNames__factory {
    return super.connect(signer) as ImplementationInterfaceNames__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationInterfaceNamesInterface {
    return new utils.Interface(_abi) as ImplementationInterfaceNamesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImplementationInterfaceNames {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ImplementationInterfaceNames;
  }
}
