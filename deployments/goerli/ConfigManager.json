{
  "address": "0xEc0354DB5bF051B8FbeFBB001E84eeB9136AECeB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IImplementationManager",
          "name": "implManager",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocolFeesPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTicketSupplyAllowed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minTicketSalesDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTicketSalesDuration",
              "type": "uint256"
            }
          ],
          "internalType": "struct ConfiguratorInputTypes.InitConfigManagerInput",
          "name": "_data",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CANT_BE_ZERO",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EXCEED_MAX_PERCENTAGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_MAINTAINER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WRONG_DURATION_LIMITS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxTicketSalesDuration",
          "type": "uint256"
        }
      ],
      "name": "MaxTicketSalesDurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxTicketSupplyAllowed",
          "type": "uint256"
        }
      ],
      "name": "MaxTicketSupplyAllowedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinTicketSalesDuration",
          "type": "uint256"
        }
      ],
      "name": "MinTicketSalesDurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "ProtocolFeesPercentageUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_implementationManager",
      "outputs": [
        {
          "internalType": "contract IImplementationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementationManager",
      "outputs": [
        {
          "internalType": "contract IImplementationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTicketSalesDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTicketSupplyAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTicketSalesDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "procolFeesPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxTicketSalesDuration",
          "type": "uint256"
        }
      ],
      "name": "setMaxTicketSalesDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxTicketSupplyAllowed",
          "type": "uint256"
        }
      ],
      "name": "setMaxTicketSupplyAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinTicketSalesDuration",
          "type": "uint256"
        }
      ],
      "name": "setMinTicketSalesDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "setProcolFeesPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketSalesDurationLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8c934a8b88e73dab8679fde1842808a19f03f528751aed9f499d45fe7c29b9f9",
  "receipt": {
    "to": null,
    "from": "0x94e1EBc6464Ff4c0043fF4dD2b8941c655681C44",
    "contractAddress": "0xEc0354DB5bF051B8FbeFBB001E84eeB9136AECeB",
    "transactionIndex": 172,
    "gasUsed": "687923",
    "logsBloom": "0x
    "blockHash": "0xb122d21a7faf622b9abd0dc5b9e4937d80c8bae662956f42c45c88487ab99db4",
    "transactionHash": "0x8c934a8b88e73dab8679fde1842808a19f03f528751aed9f499d45fe7c29b9f9",
    "logs": [],
    "blockNumber": 8566753,
    "cumulativeGasUsed": "25700571",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x157d5673250BfD323Bdc6161C6dF767b8E6cC567",
    [
      250,
      10000,
      86400,
      5270400
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "d6d486ff18d030ad7ab50e29ffe40ae4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IImplementationManager\",\"name\":\"implManager\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocolFeesPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketSupplyAllowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTicketSalesDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketSalesDuration\",\"type\":\"uint256\"}],\"internalType\":\"struct ConfiguratorInputTypes.InitConfigManagerInput\",\"name\":\"_data\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CANT_BE_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EXCEED_MAX_PERCENTAGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_MAINTAINER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WRONG_DURATION_LIMITS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxTicketSalesDuration\",\"type\":\"uint256\"}],\"name\":\"MaxTicketSalesDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxTicketSupplyAllowed\",\"type\":\"uint256\"}],\"name\":\"MaxTicketSupplyAllowedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinTicketSalesDuration\",\"type\":\"uint256\"}],\"name\":\"MinTicketSalesDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeesPercentageUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_implementationManager\",\"outputs\":[{\"internalType\":\"contract IImplementationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationManager\",\"outputs\":[{\"internalType\":\"contract IImplementationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTicketSalesDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTicketSupplyAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTicketSalesDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"procolFeesPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTicketSalesDuration\",\"type\":\"uint256\"}],\"name\":\"setMaxTicketSalesDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTicketSupplyAllowed\",\"type\":\"uint256\"}],\"name\":\"setMaxTicketSupplyAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinTicketSalesDuration\",\"type\":\"uint256\"}],\"name\":\"setMinTicketSalesDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setProcolFeesPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketSalesDurationLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"maxTicketSalesDuration()\":{\"returns\":{\"_0\":\"Tthe max duration\"}},\"maxTicketSupplyAllowed()\":{\"returns\":{\"_0\":\"The max amount of ticket allowed\"}},\"minTicketSalesDuration()\":{\"returns\":{\"_0\":\"The min duration\"}},\"procolFeesPercentage()\":{\"returns\":{\"_0\":\"The fees percentage\"}},\"ticketSalesDurationLimits()\":{\"returns\":{\"maxDuration\":\"the maximum of time\",\"minDuration\":\"the minimum of time\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"maxTicketSalesDuration()\":{\"notice\":\"Get the max duration for the ticket sales\"},\"maxTicketSupplyAllowed()\":{\"notice\":\"Get the max ticket supply allowed for a raffle\"},\"minTicketSalesDuration()\":{\"notice\":\"Get the min duration for the ticket sales\"},\"procolFeesPercentage()\":{\"notice\":\"Get the fees percentage to apply on ticket sales amount\"},\"ticketSalesDurationLimits()\":{\"notice\":\"Get the limit of duration for the ticket sales\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/ConfigManager.sol\":\"ConfigManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363737353130363034353130\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s deployer role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting deployer for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an deployer role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the deployer role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the deployer role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's deployer, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s deployer role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s deployer role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x179c8d294b2a336dd95ecf6d74e1f759afa0bf98b62eb7fdf30a1685162eadf8\",\"license\":\"MIT\"},\"src/core/ConfigManager.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\n\\nimport {IAccessController} from \\\"../interfaces/IAccessController.sol\\\";\\nimport {IImplementationManager} from \\\"../interfaces/IImplementationManager.sol\\\";\\nimport {IConfigManager} from \\\"../interfaces/IConfigManager.sol\\\";\\n\\n\\nimport {ImplementationInterfaceNames} from \\\"../libraries/helpers/ImplementationInterfaceNames.sol\\\";\\nimport {Errors} from \\\"../libraries/helpers/Errors.sol\\\";\\nimport {PercentageMath} from \\\"../libraries/math/PercentageMath.sol\\\";\\nimport {ConfiguratorInputTypes} from \\\"../libraries/types/ConfiguratorInputTypes.sol\\\";\\n\\ncontract ConfigManager is IConfigManager {\\n    using PercentageMath for uint256;\\n\\n    struct RaffleConfigData{\\n        uint256 protocolFeesPercentage;\\n        uint256 maxTicketSupplyAllowed;\\n        uint256 minTicketSalesDuration;\\n        uint256 maxTicketSalesDuration;\\n    }\\n    \\n    //----------------------------------------\\n    // Storage\\n    //----------------------------------------\\n\\n    IImplementationManager public _implementationManager;\\n\\n    RaffleConfigData private _raffleConfigData;\\n\\n    //----------------------------------------\\n    // Events\\n    //----------------------------------------\\n\\n    event ProtocolFeesPercentageUpdated(uint256 newFeePercentage);\\n    event MaxTicketSupplyAllowedUpdated(uint256 newMaxTicketSupplyAllowed);\\n    event MinTicketSalesDurationUpdated(uint256 newMinTicketSalesDuration);\\n    event MaxTicketSalesDurationUpdated(uint256 newMaxTicketSalesDuration);\\n\\n    //----------------------------------------\\n    // Modifiers\\n    //----------------------------------------\\n    modifier onlyMaintainer() {\\n        IAccessController accessController = IAccessController(_implementationManager.getImplementationAddress(ImplementationInterfaceNames.AccessController));\\n        if(!accessController.hasRole(accessController.MAINTAINER_ROLE(), msg.sender)) revert Errors.NOT_MAINTAINER();\\n        _;\\n    }\\n\\n    //----------------------------------------\\n    // Initialization function\\n    //----------------------------------------\\n    constructor(IImplementationManager implManager, ConfiguratorInputTypes.InitConfigManagerInput memory _data){\\n        if(_data.protocolFeesPercentage > PercentageMath.PERCENTAGE_FACTOR) revert Errors.EXCEED_MAX_PERCENTAGE();\\n        if(_data.minTicketSalesDuration > _data.maxTicketSalesDuration) revert Errors.WRONG_DURATION_LIMITS();\\n        if(_data.maxTicketSupplyAllowed == 0) revert Errors.CANT_BE_ZERO();\\n        _implementationManager = implManager;\\n        _raffleConfigData = RaffleConfigData(_data.protocolFeesPercentage, _data.maxTicketSupplyAllowed, _data.minTicketSalesDuration, _data.maxTicketSalesDuration);\\n    }\\n\\n    //----------------------------------------\\n    // External function\\n    //----------------------------------------\\n\\n    function setProcolFeesPercentage(uint256 newFeePercentage) external onlyMaintainer{\\n        if(newFeePercentage > PercentageMath.PERCENTAGE_FACTOR) revert Errors.EXCEED_MAX_PERCENTAGE();\\n        _raffleConfigData.protocolFeesPercentage = newFeePercentage;\\n        emit ProtocolFeesPercentageUpdated(newFeePercentage);\\n    }\\n\\n    function procolFeesPercentage() external view override returns(uint256) {\\n        return _raffleConfigData.protocolFeesPercentage;\\n    }\\n\\n    function setMinTicketSalesDuration(uint256 newMinTicketSalesDuration) external onlyMaintainer{\\n        if(newMinTicketSalesDuration > _raffleConfigData.maxTicketSalesDuration) revert Errors.WRONG_DURATION_LIMITS();\\n        _raffleConfigData.minTicketSalesDuration = newMinTicketSalesDuration;\\n        emit MinTicketSalesDurationUpdated(newMinTicketSalesDuration);\\n    }\\n\\n    function minTicketSalesDuration() external view override returns(uint256) {\\n        return _raffleConfigData.minTicketSalesDuration;\\n    }\\n\\n    function setMaxTicketSalesDuration(uint256 newMaxTicketSalesDuration) external onlyMaintainer{\\n        if(newMaxTicketSalesDuration < _raffleConfigData.minTicketSalesDuration) revert Errors.WRONG_DURATION_LIMITS();\\n        _raffleConfigData.maxTicketSalesDuration = newMaxTicketSalesDuration;\\n        emit MaxTicketSalesDurationUpdated(newMaxTicketSalesDuration);\\n    }\\n\\n    function maxTicketSalesDuration() external view override returns(uint256) {\\n        return _raffleConfigData.maxTicketSalesDuration;\\n    }\\n\\n    function setMaxTicketSupplyAllowed(uint256 newMaxTicketSupplyAllowed) external onlyMaintainer{\\n        _raffleConfigData.maxTicketSupplyAllowed = newMaxTicketSupplyAllowed;\\n        emit MaxTicketSupplyAllowedUpdated(newMaxTicketSupplyAllowed);\\n    }\\n\\n    function maxTicketSupplyAllowed() external view override returns(uint256) {\\n        return _raffleConfigData.maxTicketSupplyAllowed;\\n    }\\n\\n    function implementationManager() external view returns(IImplementationManager) {\\n        return _implementationManager;\\n    }\\n\\n    function ticketSalesDurationLimits() external view returns(uint256 minDuration, uint256 maxDuration){\\n        return (_raffleConfigData.minTicketSalesDuration,_raffleConfigData.maxTicketSalesDuration);\\n    }\\n}\",\"keccak256\":\"0x3a16c0410cbf4f43e1d08e9418616cfab88a3dbc85cab7e28401625e2595630d\",\"license\":\"MIT\"},\"src/interfaces/IAccessController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IAccessControl} from \\\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\\\";\\n\\ninterface IAccessController is IAccessControl {\\n  function MAINTAINER_ROLE() external view returns (bytes32);\\n  function MANAGER_ROLE() external view returns (bytes32);\\n\\n}\",\"keccak256\":\"0x4c911fab8585cd6986f06b4dc39e8290b817e61e4506a0ebdacd38a8efcab341\",\"license\":\"MIT\"},\"src/interfaces/IConfigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\ninterface IConfigManager{\\n\\n    /// @notice Get the fees percentage to apply on ticket sales amount\\n    /// @return The fees percentage\\n    function procolFeesPercentage() external view returns(uint256);\\n\\n    /// @notice Get the max ticket supply allowed for a raffle\\n    /// @return The max amount of ticket allowed\\n    function maxTicketSupplyAllowed() external view returns(uint256);\\n\\n    /// @notice Get the min duration for the ticket sales\\n    /// @return The min duration\\n    function minTicketSalesDuration() external view returns(uint256);\\n    \\n    /// @notice Get the max duration for the ticket sales\\n    /// @return Tthe max duration\\n    function maxTicketSalesDuration() external view returns(uint256);\\n    \\n    /// @notice Get the limit of duration for the ticket sales\\n    /// @return minDuration the minimum of time\\n    /// @return maxDuration the maximum of time\\n    function ticketSalesDurationLimits() external view returns(uint256 minDuration, uint256 maxDuration);\\n\\n}\",\"keccak256\":\"0x4e991309184d88c644ded97249437c3bf9c25c80473713d9cfce9f57a46e9f6a\",\"license\":\"MIT\"},\"src/interfaces/IImplementationManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IImplementationManager{\\n    /**\\n     * @notice Updates the address of the contract that implements `interfaceName`.\\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\\n     * @param implementationAddress address of the deployed contract that implements the interface.\\n     */\\n    function changeImplementationAddress(\\n        bytes32 interfaceName,\\n        address implementationAddress\\n    ) external;\\n\\n  /**\\n   * @notice Gets the address of the contract that implements the given `interfaceName`.\\n   * @param interfaceName queried interface.\\n   * @return implementationAddress Address of the deployed contract that implements the interface.\\n   */\\n  function getImplementationAddress(bytes32 interfaceName)\\n    external\\n    view\\n    returns (address implementationAddress);\\n\\n}\",\"keccak256\":\"0x4b81c1727f3045f25a7d38da86e5ea25993c1991630e441c9032c125f477ca4b\",\"license\":\"MIT\"},\"src/libraries/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Errors library\\n * @notice Defines the error messages emitted by the different contracts of the protocol\\n */\\nlibrary Errors {\\n    error BE_ADDRESS_0(); // 'Address must be address(0)'\\n    error NOT_ADDRESS_0(); // 'Address must not be address(0)'\\n    error RAFFLE_CLOSE(); // 'Current timestamps greater or equal than the close time'\\n    error RAFFLE_STILL_OPEN(); // 'Current timestamps lesser or equal than the close time'\\n    error CANT_BE_ZERO(); // 'Value can't must be higher than 0'\\n    error MAX_TICKET_SUPPLY_EXCEEDED(); // 'Maximum amount of ticket sold for the raffle has been reached'\\n    error NOT_ENOUGH_BALANCE(); // 'Balance lower than required'\\n    error MSG_SENDER_NOT_WINNER(); // 'msg.sender is not winner address'\\n    error NOT_CREATOR(); // 'msg.sender is not the creator of the raffle'\\n    error TICKET_NOT_DRAWN(); // 'ticket must be drawn'\\n    error TICKET_ALREADY_DRAWN(); // 'ticket has already be drawn'\\n    error TICKET_DRAWN_NOT_REQUESTED(); // 'ticket drawn has not be requested'\\n    error NOT_MAINTAINER(); // 'Caller is not the maintainer'\\n    error IMPLEMENTATION_NOT_FOUND(); // 'Implementation interfaces is not registered'\\n    error NOT_RAFFLE_CONTRACT(); // 'Caller is not a raffle contract'\\n    error NOT_RANDOM_PROVIDER_CONTRACT(); // 'Caller is not the random provider contract'\\n    error NOT_NFT_OWNER(); // 'Address not the nft owner'\\n    error ARRAYS_LENGTH_NOT_EQUAL(); // 'Arrays doesn't have the same size'\\n    error COLLECTION_ALREADY_WHITELISTED(); //'NFT collection already whitelisted'\\n    error COLLECTION_NOT_WHITELISTED(); //'NFT collection not whitelisted'\\n    error BELLOW_MIN_DURATION(); //'Ticket sales duration must be higher than min defined'\\n    error ABOVE_MAX_DURATION(); //'Ticket sales duration must be lower than max defined'\\n    error EXCEED_MAX_PERCENTAGE(); //'Percentage value must be lower than max allowed'\\n    error WRONG_DURATION_LIMITS(); //'The min duration must be lower than the max one'\\n}\\n\\n \",\"keccak256\":\"0xabbf916191947c0abfced2e0f6192b02499db87cd86ac82bea3d4e2774e52fea\",\"license\":\"MIT\"},\"src/libraries/helpers/ImplementationInterfaceNames.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary ImplementationInterfaceNames {\\n  bytes32 public constant AccessController = 'AccessController';\\n  bytes32 public constant RandomProvider = 'RandomProvider';\\n  bytes32 public constant NFTWhitelist = 'NFTWhitelist';\\n  bytes32 public constant RaffleFactory = 'RaffleFactory';\\n  bytes32 public constant ConfigManager = 'ConfigManager';\\n}\\n\",\"keccak256\":\"0x1a35beef3108a5ca0e22b033d45129013265ad1bcf5d03b96863854178d011ea\",\"license\":\"MIT\"},\"src/libraries/math/PercentageMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title PercentageMath library\\n * @author Aave\\n * @notice Provides functions to perform percentage calculations\\n * @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\\n * @dev Operations are rounded. If a value is >=.5, will be rounded up, otherwise rounded down.\\n */\\nlibrary PercentageMath {\\n  // Maximum percentage factor (100.00%)\\n  uint256 internal constant PERCENTAGE_FACTOR = 1e4;\\n\\n  // Half percentage factor (50.00%)\\n  uint256 internal constant HALF_PERCENTAGE_FACTOR = 0.5e4;\\n\\n  /**\\n   * @notice Executes a percentage multiplication\\n   * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328\\n   * @param value The value of which the percentage needs to be calculated\\n   * @param percentage The percentage of the value to be calculated\\n   * @return result value percentmul percentage\\n   */\\n  function percentMul(uint256 value, uint256 percentage) internal pure returns (uint256 result) {\\n    // to avoid overflow, value <= (type(uint256).max - HALF_PERCENTAGE_FACTOR) / percentage\\n    assembly {\\n      if iszero(\\n        or(\\n          iszero(percentage),\\n          iszero(gt(value, div(sub(not(0), HALF_PERCENTAGE_FACTOR), percentage)))\\n        )\\n      ) {\\n        revert(0, 0)\\n      }\\n\\n      result := div(add(mul(value, percentage), HALF_PERCENTAGE_FACTOR), PERCENTAGE_FACTOR)\\n    }\\n  }\\n\\n  /**\\n   * @notice Executes a percentage division\\n   * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328\\n   * @param value The value of which the percentage needs to be calculated\\n   * @param percentage The percentage of the value to be calculated\\n   * @return result value percentdiv percentage\\n   */\\n  function percentDiv(uint256 value, uint256 percentage) internal pure returns (uint256 result) {\\n    // to avoid overflow, value <= (type(uint256).max - halfPercentage) / PERCENTAGE_FACTOR\\n    assembly {\\n      if or(\\n        iszero(percentage),\\n        iszero(iszero(gt(value, div(sub(not(0), div(percentage, 2)), PERCENTAGE_FACTOR))))\\n      ) {\\n        revert(0, 0)\\n      }\\n\\n      result := div(add(mul(value, PERCENTAGE_FACTOR), div(percentage, 2)), percentage)\\n    }\\n  }\\n}\",\"keccak256\":\"0x479f88e5edb0608136cd8e4a1e3fa3360b54ef771cd197721afa8a2b95fb6547\",\"license\":\"MIT\"},\"src/libraries/types/ConfiguratorInputTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary ConfiguratorInputTypes {\\n    \\n    struct InitConfigManagerInput{\\n        uint256 protocolFeesPercentage;\\n        uint256 maxTicketSupplyAllowed;\\n        uint256 minTicketSalesDuration;\\n        uint256 maxTicketSalesDuration;\\n    }\\n    \\n}\",\"keccak256\":\"0x8830d981a407c05a0da1cf61cd84538038e793fc0f9b3a12092b9af6bb777955\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b0e380380610b0e83398101604081905261002f91610105565b80516127101015610053576040516350a8f55b60e11b815260040160405180910390fd5b80606001518160400151111561007c576040516303eddc2f60e21b815260040160405180910390fd5b80602001516000036100a1576040516398fccb2760e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03939093169290921790915560408051608081018252825180825260208085015190830181905283850151938301849052606094850151949092018490526001556002556003556004556101aa565b60008082840360a081121561011957600080fd5b83516001600160a01b038116811461013057600080fd5b92506080601f198201121561014457600080fd5b50604051608081016001600160401b038111828210171561017557634e487b7160e01b600052604160045260246000fd5b806040525060208401518152604084015160208201526060840151604082015260808401516060820152809150509250929050565b610955806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063922d59c711610071578063922d59c71461012d578063924a323914610135578063a22aa73c14610148578063b069d8d414610150578063b5ee6f8c14610163578063e1aaa5101461017657600080fd5b80631aba4c77146100ae5780632bafa11b146100ce5780632dc5faee146100f35780635c1f9392146101055780637be936671461011a575b600080fd5b600354600454604080519283526020830191909152015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c5565b6002545b6040519081526020016100c5565b61011861011336600461089b565b61017e565b005b61011861012836600461089b565b610354565b6004546100f7565b6000546100db906001600160a01b031681565b6001546100f7565b61011861015e36600461089b565b610522565b61011861017136600461089b565b6106f0565b6003546100f7565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe91906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906108fd565b6102f4576040516337ab45b760e01b815260040160405180910390fd5b600354821015610317576040516303eddc2f60e21b815260040160405180910390fd5b60048290556040518281527fec9aa96f5c01df3367d8bf559f54b8f3e820824ebdbbf21de024e1abd5249801906020015b60405180910390a15050565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d491906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044791906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad91906108fd565b6104ca576040516337ab45b760e01b815260040160405180910390fd5b6004548211156104ed576040516303eddc2f60e21b815260040160405180910390fd5b60038290556040518281527f92b7e0608ee052b48b518ee11571e667dadc4a5502eb107cec57e81d43a325dc90602001610348565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a291906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061591906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b91906108fd565b610698576040516337ab45b760e01b815260040160405180910390fd5b6127108211156106bb576040516350a8f55b60e11b815260040160405180910390fd5b60018290556040518281527fa379179b7c6ebd2bdfa1d438b72e256d0832023a395b3dc94e4a7d656118ae7190602001610348565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077091906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610825573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084991906108fd565b610866576040516337ab45b760e01b815260040160405180910390fd5b60028290556040518281527f7b3b5a1bcc706225ad01d4083196eb8e246429642b489ac878f3b2eead866aae90602001610348565b6000602082840312156108ad57600080fd5b5035919050565b6000602082840312156108c657600080fd5b81516001600160a01b03811681146108dd57600080fd5b9392505050565b6000602082840312156108f657600080fd5b5051919050565b60006020828403121561090f57600080fd5b815180151581146108dd57600080fdfea2646970667358221220f8b81124079346356c5e8261c213e4b232bd820ae4e23b90343f648560eed53664736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063922d59c711610071578063922d59c71461012d578063924a323914610135578063a22aa73c14610148578063b069d8d414610150578063b5ee6f8c14610163578063e1aaa5101461017657600080fd5b80631aba4c77146100ae5780632bafa11b146100ce5780632dc5faee146100f35780635c1f9392146101055780637be936671461011a575b600080fd5b600354600454604080519283526020830191909152015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c5565b6002545b6040519081526020016100c5565b61011861011336600461089b565b61017e565b005b61011861012836600461089b565b610354565b6004546100f7565b6000546100db906001600160a01b031681565b6001546100f7565b61011861015e36600461089b565b610522565b61011861017136600461089b565b6106f0565b6003546100f7565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe91906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906108fd565b6102f4576040516337ab45b760e01b815260040160405180910390fd5b600354821015610317576040516303eddc2f60e21b815260040160405180910390fd5b60048290556040518281527fec9aa96f5c01df3367d8bf559f54b8f3e820824ebdbbf21de024e1abd5249801906020015b60405180910390a15050565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d491906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044791906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad91906108fd565b6104ca576040516337ab45b760e01b815260040160405180910390fd5b6004548211156104ed576040516303eddc2f60e21b815260040160405180910390fd5b60038290556040518281527f92b7e0608ee052b48b518ee11571e667dadc4a5502eb107cec57e81d43a325dc90602001610348565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a291906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061591906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b91906108fd565b610698576040516337ab45b760e01b815260040160405180910390fd5b6127108211156106bb576040516350a8f55b60e11b815260040160405180910390fd5b60018290556040518281527fa379179b7c6ebd2bdfa1d438b72e256d0832023a395b3dc94e4a7d656118ae7190602001610348565b600080546040516302abf57960e61b81526f20b1b1b2b9b9a1b7b73a3937b63632b960811b60048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077091906108b4565b9050806001600160a01b03166391d14854826001600160a01b031663f87422546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906108e4565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610825573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084991906108fd565b610866576040516337ab45b760e01b815260040160405180910390fd5b60028290556040518281527f7b3b5a1bcc706225ad01d4083196eb8e246429642b489ac878f3b2eead866aae90602001610348565b6000602082840312156108ad57600080fd5b5035919050565b6000602082840312156108c657600080fd5b81516001600160a01b03811681146108dd57600080fd5b9392505050565b6000602082840312156108f657600080fd5b5051919050565b60006020828403121561090f57600080fd5b815180151581146108dd57600080fdfea2646970667358221220f8b81124079346356c5e8261c213e4b232bd820ae4e23b90343f648560eed53664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "maxTicketSalesDuration()": {
        "returns": {
          "_0": "Tthe max duration"
        }
      },
      "maxTicketSupplyAllowed()": {
        "returns": {
          "_0": "The max amount of ticket allowed"
        }
      },
      "minTicketSalesDuration()": {
        "returns": {
          "_0": "The min duration"
        }
      },
      "procolFeesPercentage()": {
        "returns": {
          "_0": "The fees percentage"
        }
      },
      "ticketSalesDurationLimits()": {
        "returns": {
          "maxDuration": "the maximum of time",
          "minDuration": "the minimum of time"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "maxTicketSalesDuration()": {
        "notice": "Get the max duration for the ticket sales"
      },
      "maxTicketSupplyAllowed()": {
        "notice": "Get the max ticket supply allowed for a raffle"
      },
      "minTicketSalesDuration()": {
        "notice": "Get the min duration for the ticket sales"
      },
      "procolFeesPercentage()": {
        "notice": "Get the fees percentage to apply on ticket sales amount"
      },
      "ticketSalesDurationLimits()": {
        "notice": "Get the limit of duration for the ticket sales"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4849,
        "contract": "src/core/ConfigManager.sol:ConfigManager",
        "label": "_implementationManager",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IImplementationManager)5701"
      },
      {
        "astId": 4852,
        "contract": "src/core/ConfigManager.sol:ConfigManager",
        "label": "_raffleConfigData",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(RaffleConfigData)4846_storage"
      }
    ],
    "types": {
      "t_contract(IImplementationManager)5701": {
        "encoding": "inplace",
        "label": "contract IImplementationManager",
        "numberOfBytes": "20"
      },
      "t_struct(RaffleConfigData)4846_storage": {
        "encoding": "inplace",
        "label": "struct ConfigManager.RaffleConfigData",
        "members": [
          {
            "astId": 4839,
            "contract": "src/core/ConfigManager.sol:ConfigManager",
            "label": "protocolFeesPercentage",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4841,
            "contract": "src/core/ConfigManager.sol:ConfigManager",
            "label": "maxTicketSupplyAllowed",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4843,
            "contract": "src/core/ConfigManager.sol:ConfigManager",
            "label": "minTicketSalesDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4845,
            "contract": "src/core/ConfigManager.sol:ConfigManager",
            "label": "maxTicketSalesDuration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}