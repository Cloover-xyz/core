{"id":"e59228e460a93ee04a9c76cb8790402b","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 /* firstTokenId */,\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"src/core/AccessController.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\";\n\ncontract AccessController is AccessControl {\n  //----------------------------------------\n  // Roles\n  //----------------------------------------\n  bytes32 public constant MAINTAINER_ROLE = keccak256(\"MAINTAINER_ROLE\");\n\n  constructor(address maintainer) {\n    _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    _setupRole(MAINTAINER_ROLE, maintainer);\n  }\n}"},"src/core/ImplementationManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {IAccessController} from \"../interfaces/IAccessController.sol\";\nimport {IImplementationManager} from \"../interfaces/IImplementationManager.sol\";\n\nimport {ImplementationInterfaceNames} from \"../libraries/helpers/ImplementationInterfaceNames.sol\";\nimport {Errors} from \"../libraries/helpers/Errors.sol\";\n\ncontract ImplementationManager is IImplementationManager{\n\n  //----------------------------------------\n  // Storage\n  //----------------------------------------\n\n  mapping(bytes32 => address) public interfacesImplemented;\n\n  //----------------------------------------\n  // Events\n  //----------------------------------------\n\n  event InterfaceImplementationChanged(\n      bytes32 indexed interfaceName,\n      address indexed newImplementationAddress\n  );\n\n  //----------------------------------------\n  // Modifiers\n  //----------------------------------------\n\n  modifier onlyMaintainer() {\n      IAccessController accessController = IAccessController(interfacesImplemented[ImplementationInterfaceNames.AccessController]);\n      if(!accessController.hasRole(accessController.MAINTAINER_ROLE(), msg.sender)) revert Errors.NOT_MAINTAINER();\n      _;\n  }\n\n  //----------------------------------------\n  // Initialization function\n  //----------------------------------------\n  constructor(address _accessController) {\n      interfacesImplemented[ImplementationInterfaceNames.AccessController] = _accessController;\n  }\n\n  //----------------------------------------\n  // Externals functions\n  //----------------------------------------\n\n  /// @inheritdoc IImplementationManager\n  function changeImplementationAddress(\n    bytes32 interfaceName,\n    address implementationAddress\n  ) external override onlyMaintainer {\n    interfacesImplemented[interfaceName] = implementationAddress;\n\n    emit InterfaceImplementationChanged(interfaceName, implementationAddress);\n  }\n\n  /// @inheritdoc IImplementationManager\n  function getImplementationAddress(bytes32 interfaceName)\n    external\n    view\n    override\n    returns (address implementationAddress)\n  {\n    implementationAddress = interfacesImplemented[interfaceName];\n    if(implementationAddress == address(0x0)) revert Errors.IMPLEMENTATION_NOT_FOUND();\n  }\n\n}"},"src/interfaces/IAccessController.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {IAccessControl} from \"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\";\n\ninterface IAccessController is IAccessControl {\n  function MAINTAINER_ROLE() external view returns (bytes32);\n  function MANAGER_ROLE() external view returns (bytes32);\n\n}"},"src/interfaces/IImplementationManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ninterface IImplementationManager{\n    /**\n     * @notice Updates the address of the contract that implements `interfaceName`.\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n     * @param implementationAddress address of the deployed contract that implements the interface.\n     */\n    function changeImplementationAddress(\n        bytes32 interfaceName,\n        address implementationAddress\n    ) external;\n\n  /**\n   * @notice Gets the address of the contract that implements the given `interfaceName`.\n   * @param interfaceName queried interface.\n   * @return implementationAddress Address of the deployed contract that implements the interface.\n   */\n  function getImplementationAddress(bytes32 interfaceName)\n    external\n    view\n    returns (address implementationAddress);\n\n}"},"src/interfaces/IRaffle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ninterface IRaffle {\n\n    /**\n     * @notice Allows users to purchase tickets\n     * @dev Only accessible if raffle still open to particpants\n     * @param nbOfTickets number of tickets purchased\n     */\n    function purchaseTickets(uint256 nbOfTickets) external;\n\n    /**\n     * @notice Allows the winner to claim his price\n     * @dev Ticket number must be draw and raffle close to new participants\n     */\n    function claimPrice() external;\n    \n    /**\n     * @notice Allows the creator to claim the amount related to the ticket sales\n     * @dev The functions should send to the creator his part after fees\n     */\n    function claimTicketSalesAmount() external;\n    \n    /**\n     * @notice Allows to drawn a ticket randommly\n     */\n    function drawnTicket() external;\n}"},"src/libraries/helpers/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/**\n * @title Errors library\n * @notice Defines the error messages emitted by the different contracts of the protocol\n */\nlibrary Errors {\n    error BE_ADDRESS_0(); // 'Address must be address(0)'\n    error NOT_ADDRESS_0(); // 'Address must not be address(0)'\n    error RAFFLE_CLOSE(); // 'Current timestamps greater or equal than the close time'\n    error RAFFLE_STILL_OPEN(); // 'Current timestamps lesser or equal than the close time'\n    error CANT_BE_ZERO(); // 'Value can't must be higher than 0'\n    error MAX_TICKET_SUPPLY_EXCEEDED(); // 'Maximum amount of ticket sold for the raffle has been reached'\n    error NOT_ENOUGH_BALANCE(); // 'Balance lower than required'\n    error MSG_SENDER_NOT_WINNER(); // 'msg.sender is not winner address'\n    error NOT_CREATOR(); // 'msg.sender is not the creator of the raffle'\n    error TICKET_NOT_DRAWN(); // 'ticket must be drawn'\n    error TICKET_ALREADY_DRAWN(); // 'ticket has already be drawn'\n    error NOT_MAINTAINER(); // 'Caller is not the maintainer'\n    error IMPLEMENTATION_NOT_FOUND(); // 'Implementation interfaces is not registered'\n}\n\n "},"src/libraries/helpers/ImplementationInterfaceNames.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nlibrary ImplementationInterfaceNames {\n  bytes32 public constant AccessController = 'AccessController';\n}\n"},"src/mocks/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {ERC20} from \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockERC20 is ERC20 {\n\n  uint8 private decimals_;\n  constructor(\n    string memory _name,\n    string memory _symbol,\n    uint8 _decimals\n  ) ERC20(_name, _symbol) {\n    decimals_ = _decimals;\n  }\n\n  function mint(address account, uint256 amount) public {\n    _mint(account, amount);\n  }\n\n  function burn(address account, uint256 amount) public {\n    _burn(account, amount);\n  }\n\n  function decimals() public view virtual override returns (uint8) {\n        return decimals_;\n  }\n}"},"src/mocks/MockERC721.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {ERC721} from \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\";\n\ncontract MockERC721 is ERC721 {\n\n  constructor(\n    string memory _name,\n    string memory _symbol\n  ) ERC721(_name, _symbol) {}\n\n  function mint(address to, uint256 tokenId) public {\n    _safeMint(to, tokenId);\n  }\n\n}"},"src/raffle/Raffle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {Initializable} from \"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\";\nimport {IERC20} from \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport {IERC721} from \"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\";\n\nimport {Errors} from \"../libraries/helpers/Errors.sol\";\nimport {IRaffle} from \"../interfaces/IRaffle.sol\";\n\nimport {RaffleDataTypes} from \"./RaffleDataTypes.sol\";\nimport {RaffleStorage} from \"./RaffleStorage.sol\";\n \ncontract Raffle is IRaffle, RaffleStorage, Initializable {\n\n    //----------------------------------------\n    // Events\n    //----------------------------------------\n\n    event NewRaffle(address indexed raffleContract, RaffleDataTypes.RaffleData globalData);\n    event TicketPurchased(address indexed raffleContract, address indexed buyer, uint256[] ticketNumbers);\n    event WinnerClaimedPrice(address indexed raffleContract, address indexed winner, address indexed nftContract, uint256 nftId);\n    event CreatorClaimTicketSalesAmount(address indexed raffleContract, address indexed winner, uint256 amountReceived);\n    event WinningTicketDrawned(address indexed raffleContract, uint256 winningTicket);\n      \n    //----------------------------------------\n    // Modifier\n    //----------------------------------------\n\n    modifier ticketSalesOpen() {\n        if(block.timestamp >= _globalData.endTime) revert Errors.RAFFLE_CLOSE();\n        _;\n    }\n    modifier ticketSalesClose() {\n        if(block.timestamp < _globalData.endTime) revert Errors.RAFFLE_STILL_OPEN();\n        _;\n    }\n\n    modifier ticketHasNotBeDrawn(){\n        if(isTicketDrawn()) revert Errors.TICKET_ALREADY_DRAWN();\n        _;\n    }\n\n    modifier ticketHasBeDrawn(){\n        if(!isTicketDrawn()) revert Errors.TICKET_NOT_DRAWN();\n        _;\n    }\n\n    //----------------------------------------\n    // Initialize function\n    //----------------------------------------\n    function initialize(RaffleDataTypes.InitRaffleParams memory _data) external initializer {\n        _data.nftContract.transferFrom(_data.creator, address(this), _data.nftId);\n\n        _globalData.creator = _data.creator;\n        _globalData.purchaseCurrency = _data.purchaseCurrency;\n        _globalData.nftContract = _data.nftContract;\n        _globalData.nftId = _data.nftId;\n        _globalData.maxTicketSupply = _data.maxTicketSupply;\n        _globalData.ticketPrice = _data.ticketPrice;\n        _globalData.endTime = uint64(block.timestamp) + _data.endTime;\n\n        emit NewRaffle(address(this), _globalData);\n    }\n\n    //----------------------------------------\n    // Externals Functions\n    //----------------------------------------\n\n    /// @inheritdoc IRaffle\n    function purchaseTickets(uint256 nbOfTickets) external override ticketSalesOpen(){\n        if(nbOfTickets == 0) revert Errors.CANT_BE_ZERO();\n        if(totalSupply() + nbOfTickets > _globalData.maxTicketSupply) revert Errors.MAX_TICKET_SUPPLY_EXCEEDED();\n        if(_calculateTotalTicketsPrice(nbOfTickets) > _globalData.purchaseCurrency.balanceOf(msg.sender)) revert Errors.NOT_ENOUGH_BALANCE();\n        \n        _globalData.purchaseCurrency.transferFrom(msg.sender, address(this), _calculateTotalTicketsPrice(nbOfTickets));\n\n        uint256[] storage ownerTickets = _ownerTickets[msg.sender];\n        uint256 ticketNumber = _globalData.ticketSupply;\n\n        uint256[] memory ticketsPurchased = new uint256[](nbOfTickets);\n        for(uint i; i<nbOfTickets; ){\n            ticketsPurchased[i] = ticketNumber;\n            ownerTickets.push(ticketNumber);\n            _ticketOwner[ticketNumber] = msg.sender;\n            unchecked {\n                ++ticketNumber;\n                ++i;\n            }\n        }\n        _globalData.ticketSupply = ticketNumber;\n        emit TicketPurchased(address(this), msg.sender, ticketsPurchased);\n    }\n\n    /// @inheritdoc IRaffle\n    function drawnTicket() external override ticketSalesClose() ticketHasNotBeDrawn() {\n        uint256 randomNumber = uint256(blockhash(block.number - 1));\n        _globalData.winningTicketNumber = (randomNumber % _globalData.ticketSupply);\n        _globalData.isTicketDrawn = true;\n        emit WinningTicketDrawned(address(this), _globalData.winningTicketNumber );\n    }\n\n    /// @inheritdoc IRaffle\n    function claimPrice() external override ticketSalesClose() ticketHasBeDrawn(){\n        if(msg.sender != winnerAddress()) revert Errors.MSG_SENDER_NOT_WINNER();\n        _globalData.nftContract.safeTransferFrom(address(this), msg.sender,_globalData.nftId);\n        emit WinnerClaimedPrice(address(this), msg.sender, address(_globalData.nftContract), _globalData.nftId);\n    }\n\n    /// @inheritdoc IRaffle\n    function claimTicketSalesAmount() external override ticketSalesClose() ticketHasBeDrawn(){\n        if(msg.sender != creator()) revert Errors.NOT_CREATOR();\n        uint256 amount = _globalData.purchaseCurrency.balanceOf(address(this));\n        _globalData.purchaseCurrency.transfer(msg.sender, amount);\n        emit CreatorClaimTicketSalesAmount(address(this), msg.sender, amount);\n    }\n\n    /**\n    * @notice get the total amount of tickets sold\n    * @return The total amount of tickets sold\n    */\n    function totalSupply() public view returns(uint256) {\n        return _globalData.ticketSupply;\n    }\n\n    /**\n    * @notice get the max amount of tickets that can be sold\n    * @return The total amount of tickets sold\n    */\n    function maxSupply() public view returns(uint256) {\n        return _globalData.maxTicketSupply;\n    }\n\n    /**\n    * @notice get the address of the wallet that initiated the raffle\n    * @return The address of the creator\n    */\n    function creator() public view returns(address) {\n        return _globalData.creator;\n    }\n\n    /**\n    * @notice get the address of the token used to buy tickets\n    * @return The address of the ERC20\n    */\n    function purchaseCurrency() public view returns(IERC20) {\n        return _globalData.purchaseCurrency;\n    }\n\n    /**\n    * @notice get the price of one ticket\n    * @return The amount of token that one ticket cost\n    */\n    function ticketPrice() public view returns(uint256) {\n        return _globalData.ticketPrice;\n    }\n\n   /**\n    * @notice get the end time before ticket sales closing\n    * @return The time in timestamps\n    */\n    function endTime() public view returns(uint64) {\n        return _globalData.endTime;\n    }\n    \n    /**\n    * @notice get the winning ticket number\n    * @dev revert if ticket sales not close and if ticket number hasn't be drawn\n    * @return The ticket number that win the raffle\n    */\n    function winningTicket() public ticketSalesClose() ticketHasBeDrawn() view returns(uint256) {\n        return _globalData.winningTicketNumber;\n    }\n    \n    /**\n    * @notice get the winner address\n    * @dev revert if ticket sales not close and if ticket number hasn't be drawn\n    * @return The address of the wallet that won the raffle\n    */\n    function winnerAddress() public ticketSalesClose() ticketHasBeDrawn() view returns(address) {\n        return _ticketOwner[_globalData.winningTicketNumber];\n    }\n\n    /**\n    * @notice get the information regarding the nft to win\n    * @return nftContractAddress The address of the nft\n    * @return nftId The id of the nft\n    */\n    function nftToWin() public view returns(IERC721 nftContractAddress, uint256 nftId) {\n        return (_globalData.nftContract, _globalData.nftId);\n    }\n\n    /**\n    * @notice get info if the winning ticket has been drawn\n    * @return True if ticket has been drawn, False otherwise\n    */\n    function isTicketDrawn() public view returns(bool) {\n        return _globalData.isTicketDrawn;\n    }\n\n    /**\n    * @notice get all tickets number bought by a user\n    * @return True if ticket has been drawn, False otherwise\n    */\n    function balanceOf(address user) external view returns(uint256[] memory){\n        return _ownerTickets[user];\n    }\n\n     /**\n    * @notice get the wallet that bought a specific ticket number\n    * @return The address that bought the own the ticket\n    */\n    function ownerOf(uint256 id) external view returns(address){\n        return _ticketOwner[id];\n    }\n\n    //----------------------------------------\n    // Internals Functions\n    //----------------------------------------\n\n    /**\n    * @notice calculate the total price that must be paid regarding the amount of tickets to buy\n    * @return amountPrice the total cost\n    */\n    function _calculateTotalTicketsPrice(uint256 nbOfTickets) internal view returns(uint256 amountPrice) {\n        amountPrice = _globalData.ticketPrice * nbOfTickets;\n    }\n}"},"src/raffle/RaffleDataTypes.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {IERC20} from \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport {IERC721} from \"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\";\n\nlibrary RaffleDataTypes {\n\n    struct RaffleData {\n        address creator;\n        IERC20 purchaseCurrency;\n        IERC721 nftContract;\n        uint256 nftId;\n        uint256 maxTicketSupply;\n        uint256 ticketSupply;\n        uint256 ticketPrice;\n        uint256 winningTicketNumber;\n        uint64 endTime;\n        bool isTicketDrawn;\n    }\n\n    struct InitRaffleParams {\n        address creator;\n        IERC20 purchaseCurrency;\n        IERC721 nftContract;\n        uint256 nftId;\n        uint256 maxTicketSupply;\n        uint256 ticketPrice;\n        uint64 endTime;\n    }\n}"},"src/raffle/RaffleStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {RaffleDataTypes} from './RaffleDataTypes.sol';\n\n/**\n * @title RaffleStorage\n * @notice Contract used as storage of the Raffle contract.\n * @dev It defines the storage layout of the Raffle contract.\n */\ncontract RaffleStorage {\n\n    // Mapping from ticket ID to owner address\n    mapping(uint256 => address) internal _ticketOwner;\n\n    // Mapping owner address to tickets list\n    mapping(address => uint256[]) internal _ownerTickets;\n\n    RaffleDataTypes.RaffleData internal _globalData;\n\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true},"libraries":{"":{"__CACHE_BREAKER__":"0x0000000000000031363735363136353632333631"}}}},"output":{"sources":{"lib/openzeppelin-contracts/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[2705],"ERC165":[2958],"IAccessControl":[388],"IERC165":[2970],"Math":[3836],"SignedMath":[3941],"Strings":[2934]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2706,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2935,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2959,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1857:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"1857:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1857:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1866:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1866:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1866:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1882:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"1882:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1882:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1550:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,2958,2970,388,2705],"name":"AccessControl","nameLocation":"1840:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1946:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1921:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1929:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1921:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1940:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1971:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1963:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1963:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1902:8:0","nodeType":"StructDefinition","scope":315,"src":"1895:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2030:6:0","nodeType":"VariableDeclaration","scope":315,"src":"1993:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2001:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1993:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2012:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2012:8:0"},"referencedDeclaration":19,"src":"2012:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2067:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2043:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2043:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2511:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2532:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2521:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2521:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2547:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2099:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2488:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2505:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2497:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2497:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2496:14:0"},"src":"2479:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2957],"body":{"id":59,"nodeType":"Block","src":"2713:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2730:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2750:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2745:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2745:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2766:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2745:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2730:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2805:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2781:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2787:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2957,"src":"2781:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2781:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2730:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2723:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2561:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2631:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2689:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2656:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2649:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2649:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2648:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2707:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2707:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2706:6:0"},"scope":315,"src":"2622:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3003:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3027:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3020:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3033:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3020:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3041:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3020:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3013:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2830:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2920:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2979:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2936:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2928:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2928:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2950:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2942:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2942:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2927:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2997:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2997:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2996:6:0"},"scope":315,"src":"2911:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3406:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3427:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"3433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3416:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3416:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3062:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3359:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3378:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3369:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3406:0:0"},"scope":315,"src":"3350:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3807:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3821:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3830:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3836:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3822:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3817:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3846:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3954:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"4005:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2934_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4013:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"4005:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4005:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4059:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4132:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4124:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"4104:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2934_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2888,"src":"4104:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4104:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3912:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3916:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3912:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3884:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3884:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3884:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3860:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3860:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3459:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3743:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3762:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3754:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3754:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3776:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3768:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3768:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3753:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3807:0:0"},"scope":315,"src":"3734:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4477:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4494:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4501:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4494:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4507:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4494:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4487:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4219:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4403:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4450:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4424:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4416:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4415:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4468:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:9:0"},"scope":315,"src":"4394:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"4922:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4943:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4949:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4932:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4932:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4932:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4529:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4915:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4902:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4902:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4893:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4893:8:0"},"nodeType":"ModifierInvocation","src":"4893:28:0"}],"name":"grantRole","nameLocation":"4828:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4884:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4846:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4838:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4838:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4860:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4852:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4837:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4922:0:0"},"scope":315,"src":"4819:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5348:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5370:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5376:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5358:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5358:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4970:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5328:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5319:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5319:8:0"},"nodeType":"ModifierInvocation","src":"5319:28:0"}],"name":"revokeRole","nameLocation":"5253:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5310:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5272:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5264:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5286:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5278:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5278:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5263:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5348:0:0"},"scope":315,"src":"5244:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6005:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6023:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"6034:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6034:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6023:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6048:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6015:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6015:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6121:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6127:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6109:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6109:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6109:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5397:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5937:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"5996:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"5958:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5950:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5950:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"5972:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5964:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"5964:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5949:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6005:0:0"},"scope":315,"src":"5928:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"6895:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6916:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6922:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6905:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6905:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"6905:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6148:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6836:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6855:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6869:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6846:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6895:0:0"},"scope":315,"src":"6827:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7135:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7153:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7145:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7145:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7186:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7173:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7173:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7145:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7201:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7208:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7201:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7214:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7201:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7226:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7201:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7201:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7267:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7273:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7292:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7250:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7250:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7245:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6943:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7071:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7093:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7085:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7085:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7107:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7099:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7099:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7084:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7135:0:0"},"scope":315,"src":"7062:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7545:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7559:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7568:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7560:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7555:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7584:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7598:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7605:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7598:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7611:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7598:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7619:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7598:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7630:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7598:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7598:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7665:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7671:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"7680:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7680:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7653:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7653:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7648:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7315:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7486:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7505:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7497:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7497:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7519:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7496:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7545:0:0"},"scope":315,"src":"7477:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"7950:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7972:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7978:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7964:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"7960:149:0","trueBody":{"id":311,"nodeType":"Block","src":"7988:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8002:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8009:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8002:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8015:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8002:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8023:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8002:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8034:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8002:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8002:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8070:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8076:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"8085:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8058:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8058:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8053:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7716:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7890:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"7910:4:0","nodeType":"VariableDeclaration","scope":314,"src":"7902:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"7924:7:0","nodeType":"VariableDeclaration","scope":314,"src":"7916:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"7916:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7901:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"7950:0:0"},"scope":315,"src":"7881:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1822:6295:0","usedErrors":[]}],"src":"108:8010:0"},"id":0},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[2683],"Initializable":[557]},"id":558,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":558,"sourceUnit":2684,"src":"138:33:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"173:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":557,"linearizedBaseContracts":[557],"name":"Initializable","nameLocation":"2401:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"2421:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":395,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:2","nodeType":"VariableDeclaration","scope":557,"src":"2535:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":394,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2568:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":398,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:2","nodeType":"VariableDeclaration","scope":557,"src":"2664:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"2697:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":403,"name":"Initialized","nameLocation":"2798:11:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:2","nodeType":"VariableDeclaration","scope":403,"src":"2810:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":400,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:2"},"src":"2792:33:2"},{"body":{"id":458,"nodeType":"Block","src":"3258:472:2","statements":[{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:2","nodeType":"VariableDeclaration","scope":458,"src":"3268:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":406,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":410,"initialValue":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:2","subExpression":{"id":408,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3291:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3336:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":413,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3354:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:34:2","subExpression":{"arguments":[{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3404:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$557","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$557","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3396:7:2","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":418,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3377:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2683_$","typeString":"type(library Address)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2371,"src":"3377:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":426,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3414:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3430:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3414:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:97:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3446:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:190:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"3314:190:2"},{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":435,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3514:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3529:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3514:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":438,"nodeType":"ExpressionStatement","src":"3514:16:2"},{"condition":{"id":439,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3544:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":445,"nodeType":"IfStatement","src":"3540:65:2","trueBody":{"id":444,"nodeType":"Block","src":"3560:45:2","statements":[{"expression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":440,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3574:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3574:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"ExpressionStatement","src":"3574:20:2"}]}},{"id":446,"nodeType":"PlaceholderStatement","src":"3614:1:2"},{"condition":{"id":447,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3629:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":457,"nodeType":"IfStatement","src":"3625:99:2","trueBody":{"id":456,"nodeType":"Block","src":"3645:79:2","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":448,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3659:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3675:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3659:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":451,"nodeType":"ExpressionStatement","src":"3659:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3711:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":452,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3699:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3699:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"EmitStatement","src":"3694:19:2"}]}}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"2831:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":459,"name":"initializer","nameLocation":"3244:11:2","nodeType":"ModifierDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"3255:2:2"},"src":"3235:495:2","virtual":false,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"4841:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4859:14:2","subExpression":{"id":465,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4860:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4877:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":468,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4892:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4877:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4859:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4901:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4851:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"4851:99:2"},{"expression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":474,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4960:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":475,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4975:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4960:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":477,"nodeType":"ExpressionStatement","src":"4960:22:2"},{"expression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":478,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4992:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5008:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4992:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":481,"nodeType":"ExpressionStatement","src":"4992:20:2"},{"id":482,"nodeType":"PlaceholderStatement","src":"5022:1:2"},{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":483,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5033:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5049:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5033:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":486,"nodeType":"ExpressionStatement","src":"5033:21:2"},{"eventCall":{"arguments":[{"id":488,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5081:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":487,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"5069:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"EmitStatement","src":"5064:25:2"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"3736:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":492,"name":"reinitializer","nameLocation":"4812:13:2","nodeType":"ModifierDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"version","nameLocation":"4832:7:2","nodeType":"VariableDeclaration","scope":492,"src":"4826:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":461,"name":"uint8","nodeType":"ElementaryTypeName","src":"4826:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4825:15:2"},"src":"4803:293:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"5334:97:2","statements":[{"expression":{"arguments":[{"id":496,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5352:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5367:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5344:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5344:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"5344:69:2"},{"id":500,"nodeType":"PlaceholderStatement","src":"5423:1:2"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"5102:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":502,"name":"onlyInitializing","nameLocation":"5315:16:2","nodeType":"ModifierDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"5331:2:2"},"src":"5306:125:2","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"5966:231:2","statements":[{"expression":{"arguments":[{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5984:14:2","subExpression":{"id":507,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5985:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6000:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5976:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"5976:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6056:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6077:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":514,"name":"uint8","nodeType":"ElementaryTypeName","src":"6077:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":513,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6072:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6072:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6084:3:2","memberName":"max","nodeType":"MemberAccess","src":"6072:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6056:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"6052:139:2","trueBody":{"id":535,"nodeType":"Block","src":"6089:102:2","statements":[{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6103:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6123:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":521,"name":"uint8","nodeType":"ElementaryTypeName","src":"6123:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6118:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6118:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6130:3:2","memberName":"max","nodeType":"MemberAccess","src":"6118:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6103:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":526,"nodeType":"ExpressionStatement","src":"6103:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6169:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":529,"name":"uint8","nodeType":"ElementaryTypeName","src":"6169:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":528,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6164:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6164:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6176:3:2","memberName":"max","nodeType":"MemberAccess","src":"6164:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":527,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6152:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"EmitStatement","src":"6147:33:2"}]}}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"5437:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5926:20:2","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"5946:2:2"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"5966:0:2"},"scope":557,"src":"5917:280:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"6371:36:2","statements":[{"expression":{"id":544,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6388:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":543,"id":545,"nodeType":"Return","src":"6381:19:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"6203:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6316:22:2","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"6338:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":547,"src":"6364:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":541,"name":"uint8","nodeType":"ElementaryTypeName","src":"6364:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6363:7:2"},"scope":557,"src":"6307:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"6579:37:2","statements":[{"expression":{"id":553,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6596:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":552,"id":554,"nodeType":"Return","src":"6589:20:2"}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"6413:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6532:15:2","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"6547:2:2"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"6573:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"6573:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6572:6:2"},"scope":557,"src":"6523:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":558,"src":"2383:4235:2","usedErrors":[]}],"src":"113:6506:2"},"id":2},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2705],"ERC20":[1144],"IERC20":[1222],"IERC20Metadata":[1247]},"id":1145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":559,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1145,"sourceUnit":1223,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":561,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1145,"sourceUnit":1248,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1145,"sourceUnit":2706,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":564,"name":"Context","nameLocations":["1550:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"1550:7:3"},"id":565,"nodeType":"InheritanceSpecifier","src":"1550:7:3"},{"baseName":{"id":566,"name":"IERC20","nameLocations":["1559:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1559:6:3"},"id":567,"nodeType":"InheritanceSpecifier","src":"1559:6:3"},{"baseName":{"id":568,"name":"IERC20Metadata","nameLocations":["1567:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"1567:14:3"},"id":569,"nodeType":"InheritanceSpecifier","src":"1567:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"230:1301:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1144,"linearizedBaseContracts":[1144,1247,1222,2705],"name":"ERC20","nameLocation":"1541:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":573,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:3","nodeType":"VariableDeclaration","scope":1144,"src":"1588:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":572,"keyType":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":579,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:3","nodeType":"VariableDeclaration","scope":1144,"src":"1640:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":578,"keyType":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":577,"keyType":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":581,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:3","nodeType":"VariableDeclaration","scope":1144,"src":"1714:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":583,"mutability":"mutable","name":"_name","nameLocation":"1764:5:3","nodeType":"VariableDeclaration","scope":1144,"src":"1749:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":582,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":585,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:3","nodeType":"VariableDeclaration","scope":1144,"src":"1775:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":584,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":601,"nodeType":"Block","src":"2036:57:3","statements":[{"expression":{"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":593,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2046:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":594,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"2054:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":596,"nodeType":"ExpressionStatement","src":"2046:13:3"},{"expression":{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":597,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2069:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":598,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2079:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":600,"nodeType":"ExpressionStatement","src":"2069:17:3"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"1804:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":602,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"name_","nameLocation":"2006:5:3","nodeType":"VariableDeclaration","scope":602,"src":"1992:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":587,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:3","nodeType":"VariableDeclaration","scope":602,"src":"2013:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":589,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:3"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"2036:0:3"},"scope":1144,"src":"1980:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1234],"body":{"id":611,"nodeType":"Block","src":"2227:29:3","statements":[{"expression":{"id":609,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2244:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":608,"id":610,"nodeType":"Return","src":"2237:12:3"}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"2099:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:3","nodeType":"FunctionDefinition","overrides":{"id":605,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:3"},"parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"2171:2:3"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"2212:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":606,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:3"},"scope":1144,"src":"2158:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1240],"body":{"id":621,"nodeType":"Block","src":"2440:31:3","statements":[{"expression":{"id":619,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2457:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":618,"id":620,"nodeType":"Return","src":"2450:14:3"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"2262:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:3","nodeType":"FunctionDefinition","overrides":{"id":615,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:3"},"parameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"2384:2:3"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":622,"src":"2425:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":616,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:3"},"scope":1144,"src":"2369:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1246],"body":{"id":631,"nodeType":"Block","src":"3169:26:3","statements":[{"expression":{"hexValue":"3138","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":628,"id":630,"nodeType":"Return","src":"3179:9:3"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"2477:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:3","nodeType":"FunctionDefinition","overrides":{"id":625,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:3"},"parameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"3121:2:3"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"3162:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":626,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:3"},"scope":1144,"src":"3104:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1171],"body":{"id":641,"nodeType":"Block","src":"3325:36:3","statements":[{"expression":{"id":639,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"3342:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":638,"id":640,"nodeType":"Return","src":"3335:19:3"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"3201:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":642,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:3","nodeType":"FunctionDefinition","overrides":{"id":635,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:3"},"parameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"3275:2:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":642,"src":"3316:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:3"},"scope":1144,"src":"3255:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1179],"body":{"id":655,"nodeType":"Block","src":"3502:42:3","statements":[{"expression":{"baseExpression":{"id":651,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3519:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":653,"indexExpression":{"id":652,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"3529:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":650,"id":654,"nodeType":"Return","src":"3512:25:3"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"3367:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":656,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:3","nodeType":"FunctionDefinition","overrides":{"id":647,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:3"},"parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"account","nameLocation":"3446:7:3","nodeType":"VariableDeclaration","scope":656,"src":"3438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:3"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"3493:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:3"},"scope":1144,"src":"3419:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1189],"body":{"id":680,"nodeType":"Block","src":"3825:104:3","statements":[{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"3843:5:3","nodeType":"VariableDeclaration","scope":680,"src":"3835:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":671,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":669,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"3851:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:3"},{"expression":{"arguments":[{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3883:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"3890:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"3894:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3873:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"3873:28:3"},{"expression":{"hexValue":"74727565","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":666,"id":679,"nodeType":"Return","src":"3911:11:3"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"3550:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:3","nodeType":"FunctionDefinition","overrides":{"id":663,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:3"},"parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"3766:2:3","nodeType":"VariableDeclaration","scope":681,"src":"3758:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"amount","nameLocation":"3778:6:3","nodeType":"VariableDeclaration","scope":681,"src":"3770:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:3"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"3819:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":664,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:3"},"scope":1144,"src":"3740:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1199],"body":{"id":698,"nodeType":"Block","src":"4085:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":692,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4102:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":694,"indexExpression":{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4114:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":696,"indexExpression":{"id":695,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"4121:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":691,"id":697,"nodeType":"Return","src":"4095:34:3"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"3935:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":699,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:3","nodeType":"FunctionDefinition","overrides":{"id":688,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:3"},"parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"owner","nameLocation":"4014:5:3","nodeType":"VariableDeclaration","scope":699,"src":"4006:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"spender","nameLocation":"4029:7:3","nodeType":"VariableDeclaration","scope":699,"src":"4021:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":699,"src":"4076:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:3"},"scope":1144,"src":"3987:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1209],"body":{"id":723,"nodeType":"Block","src":"4533:108:3","statements":[{"assignments":[711],"declarations":[{"constant":false,"id":711,"mutability":"mutable","name":"owner","nameLocation":"4551:5:3","nodeType":"VariableDeclaration","scope":723,"src":"4543:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":712,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4559:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:3"},{"expression":{"arguments":[{"id":716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"4597:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"4606:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":715,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4581:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"4581:32:3"},{"expression":{"hexValue":"74727565","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":709,"id":722,"nodeType":"Return","src":"4623:11:3"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"4142:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:3","nodeType":"FunctionDefinition","overrides":{"id":706,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:3"},"parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"4469:7:3","nodeType":"VariableDeclaration","scope":724,"src":"4461:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"amount","nameLocation":"4486:6:3","nodeType":"VariableDeclaration","scope":724,"src":"4478:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"4527:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":707,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:3"},"scope":1144,"src":"4444:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1221],"body":{"id":756,"nodeType":"Block","src":"5306:153:3","statements":[{"assignments":[738],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"spender","nameLocation":"5324:7:3","nodeType":"VariableDeclaration","scope":756,"src":"5316:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":741,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":739,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5334:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:3"},{"expression":{"arguments":[{"id":743,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5372:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"5378:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"5387:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5356:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"5356:38:3"},{"expression":{"arguments":[{"id":749,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5414:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"5420:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"5424:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":748,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"5404:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"5404:27:3"},{"expression":{"hexValue":"74727565","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":736,"id":755,"nodeType":"Return","src":"5441:11:3"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4647:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":757,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:3","nodeType":"FunctionDefinition","overrides":{"id":733,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:3"},"parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"from","nameLocation":"5233:4:3","nodeType":"VariableDeclaration","scope":757,"src":"5225:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"to","nameLocation":"5247:2:3","nodeType":"VariableDeclaration","scope":757,"src":"5239:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"amount","nameLocation":"5259:6:3","nodeType":"VariableDeclaration","scope":757,"src":"5251:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:3"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"5300:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":734,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:3"},"scope":1144,"src":"5203:256:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":785,"nodeType":"Block","src":"5948:140:3","statements":[{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"owner","nameLocation":"5966:5:3","nodeType":"VariableDeclaration","scope":785,"src":"5958:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5974:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:3"},{"expression":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6005:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6012:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":776,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6031:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":775,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"6021:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":779,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"6049:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5996:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"ExpressionStatement","src":"5996:64:3"},{"expression":{"hexValue":"74727565","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":766,"id":784,"nodeType":"Return","src":"6070:11:3"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"5465:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:3","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"spender","nameLocation":"5889:7:3","nodeType":"VariableDeclaration","scope":786,"src":"5881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:3","nodeType":"VariableDeclaration","scope":786,"src":"5898:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:3"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"5942:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":764,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:3"},"scope":1144,"src":"5854:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":826,"nodeType":"Block","src":"6674:328:3","statements":[{"assignments":[797],"declarations":[{"constant":false,"id":797,"mutability":"mutable","name":"owner","nameLocation":"6692:5:3","nodeType":"VariableDeclaration","scope":826,"src":"6684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":800,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":798,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"6700:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:3"},{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:3","nodeType":"VariableDeclaration","scope":826,"src":"6722:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":807,"initialValue":{"arguments":[{"id":804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6759:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6766:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":803,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"6749:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"6792:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":810,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6812:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"6784:85:3"},{"id":823,"nodeType":"UncheckedBlock","src":"6879:95:3","statements":[{"expression":{"arguments":[{"id":816,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6912:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6919:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"6928:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":819,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6947:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6903:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"ExpressionStatement","src":"6903:60:3"}]},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":795,"id":825,"nodeType":"Return","src":"6984:11:3"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"6094:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:3","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"spender","nameLocation":"6610:7:3","nodeType":"VariableDeclaration","scope":827,"src":"6602:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:3","nodeType":"VariableDeclaration","scope":827,"src":"6619:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:3"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"6668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":793,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:3"},"scope":1144,"src":"6575:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":903,"nodeType":"Block","src":"7534:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7552:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:3","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"7544:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"7630:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:3","typeDescriptions":{}}},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"ExpressionStatement","src":"7622:64:3"},{"expression":{"arguments":[{"id":858,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7718:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"7724:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7728:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":857,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"7697:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"7697:38:3"},{"assignments":[864],"declarations":[{"constant":false,"id":864,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:3","nodeType":"VariableDeclaration","scope":903,"src":"7746:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":868,"initialValue":{"baseExpression":{"id":865,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7768:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":867,"indexExpression":{"id":866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7778:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"7801:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":871,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7816:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"7793:72:3"},{"id":890,"nodeType":"UncheckedBlock","src":"7875:273:3","statements":[{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":876,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":878,"indexExpression":{"id":877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7909:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"7917:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":880,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7931:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"nodeType":"ExpressionStatement","src":"7899:38:3"},{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":884,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8114:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":886,"indexExpression":{"id":885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8124:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":887,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8131:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"nodeType":"ExpressionStatement","src":"8114:23:3"}]},{"eventCall":{"arguments":[{"id":892,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8178:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8182:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":891,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"8163:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"EmitStatement","src":"8158:31:3"},{"expression":{"arguments":[{"id":898,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8220:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8226:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8230:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":897,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8200:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"8200:37:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"7008:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:3","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"from","nameLocation":"7483:4:3","nodeType":"VariableDeclaration","scope":904,"src":"7475:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"to","nameLocation":"7497:2:3","nodeType":"VariableDeclaration","scope":904,"src":"7489:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"amount","nameLocation":"7509:6:3","nodeType":"VariableDeclaration","scope":904,"src":"7501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"7534:0:3"},"scope":1144,"src":"7456:788:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":960,"nodeType":"Block","src":"8585:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"8603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:3","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"8595:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:3","typeDescriptions":{}}},"id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"8704:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"8713:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"8671:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":930,"nodeType":"ExpressionStatement","src":"8671:49:3"},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":931,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"8731:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"8747:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":934,"nodeType":"ExpressionStatement","src":"8731:22:3"},{"id":941,"nodeType":"UncheckedBlock","src":"8763:175:3","statements":[{"expression":{"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":935,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":937,"indexExpression":{"id":936,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"8909:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":938,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"8921:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":940,"nodeType":"ExpressionStatement","src":"8899:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:3","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"8973:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"8982:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":942,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"8952:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"EmitStatement","src":"8947:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:3","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9032:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9041:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":951,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9000:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"9000:48:3"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"8250:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:3","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"account","nameLocation":"8543:7:3","nodeType":"VariableDeclaration","scope":961,"src":"8535:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"amount","nameLocation":"8560:6:3","nodeType":"VariableDeclaration","scope":961,"src":"8552:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:3"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"8585:0:3"},"scope":1144,"src":"8520:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"9440:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9458:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"9450:67:3"},{"expression":{"arguments":[{"id":980,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9549:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:3","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"9570:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":979,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9528:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"9528:49:3"},{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:3","nodeType":"VariableDeclaration","scope":1032,"src":"9588:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":993,"initialValue":{"baseExpression":{"id":990,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9613:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":992,"indexExpression":{"id":991,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9623:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":995,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9649:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":996,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"9667:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"ExpressionStatement","src":"9641:71:3"},{"id":1013,"nodeType":"UncheckedBlock","src":"9722:194:3","statements":[{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1001,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9746:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1003,"indexExpression":{"id":1002,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9756:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9767:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1005,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"9784:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"nodeType":"ExpressionStatement","src":"9746:44:3"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1009,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"9883:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1010,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"9899:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1012,"nodeType":"ExpressionStatement","src":"9883:22:3"}]},{"eventCall":{"arguments":[{"id":1015,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9940:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:3","typeDescriptions":{}}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"9961:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1014,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"9931:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"EmitStatement","src":"9926:42:3"},{"expression":{"arguments":[{"id":1024,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:3","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1029,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"10020:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1023,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9979:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"ExpressionStatement","src":"9979:48:3"}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"9061:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:3","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"account","nameLocation":"9398:7:3","nodeType":"VariableDeclaration","scope":1033,"src":"9390:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"amount","nameLocation":"9415:6:3","nodeType":"VariableDeclaration","scope":1033,"src":"9407:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:3"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"9440:0:3"},"scope":1144,"src":"9375:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"10540:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"10558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:3","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"10550:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"10636:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1053,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"10628:68:3"},{"expression":{"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1063,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"10707:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1066,"indexExpression":{"id":1064,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"10719:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1067,"indexExpression":{"id":1065,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"10726:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"10737:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1070,"nodeType":"ExpressionStatement","src":"10707:36:3"},{"eventCall":{"arguments":[{"id":1072,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"10767:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"10774:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"10783:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1071,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10758:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"EmitStatement","src":"10753:37:3"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"10040:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:3","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"owner","nameLocation":"10483:5:3","nodeType":"VariableDeclaration","scope":1078,"src":"10475:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"spender","nameLocation":"10498:7:3","nodeType":"VariableDeclaration","scope":1078,"src":"10490:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"amount","nameLocation":"10515:6:3","nodeType":"VariableDeclaration","scope":1078,"src":"10507:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:3"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"10540:0:3"},"scope":1144,"src":"10457:340:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"11168:321:3","statements":[{"assignments":[1089],"declarations":[{"constant":false,"id":1089,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:3","nodeType":"VariableDeclaration","scope":1120,"src":"11178:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1094,"initialValue":{"arguments":[{"id":1091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"11215:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1092,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"11222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1090,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"11205:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11244:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:3","memberName":"max","nodeType":"MemberAccess","src":"11264:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"11240:243:3","trueBody":{"id":1118,"nodeType":"Block","src":"11283:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1103,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11305:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1104,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"11325:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"11297:68:3"},{"id":1117,"nodeType":"UncheckedBlock","src":"11379:94:3","statements":[{"expression":{"arguments":[{"id":1110,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"11416:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"11423:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11432:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"11451:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"11407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"11407:51:3"}]}]}}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"10803:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:3","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"owner","nameLocation":"11111:5:3","nodeType":"VariableDeclaration","scope":1121,"src":"11103:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"spender","nameLocation":"11126:7:3","nodeType":"VariableDeclaration","scope":1121,"src":"11118:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"amount","nameLocation":"11143:6:3","nodeType":"VariableDeclaration","scope":1121,"src":"11135:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:3"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"11168:0:3"},"scope":1144,"src":"11078:411:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"12162:2:3","statements":[]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"11495:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:3","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"from","nameLocation":"12111:4:3","nodeType":"VariableDeclaration","scope":1132,"src":"12103:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"to","nameLocation":"12125:2:3","nodeType":"VariableDeclaration","scope":1132,"src":"12117:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"amount","nameLocation":"12137:6:3","nodeType":"VariableDeclaration","scope":1132,"src":"12129:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:3"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"12162:0:3"},"scope":1144,"src":"12073:91:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"12840:2:3","statements":[]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"12170:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"from","nameLocation":"12789:4:3","nodeType":"VariableDeclaration","scope":1143,"src":"12781:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"to","nameLocation":"12803:2:3","nodeType":"VariableDeclaration","scope":1143,"src":"12795:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"amount","nameLocation":"12815:6:3","nodeType":"VariableDeclaration","scope":1143,"src":"12807:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"12840:0:3"},"scope":1144,"src":"12752:90:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1145,"src":"1532:11312:3","usedErrors":[]}],"src":"105:12740:3"},"id":3},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1222]},"id":1223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1146,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1222,"linearizedBaseContracts":[1222],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1156,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":1156,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":1156,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":1156,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1165,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":1165,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1161,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":1165,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":1165,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1171,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":1222,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1179,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":1179,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1179,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":1222,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1189,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":1189,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":1189,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1189,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1186,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":1222,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1199,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":1199,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":1199,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1199,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":1222,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1209,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":1209,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":1209,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1209,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":1222,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1221,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"from","nameLocation":"2676:4:4","nodeType":"VariableDeclaration","scope":1221,"src":"2668:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"to","nameLocation":"2690:2:4","nodeType":"VariableDeclaration","scope":1221,"src":"2682:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"amount","nameLocation":"2702:6:4","nodeType":"VariableDeclaration","scope":1221,"src":"2694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:4"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"2728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1218,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:4"},"scope":1222,"src":"2646:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1223,"src":"202:2534:4","usedErrors":[]}],"src":"106:2631:4"},"id":4},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1222],"IERC20Metadata":[1247]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1224,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1223,"src":"135:23:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1227,"name":"IERC20","nameLocations":["305:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"305:6:5"},"id":1228,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"160:116:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1247,"linearizedBaseContracts":[1247,1222],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1234,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1234,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1231,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":1247,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1240,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1237,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":1247,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1246,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1243,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":1247,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1248,"src":"277:405:5","usedErrors":[]}],"src":"110:573:5"},"id":5},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2683],"Context":[2705],"ERC165":[2958],"ERC721":[2192],"IERC165":[2970],"IERC721":[2308],"IERC721Metadata":[2353],"IERC721Receiver":[2326],"Math":[3836],"SignedMath":[3941],"Strings":[2934]},"id":2193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2309,"src":"132:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2327,"src":"156:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2354,"src":"188:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2684,"src":"231:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2706,"src":"265:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2935,"src":"299:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2959,"src":"333:46:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1258,"name":"Context","nameLocations":["647:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"647:7:6"},"id":1259,"nodeType":"InheritanceSpecifier","src":"647:7:6"},{"baseName":{"id":1260,"name":"ERC165","nameLocations":["656:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"656:6:6"},"id":1261,"nodeType":"InheritanceSpecifier","src":"656:6:6"},{"baseName":{"id":1262,"name":"IERC721","nameLocations":["664:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"664:7:6"},"id":1263,"nodeType":"InheritanceSpecifier","src":"664:7:6"},{"baseName":{"id":1264,"name":"IERC721Metadata","nameLocations":["673:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":2353,"src":"673:15:6"},"id":1265,"nodeType":"InheritanceSpecifier","src":"673:15:6"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"381:246:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2192,"linearizedBaseContracts":[2192,2353,2308,2958,2970,2705],"name":"ERC721","nameLocation":"637:6:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1268,"libraryName":{"id":1266,"name":"Address","nameLocations":["701:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"701:7:6"},"nodeType":"UsingForDirective","src":"695:26:6","typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":1271,"libraryName":{"id":1269,"name":"Strings","nameLocations":["732:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"732:7:6"},"nodeType":"UsingForDirective","src":"726:26:6","typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1273,"mutability":"mutable","name":"_name","nameLocation":"791:5:6","nodeType":"VariableDeclaration","scope":2192,"src":"776:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1272,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1275,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:6","nodeType":"VariableDeclaration","scope":2192,"src":"823:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1274,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1279,"mutability":"mutable","name":"_owners","nameLocation":"934:7:6","nodeType":"VariableDeclaration","scope":2192,"src":"898:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1278,"keyType":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1283,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:6","nodeType":"VariableDeclaration","scope":2192,"src":"992:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1282,"keyType":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1287,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:6","nodeType":"VariableDeclaration","scope":2192,"src":"1093:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1286,"keyType":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1293,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:6","nodeType":"VariableDeclaration","scope":2192,"src":"1199:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1292,"keyType":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1291,"keyType":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1309,"nodeType":"Block","src":"1446:57:6","statements":[{"expression":{"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1301,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"1456:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1302,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1464:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1304,"nodeType":"ExpressionStatement","src":"1456:13:6"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1305,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1306,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"1489:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1308,"nodeType":"ExpressionStatement","src":"1479:17:6"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"1277:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1310,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"name_","nameLocation":"1416:5:6","nodeType":"VariableDeclaration","scope":1310,"src":"1402:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1295,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:6","nodeType":"VariableDeclaration","scope":1310,"src":"1423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1297,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:6"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[],"src":"1446:0:6"},"scope":2192,"src":"1390:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2957,2969],"body":{"id":1340,"nodeType":"Block","src":"1678:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1321,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1707:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1323,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"1727:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2308_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2308_$","typeString":"type(contract IERC721)"}],"id":1322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2308","typeString":"type(contract IERC721)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1763:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1329,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"1783:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2353_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2353_$","typeString":"type(contract IERC721Metadata)"}],"id":1328,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2353","typeString":"type(contract IERC721Metadata)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1336,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1851:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1334,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2192_$","typeString":"type(contract super ERC721)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2957,"src":"1827:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1320,"id":1339,"nodeType":"Return","src":"1688:175:6"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"1509:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1341,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:6","nodeType":"FunctionDefinition","overrides":{"id":1317,"nodeType":"OverrideSpecifier","overrides":[{"id":1315,"name":"ERC165","nameLocations":["1646:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"1646:6:6"},{"id":1316,"name":"IERC165","nameLocations":["1654:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2970,"src":"1654:7:6"}],"src":"1637:25:6"},"parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:6","nodeType":"VariableDeclaration","scope":1341,"src":"1597:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1312,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:6"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1341,"src":"1672:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1318,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:6"},"scope":2192,"src":"1570:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2233],"body":{"id":1364,"nodeType":"Block","src":"2010:123:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2028:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:6","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"2020:73:6"},{"expression":{"baseExpression":{"id":1360,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2110:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1362,"indexExpression":{"id":1361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1349,"id":1363,"nodeType":"Return","src":"2103:23:6"}]},"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"1876:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:6","nodeType":"FunctionDefinition","overrides":{"id":1346,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:6"},"parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"owner","nameLocation":"1956:5:6","nodeType":"VariableDeclaration","scope":1365,"src":"1948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:6"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2001:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:6"},"scope":2192,"src":"1929:204:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2241],"body":{"id":1392,"nodeType":"Block","src":"2271:138:6","statements":[{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"owner","nameLocation":"2289:5:6","nodeType":"VariableDeclaration","scope":1392,"src":"2281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1379,"initialValue":{"arguments":[{"id":1377,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1376,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2297:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"2332:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:6","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1389,"nodeType":"ExpressionStatement","src":"2324:56:6"},{"expression":{"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"2397:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1373,"id":1391,"nodeType":"Return","src":"2390:12:6"}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"2139:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:6","nodeType":"FunctionDefinition","overrides":{"id":1370,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:6"},"parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:6","nodeType":"VariableDeclaration","scope":1393,"src":"2207:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:6"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1393,"src":"2262:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:6"},"scope":2192,"src":"2190:219:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2338],"body":{"id":1402,"nodeType":"Block","src":"2540:29:6","statements":[{"expression":{"id":1400,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"2557:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1399,"id":1401,"nodeType":"Return","src":"2550:12:6"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"2415:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:6","nodeType":"FunctionDefinition","overrides":{"id":1396,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:6"},"parameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"2484:2:6"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"2525:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1397,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:6"},"scope":2192,"src":"2471:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2344],"body":{"id":1412,"nodeType":"Block","src":"2704:31:6","statements":[{"expression":{"id":1410,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2721:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1409,"id":1411,"nodeType":"Return","src":"2714:14:6"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"2575:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:6","nodeType":"FunctionDefinition","overrides":{"id":1406,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:6"},"parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"2648:2:6"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"2689:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1407,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:6"},"scope":2192,"src":"2633:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2352],"body":{"id":1451,"nodeType":"Block","src":"2889:188:6","statements":[{"expression":{"arguments":[{"id":1423,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2914:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1422,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2899:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"2899:23:6"},{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:6","nodeType":"VariableDeclaration","scope":1451,"src":"2933:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1426,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1430,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1428,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2957:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1433,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"2990:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:6","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:6","memberName":"length","nodeType":"MemberAccess","src":"2984:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:6","trueExpression":{"arguments":[{"arguments":[{"id":1442,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"3036:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1443,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"3045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"3045:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1440,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3023:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:6","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1421,"id":1450,"nodeType":"Return","src":"2977:93:6"}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"2741:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:6","nodeType":"FunctionDefinition","overrides":{"id":1418,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:6"},"parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:6","nodeType":"VariableDeclaration","scope":1452,"src":"2819:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:6"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"2874:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1419,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:6"},"scope":2192,"src":"2801:276:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1460,"nodeType":"Block","src":"3385:26:6","statements":[{"expression":{"hexValue":"","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1457,"id":1459,"nodeType":"Return","src":"3395:9:6"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"3083:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:6","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"3336:2:6"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"3370:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1455,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:6"},"scope":2192,"src":"3319:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2281],"body":{"id":1503,"nodeType":"Block","src":"3538:336:6","statements":[{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"owner","nameLocation":"3556:5:6","nodeType":"VariableDeclaration","scope":1503,"src":"3548:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1476,"initialValue":{"arguments":[{"id":1474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"3579:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1472,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"3564:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3571:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"3564:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"3605:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1479,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"3597:57:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1485,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"3686:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1487,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3702:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1490,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3728:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1491,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"3735:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3711:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:170:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"ExpressionStatement","src":"3665:170:6"},{"expression":{"arguments":[{"id":1499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"3855:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"3859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1498,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3846:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"3846:21:6"}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"3417:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:6","nodeType":"FunctionDefinition","overrides":{"id":1468,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:6"},"parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"to","nameLocation":"3493:2:6","nodeType":"VariableDeclaration","scope":1504,"src":"3485:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:6","nodeType":"VariableDeclaration","scope":1504,"src":"3497:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:6"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"3538:0:6"},"scope":2192,"src":"3468:406:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2297],"body":{"id":1521,"nodeType":"Block","src":"4020:82:6","statements":[{"expression":{"arguments":[{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1513,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"4030:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"4030:23:6"},{"expression":{"baseExpression":{"id":1517,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"4071:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1519,"indexExpression":{"id":1518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1512,"id":1520,"nodeType":"Return","src":"4064:31:6"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3880:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:6","nodeType":"FunctionDefinition","overrides":{"id":1509,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:6"},"parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:6","nodeType":"VariableDeclaration","scope":1522,"src":"3956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:6"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"4011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:6"},"scope":2192,"src":"3935:167:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2289],"body":{"id":1538,"nodeType":"Block","src":"4253:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1532,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"4296:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1535,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4306:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1531,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"4263:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1537,"nodeType":"ExpressionStatement","src":"4263:52:6"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"4108:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:6","nodeType":"FunctionDefinition","overrides":{"id":1529,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:6"},"parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"operator","nameLocation":"4204:8:6","nodeType":"VariableDeclaration","scope":1539,"src":"4196:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"approved","nameLocation":"4219:8:6","nodeType":"VariableDeclaration","scope":1539,"src":"4214:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1526,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:6"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"4253:0:6"},"scope":2192,"src":"4169:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2307],"body":{"id":1556,"nodeType":"Block","src":"4491:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1550,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"4508:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1552,"indexExpression":{"id":1551,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"4527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1554,"indexExpression":{"id":1553,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4534:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1549,"id":1555,"nodeType":"Return","src":"4501:42:6"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"4328:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:6","nodeType":"FunctionDefinition","overrides":{"id":1546,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:6"},"parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"owner","nameLocation":"4422:5:6","nodeType":"VariableDeclaration","scope":1557,"src":"4414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"operator","nameLocation":"4437:8:6","nodeType":"VariableDeclaration","scope":1557,"src":"4429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:6"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"4485:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1547,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:6"},"scope":2192,"src":"4388:162:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2273],"body":{"id":1583,"nodeType":"Block","src":"4701:207:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1570,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4790:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"4804:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"4771:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"4763:99:6"},{"expression":{"arguments":[{"id":1578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4883:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1579,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"4889:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1577,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"4873:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"4873:28:6"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"4556:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:6","nodeType":"FunctionDefinition","overrides":{"id":1566,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:6"},"parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"from","nameLocation":"4642:4:6","nodeType":"VariableDeclaration","scope":1584,"src":"4634:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"to","nameLocation":"4656:2:6","nodeType":"VariableDeclaration","scope":1584,"src":"4648:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:6","nodeType":"VariableDeclaration","scope":1584,"src":"4660:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:6"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[],"src":"4701:0:6"},"scope":2192,"src":"4612:296:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2263],"body":{"id":1602,"nodeType":"Block","src":"5067:56:6","statements":[{"expression":{"arguments":[{"id":1596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"5094:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5100:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1598,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"5104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1595,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1603,1633],"referencedDeclaration":1633,"src":"5077:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"ExpressionStatement","src":"5077:39:6"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"4914:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:6","nodeType":"FunctionDefinition","overrides":{"id":1593,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:6"},"parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"from","nameLocation":"5008:4:6","nodeType":"VariableDeclaration","scope":1603,"src":"5000:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"to","nameLocation":"5022:2:6","nodeType":"VariableDeclaration","scope":1603,"src":"5014:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:6","nodeType":"VariableDeclaration","scope":1603,"src":"5026:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:6"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[],"src":"5067:0:6"},"scope":2192,"src":"4974:149:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2253],"body":{"id":1632,"nodeType":"Block","src":"5301:164:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1618,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5338:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"5352:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"5319:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1624,"nodeType":"ExpressionStatement","src":"5311:99:6"},{"expression":{"arguments":[{"id":1626,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"5434:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"5440:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1628,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"5444:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1629,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"5453:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1625,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5420:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"ExpressionStatement","src":"5420:38:6"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"5129:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:6","nodeType":"FunctionDefinition","overrides":{"id":1614,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:6"},"parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"from","nameLocation":"5223:4:6","nodeType":"VariableDeclaration","scope":1633,"src":"5215:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"to","nameLocation":"5237:2:6","nodeType":"VariableDeclaration","scope":1633,"src":"5229:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:6","nodeType":"VariableDeclaration","scope":1633,"src":"5241:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"data","nameLocation":"5271:4:6","nodeType":"VariableDeclaration","scope":1633,"src":"5258:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1611,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:6"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"5301:0:6"},"scope":2192,"src":"5189:276:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1661,"nodeType":"Block","src":"6428:165:6","statements":[{"expression":{"arguments":[{"id":1646,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"6448:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"6454:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1648,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"6458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"6438:28:6"},{"expression":{"arguments":[{"arguments":[{"id":1653,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"6507:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"6513:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"6517:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1656,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6526:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1652,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6484:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"6476:110:6"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"5471:850:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:6","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"from","nameLocation":"6357:4:6","nodeType":"VariableDeclaration","scope":1662,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"to","nameLocation":"6371:2:6","nodeType":"VariableDeclaration","scope":1662,"src":"6363:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:6","nodeType":"VariableDeclaration","scope":1662,"src":"6375:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"data","nameLocation":"6405:4:6","nodeType":"VariableDeclaration","scope":1662,"src":"6392:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:6"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"6428:0:6"},"scope":2192,"src":"6326:267:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1674,"nodeType":"Block","src":"6777:40:6","statements":[{"expression":{"baseExpression":{"id":1670,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"6794:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1672,"indexExpression":{"id":1671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"6802:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1669,"id":1673,"nodeType":"Return","src":"6787:23:6"}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"6599:98:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:6","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:6","nodeType":"VariableDeclaration","scope":1675,"src":"6720:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:6"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"6768:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:6"},"scope":2192,"src":"6702:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"7191:55:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"7217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1683,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"7208:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:6","typeDescriptions":{}}},"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1682,"id":1691,"nodeType":"Return","src":"7201:38:6"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"6823:292:6","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:6","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:6","nodeType":"VariableDeclaration","scope":1693,"src":"7137:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:6"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"7185:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1680,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:6"},"scope":2192,"src":"7120:126:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"7503:162:6","statements":[{"assignments":[1704],"declarations":[{"constant":false,"id":1704,"mutability":"mutable","name":"owner","nameLocation":"7521:5:6","nodeType":"VariableDeclaration","scope":1726,"src":"7513:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1709,"initialValue":{"arguments":[{"id":1707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"7544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1705,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"7529:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"7529:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"7570:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1711,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"7581:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1714,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"7607:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1715,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"7614:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"7590:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"7638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"7626:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"7650:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1702,"id":1725,"nodeType":"Return","src":"7562:96:6"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"7252:147:6","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:6","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"spender","nameLocation":"7440:7:6","nodeType":"VariableDeclaration","scope":1727,"src":"7432:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:6","nodeType":"VariableDeclaration","scope":1727,"src":"7449:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:6"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"7497:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1700,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:6"},"scope":2192,"src":"7404:261:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"8060:43:6","statements":[{"expression":{"arguments":[{"id":1736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8080:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"8084:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1735,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1742,1771],"referencedDeclaration":1771,"src":"8070:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"ExpressionStatement","src":"8070:26:6"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"7671:319:6","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:6","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"to","nameLocation":"8022:2:6","nodeType":"VariableDeclaration","scope":1742,"src":"8014:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:6","nodeType":"VariableDeclaration","scope":1742,"src":"8026:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:6"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"8060:0:6"},"scope":2192,"src":"7995:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1770,"nodeType":"Block","src":"8408:195:6","statements":[{"expression":{"arguments":[{"id":1753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"8424:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"8428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1752,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"8418:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8418:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"ExpressionStatement","src":"8418:18:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:6","typeDescriptions":{}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"8502:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"8506:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1765,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8515:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1758,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"8467:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8467:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"8446:150:6"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"8109:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:6","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"to","nameLocation":"8351:2:6","nodeType":"VariableDeclaration","scope":1771,"src":"8343:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:6","nodeType":"VariableDeclaration","scope":1771,"src":"8355:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"data","nameLocation":"8385:4:6","nodeType":"VariableDeclaration","scope":1771,"src":"8372:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1748,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:6"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"8408:0:6"},"scope":2192,"src":"8324:279:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1847,"nodeType":"Block","src":"8986:859:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9004:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:6","typeDescriptions":{}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"8996:61:6"},{"expression":{"arguments":[{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:6","subExpression":{"arguments":[{"id":1791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9084:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1790,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9076:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"ExpressionStatement","src":"9067:58:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:6","typeDescriptions":{}}},"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1802,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9169:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9173:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1797,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9136:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"ExpressionStatement","src":"9136:48:6"},{"expression":{"arguments":[{"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:6","subExpression":{"arguments":[{"id":1809,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9288:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1808,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9280:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9271:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"9271:58:6"},{"id":1821,"nodeType":"UncheckedBlock","src":"9340:360:6","statements":[{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1815,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9671:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1817,"indexExpression":{"id":1816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9681:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"9671:18:6"}]},{"expression":{"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1822,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"9710:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1824,"indexExpression":{"id":1823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9729:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1827,"nodeType":"ExpressionStatement","src":"9710:21:6"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:6","typeDescriptions":{}}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1833,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9768:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9772:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1828,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9747:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9747:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"EmitStatement","src":"9742:38:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:6","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9823:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1843,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9827:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1837,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"9791:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"9791:47:6"}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"8609:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:6","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"to","nameLocation":"8948:2:6","nodeType":"VariableDeclaration","scope":1848,"src":"8940:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:6","nodeType":"VariableDeclaration","scope":1848,"src":"8952:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:6"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"8986:0:6"},"scope":2192,"src":"8925:920:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"10220:713:6","statements":[{"assignments":[1855],"declarations":[{"constant":false,"id":1855,"mutability":"mutable","name":"owner","nameLocation":"10238:5:6","nodeType":"VariableDeclaration","scope":1914,"src":"10230:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1860,"initialValue":{"arguments":[{"id":1858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10261:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1856,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10246:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10253:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"10246:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:6"},{"expression":{"arguments":[{"id":1862,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10301:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:6","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10320:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1861,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10280:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10280:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"10280:51:6"},{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1871,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10433:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1872,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10441:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"10441:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1877,"nodeType":"ExpressionStatement","src":"10433:31:6"},{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:6","subExpression":{"baseExpression":{"id":1878,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"10509:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1880,"indexExpression":{"id":1879,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10525:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"ExpressionStatement","src":"10502:31:6"},{"id":1889,"nodeType":"UncheckedBlock","src":"10544:237:6","statements":[{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1883,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"10749:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1885,"indexExpression":{"id":1884,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10759:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1888,"nodeType":"ExpressionStatement","src":"10749:21:6"}]},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:6","subExpression":{"baseExpression":{"id":1890,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"10797:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1892,"indexExpression":{"id":1891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10805:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1894,"nodeType":"ExpressionStatement","src":"10790:23:6"},{"eventCall":{"arguments":[{"id":1896,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10838:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:6","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1901,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10857:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1895,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10829:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"EmitStatement","src":"10824:41:6"},{"expression":{"arguments":[{"id":1905,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10896:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:6","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10915:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1904,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10876:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"ExpressionStatement","src":"10876:50:6"}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"9851:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:6","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:6","nodeType":"VariableDeclaration","scope":1915,"src":"10186:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:6"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[],"src":"10220:0:6"},"scope":2192,"src":"10171:762:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"11336:1124:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1928,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"11369:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1926,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11354:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11361:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"11354:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11354:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1930,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"11381:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"11346:81:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1936,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"11445:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:6","typeDescriptions":{}}},"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"11437:65:6"},{"expression":{"arguments":[{"id":1946,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"11534:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1947,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"11540:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1948,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"11544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1945,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"11513:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"ExpressionStatement","src":"11513:42:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1955,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"11670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1953,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11655:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"11655:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"11682:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1961,"nodeType":"ExpressionStatement","src":"11647:81:6"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:6","subExpression":{"baseExpression":{"id":1962,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"11797:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1964,"indexExpression":{"id":1963,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"11813:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"ExpressionStatement","src":"11790:31:6"},{"id":1979,"nodeType":"UncheckedBlock","src":"11832:496:6","statements":[{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1967,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"12265:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1969,"indexExpression":{"id":1968,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"12275:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"12265:20:6"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1973,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"12299:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1975,"indexExpression":{"id":1974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"12309:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"12299:18:6"}]},{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1980,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"12337:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1982,"indexExpression":{"id":1981,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"12345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"12356:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1985,"nodeType":"ExpressionStatement","src":"12337:21:6"},{"eventCall":{"arguments":[{"id":1987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"12383:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1988,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"12389:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1989,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"12393:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1986,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"12374:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"EmitStatement","src":"12369:32:6"},{"expression":{"arguments":[{"id":1993,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"12432:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"12438:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"12442:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1992,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"12412:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12412:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"12412:41:6"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"10939:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:6","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"from","nameLocation":"11284:4:6","nodeType":"VariableDeclaration","scope":2000,"src":"11276:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"to","nameLocation":"11298:2:6","nodeType":"VariableDeclaration","scope":2000,"src":"11290:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:6","nodeType":"VariableDeclaration","scope":2000,"src":"11302:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:6"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[],"src":"11336:0:6"},"scope":2192,"src":"11257:1203:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"12636:107:6","statements":[{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2008,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"12646:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2010,"indexExpression":{"id":2009,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"12662:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2011,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"12673:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2013,"nodeType":"ExpressionStatement","src":"12646:29:6"},{"eventCall":{"arguments":[{"arguments":[{"id":2017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"12714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2015,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12699:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2192_$","typeString":"type(contract ERC721)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:6","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"12699:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2019,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"12724:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"12728:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2014,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"12690:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2022,"nodeType":"EmitStatement","src":"12685:51:6"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"12466:101:6","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:6","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"to","nameLocation":"12598:2:6","nodeType":"VariableDeclaration","scope":2024,"src":"12590:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:6","nodeType":"VariableDeclaration","scope":2024,"src":"12602:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:6"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"12636:0:6"},"scope":2192,"src":"12572:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2055,"nodeType":"Block","src":"12972:184:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"12990:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2036,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"12999:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"ExpressionStatement","src":"12982:55:6"},{"expression":{"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2041,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13047:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2044,"indexExpression":{"id":2042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"13066:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2045,"indexExpression":{"id":2043,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"13073:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2046,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13085:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"nodeType":"ExpressionStatement","src":"13047:46:6"},{"eventCall":{"arguments":[{"id":2050,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"13123:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2051,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"13130:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2052,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13140:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2049,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"13108:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2054,"nodeType":"EmitStatement","src":"13103:46:6"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"12749:125:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:6","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"owner","nameLocation":"12915:5:6","nodeType":"VariableDeclaration","scope":2056,"src":"12907:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"operator","nameLocation":"12930:8:6","nodeType":"VariableDeclaration","scope":2056,"src":"12922:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"approved","nameLocation":"12945:8:6","nodeType":"VariableDeclaration","scope":2056,"src":"12940:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2030,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:6"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"12972:0:6"},"scope":2192,"src":"12879:277:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"13303:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":2064,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"13329:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2063,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"13321:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13313:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2068,"nodeType":"ExpressionStatement","src":"13313:53:6"}]},"documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"13162:73:6","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:6","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:6","nodeType":"VariableDeclaration","scope":2070,"src":"13264:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:6"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"13303:0:6"},"scope":2192,"src":"13240:133:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2131,"nodeType":"Block","src":"14080:676:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"14094:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14097:10:6","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2371,"src":"14094:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14094:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2129,"nodeType":"Block","src":"14714:36:6","statements":[{"expression":{"hexValue":"74727565","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2083,"id":2128,"nodeType":"Return","src":"14728:11:6"}]},"id":2130,"nodeType":"IfStatement","src":"14090:660:6","trueBody":{"id":2126,"nodeType":"Block","src":"14111:597:6","statements":[{"clauses":[{"block":{"id":2106,"nodeType":"Block","src":"14225:91:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"14250:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2101,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"14260:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2326_$","typeString":"type(contract IERC721Receiver)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14276:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"14260:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14293:8:6","memberName":"selector","nodeType":"MemberAccess","src":"14260:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2083,"id":2105,"nodeType":"Return","src":"14243:58:6"}]},"errorName":"","id":2107,"nodeType":"TryCatchClause","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"retval","nameLocation":"14217:6:6","nodeType":"VariableDeclaration","scope":2107,"src":"14210:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2097,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:6"},"src":"14201:115:6"},{"block":{"id":2123,"nodeType":"Block","src":"14345:353:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2111,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"14367:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:6","memberName":"length","nodeType":"MemberAccess","src":"14367:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2121,"nodeType":"Block","src":"14494:190:6","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:6"},"nodeType":"YulFunctionCall","src":"14613:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:6"},"nodeType":"YulFunctionCall","src":"14630:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:6"},"nodeType":"YulFunctionCall","src":"14606:38:6"},"nodeType":"YulExpressionStatement","src":"14606:38:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2109,"isOffset":false,"isSlot":false,"src":"14621:6:6","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"14636:6:6","valueSize":1}],"id":2120,"nodeType":"InlineAssembly","src":"14571:95:6"}]},"id":2122,"nodeType":"IfStatement","src":"14363:321:6","trueBody":{"id":2119,"nodeType":"Block","src":"14387:101:6","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2115,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14409:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"ExpressionStatement","src":"14409:60:6"}]}}]},"errorName":"","id":2124,"nodeType":"TryCatchClause","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"reason","nameLocation":"14337:6:6","nodeType":"VariableDeclaration","scope":2124,"src":"14324:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2108,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:6"},"src":"14317:381:6"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2091,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"14166:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14166:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"14180:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2094,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14186:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2095,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"14195:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"14145:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2087,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"14129:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2326_$","typeString":"type(contract IERC721Receiver)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2326","typeString":"contract IERC721Receiver"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14149:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"14129:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2125,"nodeType":"TryStatement","src":"14125:573:6"}]}}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"13379:541:6","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:6","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"from","nameLocation":"13974:4:6","nodeType":"VariableDeclaration","scope":2132,"src":"13966:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"to","nameLocation":"13996:2:6","nodeType":"VariableDeclaration","scope":2132,"src":"13988:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:6","nodeType":"VariableDeclaration","scope":2132,"src":"14008:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"data","nameLocation":"14046:4:6","nodeType":"VariableDeclaration","scope":2132,"src":"14033:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2078,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:6"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"14074:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2081,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:6"},"scope":2192,"src":"13925:831:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2177,"nodeType":"Block","src":"15630:238:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"15644:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15656:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15644:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2176,"nodeType":"IfStatement","src":"15640:222:6","trueBody":{"id":2175,"nodeType":"Block","src":"15659:203:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2147,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"15677:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15693:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15685:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"15685:7:6","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15685:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15677:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2160,"nodeType":"IfStatement","src":"15673:85:6","trueBody":{"id":2159,"nodeType":"Block","src":"15697:61:6","statements":[{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2153,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"15715:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2155,"indexExpression":{"id":2154,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"15725:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15715:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2156,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"15734:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15715:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"15715:28:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"15775:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15789:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15781:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"15781:7:6","typeDescriptions":{}}},"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15781:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15775:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"15771:81:6","trueBody":{"id":2173,"nodeType":"Block","src":"15793:59:6","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2167,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"15811:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2169,"indexExpression":{"id":2168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"15821:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15811:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2170,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"15828:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15811:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"15811:26:6"}]}}]}}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"14762:705:6","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2178,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:6","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"from","nameLocation":"15519:4:6","nodeType":"VariableDeclaration","scope":2178,"src":"15511:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"15511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"to","nameLocation":"15541:2:6","nodeType":"VariableDeclaration","scope":2178,"src":"15533:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"15533:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2178,"src":"15553:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"15553:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"batchSize","nameLocation":"15597:9:6","nodeType":"VariableDeclaration","scope":2178,"src":"15589:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"15589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:111:6"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"15630:0:6"},"scope":2192,"src":"15472:396:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"16687:2:6","statements":[]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"15874:695:6","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16583:19:6","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"from","nameLocation":"16611:4:6","nodeType":"VariableDeclaration","scope":2191,"src":"16603:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"16603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"to","nameLocation":"16625:2:6","nodeType":"VariableDeclaration","scope":2191,"src":"16617:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"16617:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"firstTokenId","nameLocation":"16637:12:6","nodeType":"VariableDeclaration","scope":2191,"src":"16629:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"16629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"batchSize","nameLocation":"16659:9:6","nodeType":"VariableDeclaration","scope":2191,"src":"16651:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"16651:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16602:67:6"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[],"src":"16687:0:6"},"scope":2192,"src":"16574:115:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2193,"src":"628:16063:6","usedErrors":[]}],"src":"107:16585:6"},"id":6},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2970],"IERC721":[2308]},"id":2309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2194,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2309,"sourceUnit":2971,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2197,"name":"IERC165","nameLocations":["271:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2970,"src":"271:7:7"},"id":2198,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2308,"linearizedBaseContracts":[2308,2970],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2207,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":2207,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2203,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":2207,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2205,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":2207,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2216,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":2216,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":2216,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":2216,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2225,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":2225,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2221,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":2225,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2223,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":2225,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2222,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2233,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":2233,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":2233,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":2308,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2241,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":2241,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":2241,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":2308,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2253,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"from","nameLocation":"1843:4:7","nodeType":"VariableDeclaration","scope":2253,"src":"1835:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"to","nameLocation":"1857:2:7","nodeType":"VariableDeclaration","scope":2253,"src":"1849:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:7","nodeType":"VariableDeclaration","scope":2253,"src":"1861:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"data","nameLocation":"1893:4:7","nodeType":"VariableDeclaration","scope":2253,"src":"1878:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2249,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:7"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[],"src":"1907:0:7"},"scope":2308,"src":"1809:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"1914:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2263,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:7","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"from","nameLocation":"2640:4:7","nodeType":"VariableDeclaration","scope":2263,"src":"2632:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"to","nameLocation":"2654:2:7","nodeType":"VariableDeclaration","scope":2263,"src":"2646:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:7","nodeType":"VariableDeclaration","scope":2263,"src":"2658:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:7"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[],"src":"2683:0:7"},"scope":2308,"src":"2606:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"2690:732:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2273,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:7","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"from","nameLocation":"3457:4:7","nodeType":"VariableDeclaration","scope":2273,"src":"3449:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"to","nameLocation":"3471:2:7","nodeType":"VariableDeclaration","scope":2273,"src":"3463:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:7","nodeType":"VariableDeclaration","scope":2273,"src":"3475:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:7"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[],"src":"3500:0:7"},"scope":2308,"src":"3427:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"3507:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2281,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:7","nodeType":"FunctionDefinition","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"to","nameLocation":"3989:2:7","nodeType":"VariableDeclaration","scope":2281,"src":"3981:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2275,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:7","nodeType":"VariableDeclaration","scope":2281,"src":"3993:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:7"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[],"src":"4018:0:7"},"scope":2308,"src":"3964:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"4025:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2289,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:7","nodeType":"FunctionDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"operator","nameLocation":"4374:8:7","nodeType":"VariableDeclaration","scope":2289,"src":"4366:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"approved","nameLocation":"4389:8:7","nodeType":"VariableDeclaration","scope":2289,"src":"4384:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2285,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:7"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[],"src":"4407:0:7"},"scope":2308,"src":"4339:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"4414:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2297,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:7","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:7","nodeType":"VariableDeclaration","scope":2297,"src":"4579:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:7"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"operator","nameLocation":"4627:8:7","nodeType":"VariableDeclaration","scope":2297,"src":"4619:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:7"},"scope":2308,"src":"4558:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"4643:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2307,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:7","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"owner","nameLocation":"4820:5:7","nodeType":"VariableDeclaration","scope":2307,"src":"4812:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"operator","nameLocation":"4835:8:7","nodeType":"VariableDeclaration","scope":2307,"src":"4827:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:7"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2307,"src":"4868:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2304,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:7"},"scope":2308,"src":"4786:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2309,"src":"250:4626:7","usedErrors":[]}],"src":"108:4769:7"},"id":7},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2326]},"id":2327,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2310,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2326,"linearizedBaseContracts":[2326],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2325,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":2325,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":2325,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":2325,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":2325,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2319,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2322,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":2326,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2327,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2970],"IERC721":[2308],"IERC721Metadata":[2353]},"id":2354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2328,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2354,"sourceUnit":2309,"src":"137:24:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2331,"name":"IERC721","nameLocations":["326:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"326:7:9"},"id":2332,"nodeType":"InheritanceSpecifier","src":"326:7:9"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"163:133:9","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2353,"linearizedBaseContracts":[2353,2308,2970],"name":"IERC721Metadata","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"340:58:9","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2338,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:9","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[],"src":"416:2:9"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"442:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2335,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:9"},"scope":2353,"src":"403:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"463:60:9","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2344,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:9","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[],"src":"543:2:9"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"569:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:9"},"scope":2353,"src":"528:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"590:90:9","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2352,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:9","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:9","nodeType":"VariableDeclaration","scope":2352,"src":"703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:9"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2352,"src":"743:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2349,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:9"},"scope":2353,"src":"685:73:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2354,"src":"297:463:9","usedErrors":[]}],"src":"112:649:9"},"id":9},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Address.sol","exportedSymbols":{"Address":[2683]},"id":2684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2355,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2683,"linearizedBaseContracts":[2683],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2370,"nodeType":"Block","src":"1478:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2364,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"1702:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:10","memberName":"code","nodeType":"MemberAccess","src":"1702:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:10","memberName":"length","nodeType":"MemberAccess","src":"1702:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2363,"id":2369,"nodeType":"Return","src":"1695:30:10"}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"216:1191:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2371,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:10","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"account","nameLocation":"1440:7:10","nodeType":"VariableDeclaration","scope":2371,"src":"1432:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:10"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2371,"src":"1472:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2361,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:10"},"scope":2683,"src":"1412:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"2719:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2382,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2745:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2683","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2683","typeString":"library Address"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2737:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"2737:7:10","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2751:7:10","memberName":"balance","nodeType":"MemberAccess","src":"2737:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2762:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2737:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2770:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2729:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"2729:73:10"},{"assignments":[2391,null],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"success","nameLocation":"2819:7:10","nodeType":"VariableDeclaration","scope":2404,"src":"2814:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2390,"name":"bool","nodeType":"ElementaryTypeName","src":"2814:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2398,"initialValue":{"arguments":[{"hexValue":"","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2862:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2392,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"2832:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2842:4:10","memberName":"call","nodeType":"MemberAccess","src":"2832:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2832:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2813:52:10"},{"expression":{"arguments":[{"id":2400,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2883:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2892:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2875:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2875:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2403,"nodeType":"ExpressionStatement","src":"2875:78:10"}]},"documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"1738:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2657:9:10","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"recipient","nameLocation":"2683:9:10","nodeType":"VariableDeclaration","scope":2405,"src":"2667:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"2667:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"amount","nameLocation":"2702:6:10","nodeType":"VariableDeclaration","scope":2405,"src":"2694:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2666:43:10"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"2719:0:10"},"scope":2683,"src":"2648:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2422,"nodeType":"Block","src":"3791:96:10","statements":[{"expression":{"arguments":[{"id":2416,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3830:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2417,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"3838:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3844:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3847:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2415,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2463,2507],"referencedDeclaration":2507,"src":"3808:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3808:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2414,"id":2421,"nodeType":"Return","src":"3801:79:10"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"2966:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3711:12:10","nodeType":"FunctionDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"target","nameLocation":"3732:6:10","nodeType":"VariableDeclaration","scope":2423,"src":"3724:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"3724:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"data","nameLocation":"3753:4:10","nodeType":"VariableDeclaration","scope":2423,"src":"3740:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2409,"name":"bytes","nodeType":"ElementaryTypeName","src":"3740:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3723:35:10"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"3777:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2412,"name":"bytes","nodeType":"ElementaryTypeName","src":"3777:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3776:14:10"},"scope":2683,"src":"3702:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"4256:76:10","statements":[{"expression":{"arguments":[{"id":2436,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4295:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"4303:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4309:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2439,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4312:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2435,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2463,2507],"referencedDeclaration":2507,"src":"4273:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2434,"id":2441,"nodeType":"Return","src":"4266:59:10"}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"3893:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4118:12:10","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"target","nameLocation":"4148:6:10","nodeType":"VariableDeclaration","scope":2443,"src":"4140:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"4140:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"data","nameLocation":"4177:4:10","nodeType":"VariableDeclaration","scope":2443,"src":"4164:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2427,"name":"bytes","nodeType":"ElementaryTypeName","src":"4164:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"errorMessage","nameLocation":"4205:12:10","nodeType":"VariableDeclaration","scope":2443,"src":"4191:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2429,"name":"string","nodeType":"ElementaryTypeName","src":"4191:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4130:93:10"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"4242:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2432,"name":"bytes","nodeType":"ElementaryTypeName","src":"4242:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4241:14:10"},"scope":2683,"src":"4109:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"4807:111:10","statements":[{"expression":{"arguments":[{"id":2456,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"4846:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2457,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4854:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4860:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4867:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2455,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2463,2507],"referencedDeclaration":2507,"src":"4824:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2454,"id":2461,"nodeType":"Return","src":"4817:94:10"}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"4338:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4703:21:10","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"target","nameLocation":"4733:6:10","nodeType":"VariableDeclaration","scope":2463,"src":"4725:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"4725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"data","nameLocation":"4754:4:10","nodeType":"VariableDeclaration","scope":2463,"src":"4741:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2447,"name":"bytes","nodeType":"ElementaryTypeName","src":"4741:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"value","nameLocation":"4768:5:10","nodeType":"VariableDeclaration","scope":2463,"src":"4760:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"4760:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4724:50:10"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"4793:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2452,"name":"bytes","nodeType":"ElementaryTypeName","src":"4793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4792:14:10"},"scope":2683,"src":"4694:224:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2506,"nodeType":"Block","src":"5345:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2480,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5371:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2683","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2683","typeString":"library Address"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5363:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"5363:7:10","typeDescriptions":{}}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5363:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5377:7:10","memberName":"balance","nodeType":"MemberAccess","src":"5363:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5388:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5363:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5395:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"ExpressionStatement","src":"5355:81:10"},{"assignments":[2489,2491],"declarations":[{"constant":false,"id":2489,"mutability":"mutable","name":"success","nameLocation":"5452:7:10","nodeType":"VariableDeclaration","scope":2506,"src":"5447:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2488,"name":"bool","nodeType":"ElementaryTypeName","src":"5447:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"returndata","nameLocation":"5474:10:10","nodeType":"VariableDeclaration","scope":2506,"src":"5461:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2490,"name":"bytes","nodeType":"ElementaryTypeName","src":"5461:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2498,"initialValue":{"arguments":[{"id":2496,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"5514:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2492,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"5488:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5495:4:10","memberName":"call","nodeType":"MemberAccess","src":"5488:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5507:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5488:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5446:73:10"},{"expression":{"arguments":[{"id":2500,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"5563:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2501,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"5571:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2502,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"5580:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2503,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"5592:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2499,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"5536:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2476,"id":2505,"nodeType":"Return","src":"5529:76:10"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"4924:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5175:21:10","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"target","nameLocation":"5214:6:10","nodeType":"VariableDeclaration","scope":2507,"src":"5206:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"5206:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"data","nameLocation":"5243:4:10","nodeType":"VariableDeclaration","scope":2507,"src":"5230:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"5230:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"5265:5:10","nodeType":"VariableDeclaration","scope":2507,"src":"5257:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5257:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"errorMessage","nameLocation":"5294:12:10","nodeType":"VariableDeclaration","scope":2507,"src":"5280:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2471,"name":"string","nodeType":"ElementaryTypeName","src":"5280:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5196:116:10"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"5331:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2474,"name":"bytes","nodeType":"ElementaryTypeName","src":"5331:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5330:14:10"},"scope":2683,"src":"5166:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"5889:97:10","statements":[{"expression":{"arguments":[{"id":2518,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"5925:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2519,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5933:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5939:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2517,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2524,2553],"referencedDeclaration":2553,"src":"5906:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5906:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2516,"id":2522,"nodeType":"Return","src":"5899:80:10"}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"5618:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5798:18:10","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"target","nameLocation":"5825:6:10","nodeType":"VariableDeclaration","scope":2524,"src":"5817:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"5817:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"data","nameLocation":"5846:4:10","nodeType":"VariableDeclaration","scope":2524,"src":"5833:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2511,"name":"bytes","nodeType":"ElementaryTypeName","src":"5833:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5816:35:10"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"5875:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2514,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5874:14:10"},"scope":2683,"src":"5789:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2552,"nodeType":"Block","src":"6328:168:10","statements":[{"assignments":[2537,2539],"declarations":[{"constant":false,"id":2537,"mutability":"mutable","name":"success","nameLocation":"6344:7:10","nodeType":"VariableDeclaration","scope":2552,"src":"6339:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2536,"name":"bool","nodeType":"ElementaryTypeName","src":"6339:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"returndata","nameLocation":"6366:10:10","nodeType":"VariableDeclaration","scope":2552,"src":"6353:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2538,"name":"bytes","nodeType":"ElementaryTypeName","src":"6353:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2544,"initialValue":{"arguments":[{"id":2542,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"6398:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2540,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"6380:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"6380:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6338:65:10"},{"expression":{"arguments":[{"id":2546,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"6447:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2547,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"6455:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2548,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"6464:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2549,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"6476:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2545,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"6420:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6420:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2535,"id":2551,"nodeType":"Return","src":"6413:76:10"}]},"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"5992:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6179:18:10","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"target","nameLocation":"6215:6:10","nodeType":"VariableDeclaration","scope":2553,"src":"6207:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"data","nameLocation":"6244:4:10","nodeType":"VariableDeclaration","scope":2553,"src":"6231:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"6231:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"errorMessage","nameLocation":"6272:12:10","nodeType":"VariableDeclaration","scope":2553,"src":"6258:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2530,"name":"string","nodeType":"ElementaryTypeName","src":"6258:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6197:93:10"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"6314:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2533,"name":"bytes","nodeType":"ElementaryTypeName","src":"6314:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6313:14:10"},"scope":2683,"src":"6170:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"6772:101:10","statements":[{"expression":{"arguments":[{"id":2564,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"6810:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2565,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"6818:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6824:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2563,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2570,2599],"referencedDeclaration":2599,"src":"6789:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2562,"id":2568,"nodeType":"Return","src":"6782:84:10"}]},"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"6502:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6684:20:10","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"target","nameLocation":"6713:6:10","nodeType":"VariableDeclaration","scope":2570,"src":"6705:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"data","nameLocation":"6734:4:10","nodeType":"VariableDeclaration","scope":2570,"src":"6721:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2557,"name":"bytes","nodeType":"ElementaryTypeName","src":"6721:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6704:35:10"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"6758:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2560,"name":"bytes","nodeType":"ElementaryTypeName","src":"6758:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6757:14:10"},"scope":2683,"src":"6675:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"7214:170:10","statements":[{"assignments":[2583,2585],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"success","nameLocation":"7230:7:10","nodeType":"VariableDeclaration","scope":2598,"src":"7225:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"7225:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"returndata","nameLocation":"7252:10:10","nodeType":"VariableDeclaration","scope":2598,"src":"7239:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2584,"name":"bytes","nodeType":"ElementaryTypeName","src":"7239:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2590,"initialValue":{"arguments":[{"id":2588,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7286:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2586,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7266:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7273:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"7266:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7266:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7224:67:10"},{"expression":{"arguments":[{"id":2592,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7335:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2593,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"7343:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2594,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7352:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2595,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"7364:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2591,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"7308:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7308:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2581,"id":2597,"nodeType":"Return","src":"7301:76:10"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"6879:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7068:20:10","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"target","nameLocation":"7106:6:10","nodeType":"VariableDeclaration","scope":2599,"src":"7098:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"7098:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"data","nameLocation":"7135:4:10","nodeType":"VariableDeclaration","scope":2599,"src":"7122:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2574,"name":"bytes","nodeType":"ElementaryTypeName","src":"7122:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"errorMessage","nameLocation":"7163:12:10","nodeType":"VariableDeclaration","scope":2599,"src":"7149:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2576,"name":"string","nodeType":"ElementaryTypeName","src":"7149:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7088:93:10"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"7200:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2579,"name":"bytes","nodeType":"ElementaryTypeName","src":"7200:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7199:14:10"},"scope":2683,"src":"7059:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2637,"nodeType":"Block","src":"7866:434:10","statements":[{"condition":{"id":2613,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"7880:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2635,"nodeType":"Block","src":"8236:58:10","statements":[{"expression":{"arguments":[{"id":2631,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8258:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2632,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"8270:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2630,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8250:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"ExpressionStatement","src":"8250:33:10"}]},"id":2636,"nodeType":"IfStatement","src":"7876:418:10","trueBody":{"id":2629,"nodeType":"Block","src":"7889:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2614,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7907:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7918:6:10","memberName":"length","nodeType":"MemberAccess","src":"7907:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7928:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7907:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2626,"nodeType":"IfStatement","src":"7903:286:10","trueBody":{"id":2625,"nodeType":"Block","src":"7931:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2620,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"8133:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2619,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8122:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8142:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8114:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8114:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"8114:60:10"}]}},{"expression":{"id":2627,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8209:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2612,"id":2628,"nodeType":"Return","src":"8202:17:10"}]}}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"7390:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7681:26:10","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"target","nameLocation":"7725:6:10","nodeType":"VariableDeclaration","scope":2638,"src":"7717:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"7717:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"success","nameLocation":"7746:7:10","nodeType":"VariableDeclaration","scope":2638,"src":"7741:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2603,"name":"bool","nodeType":"ElementaryTypeName","src":"7741:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"returndata","nameLocation":"7776:10:10","nodeType":"VariableDeclaration","scope":2638,"src":"7763:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"7763:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"errorMessage","nameLocation":"7810:12:10","nodeType":"VariableDeclaration","scope":2638,"src":"7796:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2607,"name":"string","nodeType":"ElementaryTypeName","src":"7796:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7707:121:10"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2638,"src":"7852:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2610,"name":"bytes","nodeType":"ElementaryTypeName","src":"7852:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7851:14:10"},"scope":2683,"src":"7672:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2661,"nodeType":"Block","src":"8681:135:10","statements":[{"condition":{"id":2650,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8695:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2659,"nodeType":"Block","src":"8752:58:10","statements":[{"expression":{"arguments":[{"id":2655,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8774:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2656,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"8786:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2654,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8766:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"8766:33:10"}]},"id":2660,"nodeType":"IfStatement","src":"8691:119:10","trueBody":{"id":2653,"nodeType":"Block","src":"8704:42:10","statements":[{"expression":{"id":2651,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8725:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2649,"id":2652,"nodeType":"Return","src":"8718:17:10"}]}}]},"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"8306:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8530:16:10","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"success","nameLocation":"8561:7:10","nodeType":"VariableDeclaration","scope":2662,"src":"8556:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2640,"name":"bool","nodeType":"ElementaryTypeName","src":"8556:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"returndata","nameLocation":"8591:10:10","nodeType":"VariableDeclaration","scope":2662,"src":"8578:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"8578:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"errorMessage","nameLocation":"8625:12:10","nodeType":"VariableDeclaration","scope":2662,"src":"8611:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2644,"name":"string","nodeType":"ElementaryTypeName","src":"8611:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8546:97:10"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2662,"src":"8667:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"8667:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8666:14:10"},"scope":2683,"src":"8521:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2681,"nodeType":"Block","src":"8905:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2669,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"8981:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8992:6:10","memberName":"length","nodeType":"MemberAccess","src":"8981:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2679,"nodeType":"Block","src":"9311:45:10","statements":[{"expression":{"arguments":[{"id":2676,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"9332:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2675,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9325:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"9325:20:10"}]},"id":2680,"nodeType":"IfStatement","src":"8977:379:10","trueBody":{"id":2674,"nodeType":"Block","src":"9004:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"9162:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9180:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9209:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9203:5:10"},"nodeType":"YulFunctionCall","src":"9203:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9184:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9248:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9252:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9244:3:10"},"nodeType":"YulFunctionCall","src":"9244:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9265:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9237:6:10"},"nodeType":"YulFunctionCall","src":"9237:44:10"},"nodeType":"YulExpressionStatement","src":"9237:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2664,"isOffset":false,"isSlot":false,"src":"9209:10:10","valueSize":1},{"declaration":2664,"isOffset":false,"isSlot":false,"src":"9252:10:10","valueSize":1}],"id":2673,"nodeType":"InlineAssembly","src":"9153:142:10"}]}}]},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8831:7:10","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"returndata","nameLocation":"8852:10:10","nodeType":"VariableDeclaration","scope":2682,"src":"8839:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2663,"name":"bytes","nodeType":"ElementaryTypeName","src":"8839:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"errorMessage","nameLocation":"8878:12:10","nodeType":"VariableDeclaration","scope":2682,"src":"8864:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2665,"name":"string","nodeType":"ElementaryTypeName","src":"8864:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8838:53:10"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[],"src":"8905:0:10"},"scope":2683,"src":"8822:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2684,"src":"194:9170:10","usedErrors":[]}],"src":"101:9264:10"},"id":10},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","exportedSymbols":{"Context":[2705]},"id":2706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2685,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2705,"linearizedBaseContracts":[2705],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2694,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":2691,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:11","memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2690,"id":2693,"nodeType":"Return","src":"712:17:11"}]},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2695,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":2705,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":2700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:11","memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2699,"id":2702,"nodeType":"Return","src":"819:15:11"}]},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2704,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2697,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":2705,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2706,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"},"id":11},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3836],"SignedMath":[3941],"Strings":[2934]},"id":2935,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2707,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2935,"sourceUnit":3837,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2935,"sourceUnit":3942,"src":"152:31:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"185:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":2934,"linearizedBaseContracts":[2934],"name":"Strings","nameLocation":"228:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2713,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:12","nodeType":"VariableDeclaration","scope":2934,"src":"242:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2711,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2716,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:12","nodeType":"VariableDeclaration","scope":2934,"src":"302:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2714,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2763,"nodeType":"Block","src":"518:625:12","statements":[{"id":2762,"nodeType":"UncheckedBlock","src":"528:609:12","statements":[{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"length","nameLocation":"560:6:12","nodeType":"VariableDeclaration","scope":2762,"src":"552:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2732,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"580:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2726,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"569:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3836_$","typeString":"type(library Math)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"569:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:12"},{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"buffer","nameLocation":"618:6:12","nodeType":"VariableDeclaration","scope":2762,"src":"604:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2733,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2739,"initialValue":{"arguments":[{"id":2737,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"638:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2735,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:12"},{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"ptr","nameLocation":"667:3:12","nodeType":"VariableDeclaration","scope":2762,"src":"659:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2742,"nodeType":"VariableDeclarationStatement","src":"659:11:12"},{"AST":{"nodeType":"YulBlock","src":"740:67:12","statements":[{"nodeType":"YulAssignment","src":"758:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:12"},"nodeType":"YulFunctionCall","src":"777:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:12"},"nodeType":"YulFunctionCall","src":"765:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2734,"isOffset":false,"isSlot":false,"src":"769:6:12","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"785:6:12","valueSize":1},{"declaration":2741,"isOffset":false,"isSlot":false,"src":"758:3:12","valueSize":1}],"id":2743,"nodeType":"InlineAssembly","src":"731:76:12"},{"body":{"id":2758,"nodeType":"Block","src":"833:267:12","statements":[{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:12","subExpression":{"id":2745,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"851:5:12"},{"AST":{"nodeType":"YulBlock","src":"934:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:12"},"nodeType":"YulFunctionCall","src":"974:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:12"},"nodeType":"YulFunctionCall","src":"969:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:12"},"nodeType":"YulFunctionCall","src":"956:44:12"},"nodeType":"YulExpressionStatement","src":"956:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2713,"isOffset":false,"isSlot":false,"src":"990:8:12","valueSize":1},{"declaration":2741,"isOffset":false,"isSlot":false,"src":"964:3:12","valueSize":1},{"declaration":2719,"isOffset":false,"isSlot":false,"src":"978:5:12","valueSize":1}],"id":2748,"nodeType":"InlineAssembly","src":"925:93:12"},{"expression":{"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1035:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2752,"nodeType":"ExpressionStatement","src":"1035:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1068:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2757,"nodeType":"IfStatement","src":"1064:21:12","trueBody":{"id":2756,"nodeType":"Break","src":"1080:5:12"}}]},"condition":{"hexValue":"74727565","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2759,"nodeType":"WhileStatement","src":"820:280:12"},{"expression":{"id":2760,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1120:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2723,"id":2761,"nodeType":"Return","src":"1113:13:12"}]}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"352:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:12","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"value","nameLocation":"473:5:12","nodeType":"VariableDeclaration","scope":2764,"src":"465:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:12"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"503:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2721,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:12"},"scope":2934,"src":"447:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2791,"nodeType":"Block","src":"1313:103:12","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"1354:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:12","trueExpression":{"hexValue":"2d","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"1400:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2783,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"1385:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3941_$","typeString":"type(library SignedMath)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3940,"src":"1385:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2782,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2764,2792],"referencedDeclaration":2764,"src":"1376:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2772,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:12","typeDescriptions":{}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2771,"id":2790,"nodeType":"Return","src":"1323:86:12"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"1149:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:12","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"value","nameLocation":"1268:5:12","nodeType":"VariableDeclaration","scope":2792,"src":"1261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2766,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:12"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"1298:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2769,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:12"},"scope":2934,"src":"1243:173:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2811,"nodeType":"Block","src":"1595:100:12","statements":[{"id":2810,"nodeType":"UncheckedBlock","src":"1605:84:12","statements":[{"expression":{"arguments":[{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"1648:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"1667:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2802,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"1655:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3836_$","typeString":"type(library Math)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"1655:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2812,2888,2908],"referencedDeclaration":2888,"src":"1636:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2799,"id":2809,"nodeType":"Return","src":"1629:49:12"}]}]},"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"1422:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:12","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"value","nameLocation":"1550:5:12","nodeType":"VariableDeclaration","scope":2812,"src":"1542:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:12"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"1580:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2797,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:12"},"scope":2934,"src":"1521:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2887,"nodeType":"Block","src":"1908:347:12","statements":[{"assignments":[2823],"declarations":[{"constant":false,"id":2823,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:12","nodeType":"VariableDeclaration","scope":2887,"src":"1918:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2822,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2832,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2827,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1954:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2824,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:12"},{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2833,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"1975:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2835,"indexExpression":{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2838,"nodeType":"ExpressionStatement","src":"1975:15:12"},{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2839,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"2000:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2841,"indexExpression":{"hexValue":"31","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2844,"nodeType":"ExpressionStatement","src":"2000:15:12"},{"body":{"id":2873,"nodeType":"Block","src":"2070:83:12","statements":[{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2859,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"2084:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"indexExpression":{"id":2860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"2091:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2862,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2096:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2866,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2105:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2868,"nodeType":"ExpressionStatement","src":"2084:33:12"},{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"2131:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"2058:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"initializationExpression":{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"i","nameLocation":"2038:1:12","nodeType":"VariableDeclaration","scope":2874,"src":"2030:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2852,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2848,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2046:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:12"},"loopExpression":{"expression":{"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:12","subExpression":{"id":2856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"2067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2858,"nodeType":"ExpressionStatement","src":"2065:3:12"},"nodeType":"ForStatement","src":"2025:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2881,"nodeType":"ExpressionStatement","src":"2162:55:12"},{"expression":{"arguments":[{"id":2884,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"2241:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2882,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:12","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2821,"id":2886,"nodeType":"Return","src":"2227:21:12"}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"1701:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:12","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"1847:5:12","nodeType":"VariableDeclaration","scope":2888,"src":"1839:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"length","nameLocation":"1862:6:12","nodeType":"VariableDeclaration","scope":2888,"src":"1854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2888,"src":"1893:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2819,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:12"},"scope":2934,"src":"1818:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"2480:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2901,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2525:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2899,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{}}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:12","typeDescriptions":{}}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2904,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"2533:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2896,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2812,2888,2908],"referencedDeclaration":2888,"src":"2497:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2895,"id":2906,"nodeType":"Return","src":"2490:59:12"}]},"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"2261:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:12","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"addr","nameLocation":"2436:4:12","nodeType":"VariableDeclaration","scope":2908,"src":"2428:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:12"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"2465:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2893,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:12"},"scope":2934,"src":"2407:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2932,"nodeType":"Block","src":"2711:66:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2744:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2919,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:12","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"2767:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2925,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:12","typeDescriptions":{}}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2924,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2917,"id":2931,"nodeType":"Return","src":"2721:49:12"}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"2562:66:12","text":" @dev Returns true if the two strings are equal."},"id":2933,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:12","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"a","nameLocation":"2662:1:12","nodeType":"VariableDeclaration","scope":2933,"src":"2648:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2910,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"b","nameLocation":"2679:1:12","nodeType":"VariableDeclaration","scope":2933,"src":"2665:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2912,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:12"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"2705:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2915,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:12"},"scope":2934,"src":"2633:144:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2935,"src":"220:2559:12","usedErrors":[]}],"src":"101:2679:12"},"id":12},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2958],"IERC165":[2970]},"id":2959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2936,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:13"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2959,"sourceUnit":2971,"src":"124:23:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2939,"name":"IERC165","nameLocations":["754:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2970,"src":"754:7:13"},"id":2940,"nodeType":"InheritanceSpecifier","src":"754:7:13"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"149:576:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2958,"linearizedBaseContracts":[2958,2970],"name":"ERC165","nameLocation":"744:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2969],"body":{"id":2956,"nodeType":"Block","src":"920:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"937:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2951,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2970_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2970_$","typeString":"type(contract IERC165)"}],"id":2950,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2970","typeString":"type(contract IERC165)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2948,"id":2955,"nodeType":"Return","src":"930:47:13"}]},"documentation":{"id":2941,"nodeType":"StructuredDocumentation","src":"768:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2957,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:13","nodeType":"FunctionDefinition","overrides":{"id":2945,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:13"},"parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:13","nodeType":"VariableDeclaration","scope":2957,"src":"856:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2942,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:13"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2957,"src":"914:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2946,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:13"},"scope":2958,"src":"829:155:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2959,"src":"726:260:13","usedErrors":[]}],"src":"99:888:13"},"id":13},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2970]},"id":2971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2960,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"125:279:14","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2970,"linearizedBaseContracts":[2970],"name":"IERC165","nameLocation":"415:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"429:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2969,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:14","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:14","nodeType":"VariableDeclaration","scope":2969,"src":"801:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2963,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:14"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2969,"src":"844:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2966,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:14"},"scope":2970,"src":"774:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2971,"src":"405:447:14","usedErrors":[]}],"src":"100:753:14"},"id":14},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3836]},"id":3837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2972,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"128:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3836,"linearizedBaseContracts":[3836],"name":"Math","nameLocation":"210:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2977,"members":[{"id":2974,"name":"Down","nameLocation":"245:4:15","nodeType":"EnumValue","src":"245:4:15"},{"id":2975,"name":"Up","nameLocation":"287:2:15","nodeType":"EnumValue","src":"287:2:15"},{"id":2976,"name":"Zero","nameLocation":"318:4:15","nodeType":"EnumValue","src":"318:4:15"}],"name":"Rounding","nameLocation":"226:8:15","nodeType":"EnumDefinition","src":"221:122:15"},{"body":{"id":2994,"nodeType":"Block","src":"480:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"497:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2988,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"501:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2991,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"509:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:15","trueExpression":{"id":2990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"505:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2986,"id":2993,"nodeType":"Return","src":"490:20:15"}]},"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"349:59:15","text":" @dev Returns the largest of two numbers."},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:15","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"a","nameLocation":"434:1:15","nodeType":"VariableDeclaration","scope":2995,"src":"426:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"b","nameLocation":"445:1:15","nodeType":"VariableDeclaration","scope":2995,"src":"437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:15"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2995,"src":"471:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:15"},"scope":3836,"src":"413:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3012,"nodeType":"Block","src":"655:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"672:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"684:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:15","trueExpression":{"id":3008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"680:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3004,"id":3011,"nodeType":"Return","src":"665:20:15"}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"523:60:15","text":" @dev Returns the smallest of two numbers."},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:15","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"a","nameLocation":"609:1:15","nodeType":"VariableDeclaration","scope":3013,"src":"601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"b","nameLocation":"620:1:15","nodeType":"VariableDeclaration","scope":3013,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:15"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"646:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:15"},"scope":3836,"src":"588:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"876:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3024,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"935:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"941:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3028,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3022,"id":3034,"nodeType":"Return","src":"923:28:15"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"698:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:15","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"a","nameLocation":"830:1:15","nodeType":"VariableDeclaration","scope":3036,"src":"822:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"b","nameLocation":"841:1:15","nodeType":"VariableDeclaration","scope":3036,"src":"833:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:15"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"867:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:15"},"scope":3836,"src":"805:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3060,"nodeType":"Block","src":"1228:123:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3054,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1339:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:15","trueExpression":{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3045,"id":3059,"nodeType":"Return","src":"1309:35:15"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"964:188:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:15","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"a","nameLocation":"1182:1:15","nodeType":"VariableDeclaration","scope":3061,"src":"1174:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"b","nameLocation":"1193:1:15","nodeType":"VariableDeclaration","scope":3061,"src":"1185:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:15"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3061,"src":"1219:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:15"},"scope":3836,"src":"1157:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3183,"nodeType":"Block","src":"1765:3822:15","statements":[{"id":3182,"nodeType":"UncheckedBlock","src":"1775:3806:15","statements":[{"assignments":[3074],"declarations":[{"constant":false,"id":3074,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:15","nodeType":"VariableDeclaration","scope":3182,"src":"2096:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3075,"nodeType":"VariableDeclarationStatement","src":"2096:13:15"},{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:15","nodeType":"VariableDeclaration","scope":3182,"src":"2168:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3078,"nodeType":"VariableDeclarationStatement","src":"2168:13:15"},{"AST":{"nodeType":"YulBlock","src":"2248:157:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:15"},"nodeType":"YulFunctionCall","src":"2289:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:15"},"nodeType":"YulFunctionCall","src":"2276:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:15","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:15"},"nodeType":"YulFunctionCall","src":"2322:9:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:15"}]},{"nodeType":"YulAssignment","src":"2348:43:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:15"},"nodeType":"YulFunctionCall","src":"2361:14:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:15"},"nodeType":"YulFunctionCall","src":"2377:13:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:15"},"nodeType":"YulFunctionCall","src":"2357:34:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3074,"isOffset":false,"isSlot":false,"src":"2313:5:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"2369:5:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"2384:5:15","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"2348:5:15","valueSize":1},{"declaration":3064,"isOffset":false,"isSlot":false,"src":"2283:1:15","valueSize":1},{"declaration":3064,"isOffset":false,"isSlot":false,"src":"2326:1:15","valueSize":1},{"declaration":3066,"isOffset":false,"isSlot":false,"src":"2286:1:15","valueSize":1},{"declaration":3066,"isOffset":false,"isSlot":false,"src":"2329:1:15","valueSize":1}],"id":3079,"nodeType":"InlineAssembly","src":"2239:166:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"2486:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3088,"nodeType":"IfStatement","src":"2482:75:15","trueBody":{"id":3087,"nodeType":"Block","src":"2498:59:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"2523:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2531:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2523:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3072,"id":3086,"nodeType":"Return","src":"2516:26:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3090,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2667:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3091,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"2681:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2667:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2688:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2659:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3095,"nodeType":"ExpressionStatement","src":"2659:53:15"},{"assignments":[3097],"declarations":[{"constant":false,"id":3097,"mutability":"mutable","name":"remainder","nameLocation":"2976:9:15","nodeType":"VariableDeclaration","scope":3182,"src":"2968:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3098,"nodeType":"VariableDeclarationStatement","src":"2968:17:15"},{"AST":{"nodeType":"YulBlock","src":"3008:291:15","statements":[{"nodeType":"YulAssignment","src":"3077:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3097:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"3100:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"3103:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3090:6:15"},"nodeType":"YulFunctionCall","src":"3090:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3077:9:15"}]},{"nodeType":"YulAssignment","src":"3197:41:15","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3210:5:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3220:9:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"3231:5:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3217:2:15"},"nodeType":"YulFunctionCall","src":"3217:20:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3206:3:15"},"nodeType":"YulFunctionCall","src":"3206:32:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3197:5:15"}]},{"nodeType":"YulAssignment","src":"3255:30:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3268:5:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"3275:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3264:3:15"},"nodeType":"YulFunctionCall","src":"3264:21:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3255:5:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3068,"isOffset":false,"isSlot":false,"src":"3103:11:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"3231:5:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"3255:5:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"3268:5:15","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3197:5:15","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3210:5:15","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3077:9:15","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3220:9:15","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3275:9:15","valueSize":1},{"declaration":3064,"isOffset":false,"isSlot":false,"src":"3097:1:15","valueSize":1},{"declaration":3066,"isOffset":false,"isSlot":false,"src":"3100:1:15","valueSize":1}],"id":3099,"nodeType":"InlineAssembly","src":"2999:300:15"},{"assignments":[3101],"declarations":[{"constant":false,"id":3101,"mutability":"mutable","name":"twos","nameLocation":"3614:4:15","nodeType":"VariableDeclaration","scope":3182,"src":"3606:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3606:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3621:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3636:12:15","subExpression":{"id":3103,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3637:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3651:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3636:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3635:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3606:47:15"},{"AST":{"nodeType":"YulBlock","src":"3676:362:15","statements":[{"nodeType":"YulAssignment","src":"3741:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3760:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"3773:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3756:3:15"},"nodeType":"YulFunctionCall","src":"3756:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3741:11:15"}]},{"nodeType":"YulAssignment","src":"3845:25:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3858:5:15"},{"name":"twos","nodeType":"YulIdentifier","src":"3865:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3854:3:15"},"nodeType":"YulFunctionCall","src":"3854:16:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3845:5:15"}]},{"nodeType":"YulAssignment","src":"3985:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4005:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4008:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4001:3:15"},"nodeType":"YulFunctionCall","src":"4001:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4015:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3997:3:15"},"nodeType":"YulFunctionCall","src":"3997:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4022:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3993:3:15"},"nodeType":"YulFunctionCall","src":"3993:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3985:4:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3068,"isOffset":false,"isSlot":false,"src":"3741:11:15","valueSize":1},{"declaration":3068,"isOffset":false,"isSlot":false,"src":"3760:11:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"3845:5:15","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"3858:5:15","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"3773:4:15","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"3865:4:15","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"3985:4:15","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"4008:4:15","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"4015:4:15","valueSize":1}],"id":3110,"nodeType":"InlineAssembly","src":"3667:371:15"},{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"4104:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4113:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3113,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"4121:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4104:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"4104:21:15"},{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"inverse","nameLocation":"4451:7:15","nodeType":"VariableDeclaration","scope":3182,"src":"4443:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4443:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3125,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4462:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3120,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4466:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4462:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4461:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4481:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4461:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4443:39:15"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4714:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3129,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4728:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4714:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4710:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"4699:36:15"},{"expression":{"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4783:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3137,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4797:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4783:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4779:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4768:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3141,"nodeType":"ExpressionStatement","src":"4768:36:15"},{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4849:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4853:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3145,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4853:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4849:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4838:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3149,"nodeType":"ExpressionStatement","src":"4838:36:15"},{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3150,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4908:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4919:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4923:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3153,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4937:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4923:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4919:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4908:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ExpressionStatement","src":"4908:36:15"},{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3158,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4989:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4993:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3161,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5007:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4993:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4989:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4978:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ExpressionStatement","src":"4978:36:15"},{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3166,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"5064:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3169,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5064:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5060:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5049:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3173,"nodeType":"ExpressionStatement","src":"5049:36:15"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"5519:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"5528:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3176,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5536:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5528:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5519:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"5519:24:15"},{"expression":{"id":3180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"5564:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3072,"id":3181,"nodeType":"Return","src":"5557:13:15"}]}]},"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"1357:305:15","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:15","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"x","nameLocation":"1691:1:15","nodeType":"VariableDeclaration","scope":3184,"src":"1683:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"y","nameLocation":"1702:1:15","nodeType":"VariableDeclaration","scope":3184,"src":"1694:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:15","nodeType":"VariableDeclaration","scope":3184,"src":"1705:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:15"},"returnParameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"result","nameLocation":"1757:6:15","nodeType":"VariableDeclaration","scope":3184,"src":"1749:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:15"},"scope":3836,"src":"1667:3920:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"5829:189:15","statements":[{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"result","nameLocation":"5847:6:15","nodeType":"VariableDeclaration","scope":3227,"src":"5839:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3206,"initialValue":{"arguments":[{"id":3202,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"5863:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3203,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"5866:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3204,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"5869:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3184,3228],"referencedDeclaration":3184,"src":"5856:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5839:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5895:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3208,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"5907:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2977_$","typeString":"type(enum Math.Rounding)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5916:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"5907:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"src":"5895:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"5929:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3213,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"5932:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3214,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"5935:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3211,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5922:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5922:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5922:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5895:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"IfStatement","src":"5891:98:15","trueBody":{"id":3223,"nodeType":"Block","src":"5953:36:15","statements":[{"expression":{"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"5967:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5977:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5967:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3222,"nodeType":"ExpressionStatement","src":"5967:11:15"}]}},{"expression":{"id":3225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6005:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3198,"id":3226,"nodeType":"Return","src":"5998:13:15"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"5593:121:15","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5728:6:15","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"x","nameLocation":"5743:1:15","nodeType":"VariableDeclaration","scope":3228,"src":"5735:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5735:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"y","nameLocation":"5754:1:15","nodeType":"VariableDeclaration","scope":3228,"src":"5746:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"denominator","nameLocation":"5765:11:15","nodeType":"VariableDeclaration","scope":3228,"src":"5757:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5757:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"rounding","nameLocation":"5787:8:15","nodeType":"VariableDeclaration","scope":3228,"src":"5778:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"typeName":{"id":3193,"nodeType":"UserDefinedTypeName","pathNode":{"id":3192,"name":"Rounding","nameLocations":["5778:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2977,"src":"5778:8:15"},"referencedDeclaration":2977,"src":"5778:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5734:62:15"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"5820:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5819:9:15"},"scope":3836,"src":"5719:299:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3339,"nodeType":"Block","src":"6294:1585:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"6308:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6313:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6308:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"IfStatement","src":"6304:45:15","trueBody":{"id":3241,"nodeType":"Block","src":"6316:33:15","statements":[{"expression":{"hexValue":"30","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6337:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3235,"id":3240,"nodeType":"Return","src":"6330:8:15"}]}},{"assignments":[3244],"declarations":[{"constant":false,"id":3244,"mutability":"mutable","name":"result","nameLocation":"7036:6:15","nodeType":"VariableDeclaration","scope":3339,"src":"7028:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"7028:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3253,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7045:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7056:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3246,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3508,3544],"referencedDeclaration":3508,"src":"7051:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7062:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7051:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7050:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7045:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7028:36:15"},{"id":3338,"nodeType":"UncheckedBlock","src":"7465:408:15","statements":[{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7489:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7499:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7508:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7512:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7508:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7499:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7498:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7523:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7498:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7489:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3264,"nodeType":"ExpressionStatement","src":"7489:35:15"},{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7538:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7548:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7557:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7561:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7557:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7548:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7547:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7572:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7547:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7538:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"7538:35:15"},{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7587:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7597:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7606:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7610:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7606:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7597:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7596:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7596:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7587:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"nodeType":"ExpressionStatement","src":"7587:35:15"},{"expression":{"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7636:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7646:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7655:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7659:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7655:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7646:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7645:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7670:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7645:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7636:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3297,"nodeType":"ExpressionStatement","src":"7636:35:15"},{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7685:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7695:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7704:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7708:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7704:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7695:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7694:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7719:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7694:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7685:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"7685:35:15"},{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7734:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7744:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7753:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7757:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7753:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7743:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7768:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7743:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7734:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"7734:35:15"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7783:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7793:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7802:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7806:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7802:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7792:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7817:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7792:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7783:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"7783:35:15"},{"expression":{"arguments":[{"id":3332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7843:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7851:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7855:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3331,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7839:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7839:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3235,"id":3337,"nodeType":"Return","src":"7832:30:15"}]}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"6024:208:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3340,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6246:4:15","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"a","nameLocation":"6259:1:15","nodeType":"VariableDeclaration","scope":3340,"src":"6251:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6250:11:15"},"returnParameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3340,"src":"6285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6284:9:15"},"scope":3836,"src":"6237:1642:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"8055:161:15","statements":[{"id":3374,"nodeType":"UncheckedBlock","src":"8065:145:15","statements":[{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"result","nameLocation":"8097:6:15","nodeType":"VariableDeclaration","scope":3374,"src":"8089:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3356,"initialValue":{"arguments":[{"id":3354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"8111:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3353,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3340,3376],"referencedDeclaration":3340,"src":"8106:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8106:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8089:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8134:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"8144:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3359,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"8156:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2977_$","typeString":"type(enum Math.Rounding)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8165:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"8156:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"src":"8144:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8171:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8180:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8171:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"8189:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8171:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8144:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8197:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8144:54:15","trueExpression":{"hexValue":"31","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8193:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8143:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8134:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3350,"id":3373,"nodeType":"Return","src":"8127:72:15"}]}]},"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"7885:89:15","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"7988:4:15","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"a","nameLocation":"8001:1:15","nodeType":"VariableDeclaration","scope":3376,"src":"7993:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7993:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"rounding","nameLocation":"8013:8:15","nodeType":"VariableDeclaration","scope":3376,"src":"8004:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"typeName":{"id":3345,"nodeType":"UserDefinedTypeName","pathNode":{"id":3344,"name":"Rounding","nameLocations":["8004:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2977,"src":"8004:8:15"},"referencedDeclaration":2977,"src":"8004:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"7992:30:15"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"8046:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"8046:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8045:9:15"},"scope":3836,"src":"7979:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3507,"nodeType":"Block","src":"8401:922:15","statements":[{"assignments":[3385],"declarations":[{"constant":false,"id":3385,"mutability":"mutable","name":"result","nameLocation":"8419:6:15","nodeType":"VariableDeclaration","scope":3507,"src":"8411:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"8411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"initialValue":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8428:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8411:18:15"},{"id":3504,"nodeType":"UncheckedBlock","src":"8439:855:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8467:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8476:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8467:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8482:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8467:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3402,"nodeType":"IfStatement","src":"8463:99:15","trueBody":{"id":3401,"nodeType":"Block","src":"8485:77:15","statements":[{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8503:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8513:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8503:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"8503:13:15"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8534:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8544:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8534:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"8534:13:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8579:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8588:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8579:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8593:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8579:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3417,"nodeType":"IfStatement","src":"8575:96:15","trueBody":{"id":3416,"nodeType":"Block","src":"8596:75:15","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8614:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8624:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8614:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"8614:12:15"},{"expression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8644:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8654:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8644:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3415,"nodeType":"ExpressionStatement","src":"8644:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8688:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8688:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8702:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8688:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3432,"nodeType":"IfStatement","src":"8684:96:15","trueBody":{"id":3431,"nodeType":"Block","src":"8705:75:15","statements":[{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8723:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8733:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8723:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"nodeType":"ExpressionStatement","src":"8723:12:15"},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8753:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8763:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8753:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"8753:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8797:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8797:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8811:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8797:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"IfStatement","src":"8793:96:15","trueBody":{"id":3446,"nodeType":"Block","src":"8814:75:15","statements":[{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8832:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8842:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8832:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"nodeType":"ExpressionStatement","src":"8832:12:15"},{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8862:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8872:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8862:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"8862:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8906:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8919:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8906:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3462,"nodeType":"IfStatement","src":"8902:93:15","trueBody":{"id":3461,"nodeType":"Block","src":"8922:73:15","statements":[{"expression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8940:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8940:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3456,"nodeType":"ExpressionStatement","src":"8940:11:15"},{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8969:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8979:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"nodeType":"ExpressionStatement","src":"8969:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9012:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9021:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9012:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9025:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9012:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3477,"nodeType":"IfStatement","src":"9008:93:15","trueBody":{"id":3476,"nodeType":"Block","src":"9028:73:15","statements":[{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9046:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9046:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ExpressionStatement","src":"9046:11:15"},{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9075:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9075:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ExpressionStatement","src":"9075:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9118:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9127:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9118:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9118:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"IfStatement","src":"9114:93:15","trueBody":{"id":3491,"nodeType":"Block","src":"9134:73:15","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9152:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9162:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9152:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"9152:11:15"},{"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9181:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9181:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3490,"nodeType":"ExpressionStatement","src":"9181:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9224:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9233:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9224:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9237:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9224:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3503,"nodeType":"IfStatement","src":"9220:64:15","trueBody":{"id":3502,"nodeType":"Block","src":"9240:44:15","statements":[{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9258:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9268:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9258:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3501,"nodeType":"ExpressionStatement","src":"9258:11:15"}]}}]},{"expression":{"id":3505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9310:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3383,"id":3506,"nodeType":"Return","src":"9303:13:15"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"8222:113:15","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3508,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8349:4:15","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"value","nameLocation":"8362:5:15","nodeType":"VariableDeclaration","scope":3508,"src":"8354:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"8354:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8353:15:15"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3508,"src":"8392:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"8392:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8391:9:15"},"scope":3836,"src":"8340:983:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"9556:165:15","statements":[{"id":3542,"nodeType":"UncheckedBlock","src":"9566:149:15","statements":[{"assignments":[3520],"declarations":[{"constant":false,"id":3520,"mutability":"mutable","name":"result","nameLocation":"9598:6:15","nodeType":"VariableDeclaration","scope":3542,"src":"9590:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3524,"initialValue":{"arguments":[{"id":3522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9612:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3521,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3508,3544],"referencedDeclaration":3508,"src":"9607:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9607:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9590:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9639:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"9649:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3527,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"9661:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2977_$","typeString":"type(enum Math.Rounding)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9670:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"9661:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"src":"9649:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9681:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9676:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9690:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9676:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9649:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9702:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9649:54:15","trueExpression":{"hexValue":"31","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9698:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9648:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9639:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3518,"id":3541,"nodeType":"Return","src":"9632:72:15"}]}]},"documentation":{"id":3509,"nodeType":"StructuredDocumentation","src":"9329:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9485:4:15","nodeType":"FunctionDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"value","nameLocation":"9498:5:15","nodeType":"VariableDeclaration","scope":3544,"src":"9490:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"9490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"rounding","nameLocation":"9514:8:15","nodeType":"VariableDeclaration","scope":3544,"src":"9505:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"typeName":{"id":3513,"nodeType":"UserDefinedTypeName","pathNode":{"id":3512,"name":"Rounding","nameLocations":["9505:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2977,"src":"9505:8:15"},"referencedDeclaration":2977,"src":"9505:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9489:34:15"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"9547:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"9547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9546:9:15"},"scope":3836,"src":"9476:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3672,"nodeType":"Block","src":"9908:854:15","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"result","nameLocation":"9926:6:15","nodeType":"VariableDeclaration","scope":3672,"src":"9918:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9918:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9935:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9918:18:15"},{"id":3669,"nodeType":"UncheckedBlock","src":"9946:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"9974:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9989:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"9983:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"9974:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3572,"nodeType":"IfStatement","src":"9970:103:15","trueBody":{"id":3571,"nodeType":"Block","src":"9993:80:15","statements":[{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10011:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10020:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10011:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"10011:17:15"},{"expression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10056:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10046:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ExpressionStatement","src":"10046:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10090:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10105:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10099:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10090:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3589,"nodeType":"IfStatement","src":"10086:103:15","trueBody":{"id":3588,"nodeType":"Block","src":"10109:80:15","statements":[{"expression":{"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10127:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10136:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10136:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10127:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ExpressionStatement","src":"10127:17:15"},{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10162:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10172:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10162:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3587,"nodeType":"ExpressionStatement","src":"10162:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10206:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10215:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10221:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10215:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10206:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3606,"nodeType":"IfStatement","src":"10202:103:15","trueBody":{"id":3605,"nodeType":"Block","src":"10225:80:15","statements":[{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10243:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10252:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10252:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10243:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"10243:17:15"},{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10278:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10288:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10278:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"10278:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10322:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10331:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10337:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10331:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10322:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3623,"nodeType":"IfStatement","src":"10318:100:15","trueBody":{"id":3622,"nodeType":"Block","src":"10340:78:15","statements":[{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10358:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10367:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10373:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10367:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10358:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"10358:16:15"},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10392:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10402:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10392:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"10392:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10435:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10444:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10435:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"10431:100:15","trueBody":{"id":3639,"nodeType":"Block","src":"10453:78:15","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10471:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10480:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10480:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10471:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"10471:16:15"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10505:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10515:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"10505:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10548:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10557:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10557:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10548:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"10544:100:15","trueBody":{"id":3656,"nodeType":"Block","src":"10566:78:15","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10584:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10593:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10599:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10593:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10584:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"10584:16:15"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10618:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10628:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10618:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"10618:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10661:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10670:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10670:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10661:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"IfStatement","src":"10657:66:15","trueBody":{"id":3667,"nodeType":"Block","src":"10679:44:15","statements":[{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10697:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10707:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10697:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"10697:11:15"}]}}]},{"expression":{"id":3670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10749:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3551,"id":3671,"nodeType":"Return","src":"10742:13:15"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"9727:114:15","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9855:5:15","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"9869:5:15","nodeType":"VariableDeclaration","scope":3673,"src":"9861:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"9861:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9860:15:15"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3673,"src":"9899:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"9899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9898:9:15"},"scope":3836,"src":"9846:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3708,"nodeType":"Block","src":"10997:167:15","statements":[{"id":3707,"nodeType":"UncheckedBlock","src":"11007:151:15","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"result","nameLocation":"11039:6:15","nodeType":"VariableDeclaration","scope":3707,"src":"11031:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"11031:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3689,"initialValue":{"arguments":[{"id":3687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"11054:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3673,3709],"referencedDeclaration":3673,"src":"11048:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11031:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11081:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3691,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"11091:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3692,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"11103:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2977_$","typeString":"type(enum Math.Rounding)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11112:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"11103:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"src":"11091:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11124:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11118:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"11133:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11118:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11091:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11145:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11091:55:15","trueExpression":{"hexValue":"31","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11090:57:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11081:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3706,"nodeType":"Return","src":"11074:73:15"}]}]},"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"10768:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10925:5:15","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"value","nameLocation":"10939:5:15","nodeType":"VariableDeclaration","scope":3709,"src":"10931:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"10931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"rounding","nameLocation":"10955:8:15","nodeType":"VariableDeclaration","scope":3709,"src":"10946:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"Rounding","nameLocations":["10946:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2977,"src":"10946:8:15"},"referencedDeclaration":2977,"src":"10946:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10930:34:15"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3709,"src":"10988:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10987:9:15"},"scope":3836,"src":"10916:248:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3795,"nodeType":"Block","src":"11478:600:15","statements":[{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"result","nameLocation":"11496:6:15","nodeType":"VariableDeclaration","scope":3795,"src":"11488:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11488:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3720,"initialValue":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11505:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11488:18:15"},{"id":3792,"nodeType":"UncheckedBlock","src":"11516:533:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11544:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11544:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11544:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"IfStatement","src":"11540:98:15","trueBody":{"id":3734,"nodeType":"Block","src":"11562:76:15","statements":[{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11590:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11580:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"11580:13:15"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11611:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11621:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11611:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"11611:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11655:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11655:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11669:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11655:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"nodeType":"IfStatement","src":"11651:95:15","trueBody":{"id":3749,"nodeType":"Block","src":"11672:74:15","statements":[{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11690:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11700:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11690:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"11690:12:15"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11720:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11730:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11720:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"11720:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11763:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11763:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11777:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11763:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"11759:95:15","trueBody":{"id":3764,"nodeType":"Block","src":"11780:74:15","statements":[{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11798:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11808:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11798:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"11798:12:15"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11828:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11838:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11828:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"11828:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11871:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11880:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11871:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11885:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11871:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"11867:95:15","trueBody":{"id":3779,"nodeType":"Block","src":"11888:74:15","statements":[{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11916:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11906:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3774,"nodeType":"ExpressionStatement","src":"11906:12:15"},{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11936:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11946:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11936:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"11936:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11979:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11988:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11979:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11992:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11979:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3791,"nodeType":"IfStatement","src":"11975:64:15","trueBody":{"id":3790,"nodeType":"Block","src":"11995:44:15","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"12013:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12013:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"12013:11:15"}]}}]},{"expression":{"id":3793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"12065:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3794,"nodeType":"Return","src":"12058:13:15"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"11170:240:15","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11424:6:15","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"value","nameLocation":"11439:5:15","nodeType":"VariableDeclaration","scope":3796,"src":"11431:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"11431:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11430:15:15"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"11469:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11468:9:15"},"scope":3836,"src":"11415:663:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3834,"nodeType":"Block","src":"12315:174:15","statements":[{"id":3833,"nodeType":"UncheckedBlock","src":"12325:158:15","statements":[{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"result","nameLocation":"12357:6:15","nodeType":"VariableDeclaration","scope":3833,"src":"12349:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"12349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3812,"initialValue":{"arguments":[{"id":3810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"12373:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3809,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3796,3835],"referencedDeclaration":3796,"src":"12366:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12366:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12349:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12400:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"12410:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3815,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"12422:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2977_$","typeString":"type(enum Math.Rounding)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12431:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"12422:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"src":"12410:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12437:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12443:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12453:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12443:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12442:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12437:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"12458:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12437:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12410:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12470:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12410:61:15","trueExpression":{"hexValue":"31","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12409:63:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12400:72:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3832,"nodeType":"Return","src":"12393:79:15"}]}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"12084:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3835,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12242:6:15","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"value","nameLocation":"12257:5:15","nodeType":"VariableDeclaration","scope":3835,"src":"12249:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"12249:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"rounding","nameLocation":"12273:8:15","nodeType":"VariableDeclaration","scope":3835,"src":"12264:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"},"typeName":{"id":3801,"nodeType":"UserDefinedTypeName","pathNode":{"id":3800,"name":"Rounding","nameLocations":["12264:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2977,"src":"12264:8:15"},"referencedDeclaration":2977,"src":"12264:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2977","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12248:34:15"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"12306:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"12306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12305:9:15"},"scope":3836,"src":"12233:256:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3837,"src":"202:12289:15","usedErrors":[]}],"src":"103:12389:15"},"id":15},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3941]},"id":3942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3838,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"134:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3941,"linearizedBaseContracts":[3941],"name":"SignedMath","nameLocation":"223:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3856,"nodeType":"Block","src":"375:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"392:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"396:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"404:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:16","trueExpression":{"id":3852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"400:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3848,"id":3855,"nodeType":"Return","src":"385:20:16"}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"240:66:16","text":" @dev Returns the largest of two signed numbers."},"id":3857,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:16","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"a","nameLocation":"331:1:16","nodeType":"VariableDeclaration","scope":3857,"src":"324:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3841,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"b","nameLocation":"341:1:16","nodeType":"VariableDeclaration","scope":3857,"src":"334:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3843,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:16"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"367:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3846,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:16"},"scope":3941,"src":"311:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3874,"nodeType":"Block","src":"554:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"571:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3868,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"575:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"583:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:16","trueExpression":{"id":3870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"579:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3866,"id":3873,"nodeType":"Return","src":"564:20:16"}]},"documentation":{"id":3858,"nodeType":"StructuredDocumentation","src":"418:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":3875,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:16","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"a","nameLocation":"510:1:16","nodeType":"VariableDeclaration","scope":3875,"src":"503:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3859,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3862,"mutability":"mutable","name":"b","nameLocation":"520:1:16","nodeType":"VariableDeclaration","scope":3875,"src":"513:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3861,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:16"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3875,"src":"546:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3864,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:16"},"scope":3941,"src":"490:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3918,"nodeType":"Block","src":"796:162:16","statements":[{"assignments":[3886],"declarations":[{"constant":false,"id":3886,"mutability":"mutable","name":"x","nameLocation":"865:1:16","nodeType":"VariableDeclaration","scope":3918,"src":"858:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3885,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3899,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"870:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"874:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"881:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3892,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"885:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"910:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3905,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"930:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:16","typeDescriptions":{}}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3901,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:16","typeDescriptions":{}}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"944:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"948:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3884,"id":3917,"nodeType":"Return","src":"903:48:16"}]},"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"597:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:16","nodeType":"FunctionDefinition","parameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"a","nameLocation":"752:1:16","nodeType":"VariableDeclaration","scope":3919,"src":"745:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3877,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"b","nameLocation":"762:1:16","nodeType":"VariableDeclaration","scope":3919,"src":"755:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3879,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:16"},"returnParameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"788:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3882,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:16"},"scope":3941,"src":"728:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3939,"nodeType":"Block","src":"1102:158:16","statements":[{"id":3938,"nodeType":"UncheckedBlock","src":"1112:142:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"1227:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:16","subExpression":{"id":3933,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"1241:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:16","trueExpression":{"id":3932,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"1236:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{}}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3926,"id":3937,"nodeType":"Return","src":"1212:31:16"}]}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"964:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:16","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"n","nameLocation":"1067:1:16","nodeType":"VariableDeclaration","scope":3940,"src":"1060:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3921,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:16"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3940,"src":"1093:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:16"},"scope":3941,"src":"1047:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3942,"src":"215:1047:16","usedErrors":[]}],"src":"109:1154:16"},"id":16},"src/core/AccessController.sol":{"ast":{"absolutePath":"src/core/AccessController.sol","exportedSymbols":{"AccessControl":[315],"AccessController":[3969],"Context":[2705],"ERC165":[2958],"IAccessControl":[388],"IERC165":[2970],"Math":[3836],"SignedMath":[3941],"Strings":[2934]},"id":3970,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3943,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/AccessControl.sol","file":"lib/openzeppelin-contracts/contracts/access/AccessControl.sol","id":3944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3970,"sourceUnit":316,"src":"57:71:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3945,"name":"AccessControl","nameLocations":["159:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"159:13:17"},"id":3946,"nodeType":"InheritanceSpecifier","src":"159:13:17"}],"canonicalName":"AccessController","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3969,"linearizedBaseContracts":[3969,315,2958,2970,388,2705],"name":"AccessController","nameLocation":"139:16:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f8742254","id":3951,"mutability":"constant","name":"MAINTAINER_ROLE","nameLocation":"302:15:17","nodeType":"VariableDeclaration","scope":3969,"src":"278:70:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"278:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d41494e5441494e45525f524f4c45","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"330:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_339759585899103d2ace64958e37e18ccb0504652c81d4a1b8aa80fe2126ab95","typeString":"literal_string \"MAINTAINER_ROLE\""},"value":"MAINTAINER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_339759585899103d2ace64958e37e18ccb0504652c81d4a1b8aa80fe2126ab95","typeString":"literal_string \"MAINTAINER_ROLE\""}],"id":3948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"320:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"320:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":3967,"nodeType":"Block","src":"385:98:17","statements":[{"expression":{"arguments":[{"id":3957,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"402:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"422:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"426:6:17","memberName":"sender","nodeType":"MemberAccess","src":"422:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3956,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"391:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3961,"nodeType":"ExpressionStatement","src":"391:42:17"},{"expression":{"arguments":[{"id":3963,"name":"MAINTAINER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"450:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3964,"name":"maintainer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"467:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3962,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"439:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"439:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3966,"nodeType":"ExpressionStatement","src":"439:39:17"}]},"id":3968,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"maintainer","nameLocation":"373:10:17","nodeType":"VariableDeclaration","scope":3968,"src":"365:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:20:17"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[],"src":"385:0:17"},"scope":3969,"src":"353:130:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3970,"src":"130:355:17","usedErrors":[]}],"src":"32:453:17"},"id":17},"src/core/ImplementationManager.sol":{"ast":{"absolutePath":"src/core/ImplementationManager.sol","exportedSymbols":{"Errors":[4172],"IAccessController":[4102],"IImplementationManager":[4121],"ImplementationInterfaceNames":[4178],"ImplementationManager":[4085]},"id":4086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3971,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"src/interfaces/IAccessController.sol","file":"../interfaces/IAccessController.sol","id":3973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4086,"sourceUnit":4103,"src":"57:70:18","symbolAliases":[{"foreign":{"id":3972,"name":"IAccessController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"65:17:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IImplementationManager.sol","file":"../interfaces/IImplementationManager.sol","id":3975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4086,"sourceUnit":4122,"src":"128:80:18","symbolAliases":[{"foreign":{"id":3974,"name":"IImplementationManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"136:22:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/helpers/ImplementationInterfaceNames.sol","file":"../libraries/helpers/ImplementationInterfaceNames.sol","id":3977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4086,"sourceUnit":4179,"src":"210:99:18","symbolAliases":[{"foreign":{"id":3976,"name":"ImplementationInterfaceNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"218:28:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/helpers/Errors.sol","file":"../libraries/helpers/Errors.sol","id":3979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4086,"sourceUnit":4173,"src":"310:55:18","symbolAliases":[{"foreign":{"id":3978,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"318:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3980,"name":"IImplementationManager","nameLocations":["401:22:18"],"nodeType":"IdentifierPath","referencedDeclaration":4121,"src":"401:22:18"},"id":3981,"nodeType":"InheritanceSpecifier","src":"401:22:18"}],"canonicalName":"ImplementationManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4085,"linearizedBaseContracts":[4085,4121],"name":"ImplementationManager","nameLocation":"376:21:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"cc48f4db","id":3985,"mutability":"mutable","name":"interfacesImplemented","nameLocation":"567:21:18","nodeType":"VariableDeclaration","scope":4085,"src":"532:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":3984,"keyType":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"532:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":3983,"name":"address","nodeType":"ElementaryTypeName","src":"551:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"b29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe48","id":3991,"name":"InterfaceImplementationChanged","nameLocation":"702:30:18","nodeType":"EventDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"indexed":true,"mutability":"mutable","name":"interfaceName","nameLocation":"756:13:18","nodeType":"VariableDeclaration","scope":3991,"src":"740:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"740:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3989,"indexed":true,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"793:24:18","nodeType":"VariableDeclaration","scope":3991,"src":"777:40:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"732:89:18"},"src":"696:126:18"},{"body":{"id":4019,"nodeType":"Block","src":"958:262:18","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"accessController","nameLocation":"984:16:18","nodeType":"VariableDeclaration","scope":4019,"src":"966:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAccessController_$4102","typeString":"contract IAccessController"},"typeName":{"id":3994,"nodeType":"UserDefinedTypeName","pathNode":{"id":3993,"name":"IAccessController","nameLocations":["966:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":4102,"src":"966:17:18"},"referencedDeclaration":4102,"src":"966:17:18","typeDescriptions":{"typeIdentifier":"t_contract$_IAccessController_$4102","typeString":"contract IAccessController"}},"visibility":"internal"}],"id":4002,"initialValue":{"arguments":[{"baseExpression":{"id":3997,"name":"interfacesImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1021:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4000,"indexExpression":{"expression":{"id":3998,"name":"ImplementationInterfaceNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"1043:28:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ImplementationInterfaceNames_$4178_$","typeString":"type(library ImplementationInterfaceNames)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1072:16:18","memberName":"AccessController","nodeType":"MemberAccess","referencedDeclaration":4177,"src":"1043:45:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1021:68:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3996,"name":"IAccessController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"1003:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessController_$4102_$","typeString":"type(contract IAccessController)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1003:87:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccessController_$4102","typeString":"contract IAccessController"}},"nodeType":"VariableDeclarationStatement","src":"966:124:18"},{"condition":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1101:73:18","subExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4005,"name":"accessController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"1127:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_IAccessController_$4102","typeString":"contract IAccessController"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1144:15:18","memberName":"MAINTAINER_ROLE","nodeType":"MemberAccess","referencedDeclaration":4096,"src":"1127:32:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1127:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1163:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1167:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1163:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4003,"name":"accessController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"1102:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_IAccessController_$4102","typeString":"contract IAccessController"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1119:7:18","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":355,"src":"1102:24:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:72:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4017,"nodeType":"IfStatement","src":"1098:108:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4012,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1183:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1190:14:18","memberName":"NOT_MAINTAINER","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"1183:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"RevertStatement","src":"1176:30:18"}},{"id":4018,"nodeType":"PlaceholderStatement","src":"1214:1:18"}]},"id":4020,"name":"onlyMaintainer","nameLocation":"941:14:18","nodeType":"ModifierDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[],"src":"955:2:18"},"src":"932:288:18","virtual":false,"visibility":"internal"},{"body":{"id":4032,"nodeType":"Block","src":"1382:101:18","statements":[{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4025,"name":"interfacesImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1390:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4028,"indexExpression":{"expression":{"id":4026,"name":"ImplementationInterfaceNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"1412:28:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ImplementationInterfaceNames_$4178_$","typeString":"type(library ImplementationInterfaceNames)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1441:16:18","memberName":"AccessController","nodeType":"MemberAccess","referencedDeclaration":4177,"src":"1412:45:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1390:68:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4029,"name":"_accessController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1461:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1390:88:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4031,"nodeType":"ExpressionStatement","src":"1390:88:18"}]},"id":4033,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"_accessController","nameLocation":"1363:17:18","nodeType":"VariableDeclaration","scope":4033,"src":"1355:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"1355:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1354:27:18"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[],"src":"1382:0:18"},"scope":4085,"src":"1343:140:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4112],"body":{"id":4055,"nodeType":"Block","src":"1780:151:18","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4044,"name":"interfacesImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1786:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4046,"indexExpression":{"id":4045,"name":"interfaceName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1808:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1786:36:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4047,"name":"implementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1825:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1786:60:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4049,"nodeType":"ExpressionStatement","src":"1786:60:18"},{"eventCall":{"arguments":[{"id":4051,"name":"interfaceName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1889:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4052,"name":"implementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1904:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4050,"name":"InterfaceImplementationChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"1858:30:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1858:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"EmitStatement","src":"1853:73:18"}]},"documentation":{"id":4034,"nodeType":"StructuredDocumentation","src":"1603:38:18","text":"@inheritdoc IImplementationManager"},"functionSelector":"31f9665e","id":4056,"implemented":true,"kind":"function","modifiers":[{"id":4042,"kind":"modifierInvocation","modifierName":{"id":4041,"name":"onlyMaintainer","nameLocations":["1765:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":4020,"src":"1765:14:18"},"nodeType":"ModifierInvocation","src":"1765:14:18"}],"name":"changeImplementationAddress","nameLocation":"1653:27:18","nodeType":"FunctionDefinition","overrides":{"id":4040,"nodeType":"OverrideSpecifier","overrides":[],"src":"1756:8:18"},"parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"interfaceName","nameLocation":"1694:13:18","nodeType":"VariableDeclaration","scope":4056,"src":"1686:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"implementationAddress","nameLocation":"1721:21:18","nodeType":"VariableDeclaration","scope":4056,"src":"1713:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4037,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1680:66:18"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[],"src":"1780:0:18"},"scope":4085,"src":"1644:287:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4120],"body":{"id":4083,"nodeType":"Block","src":"2114:159:18","statements":[{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"implementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2120:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4066,"name":"interfacesImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2144:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4068,"indexExpression":{"id":4067,"name":"interfaceName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"2166:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2144:36:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2120:60:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4070,"nodeType":"ExpressionStatement","src":"2120:60:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"implementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2189:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:3:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2214:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4072,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:18","typeDescriptions":{}}},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2214:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2189:37:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4082,"nodeType":"IfStatement","src":"2186:82:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4077,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"2235:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2242:24:18","memberName":"IMPLEMENTATION_NOT_FOUND","nodeType":"MemberAccess","referencedDeclaration":4171,"src":"2235:31:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2235:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4081,"nodeType":"RevertStatement","src":"2228:40:18"}}]},"documentation":{"id":4057,"nodeType":"StructuredDocumentation","src":"1935:38:18","text":"@inheritdoc IImplementationManager"},"functionSelector":"aafd5e40","id":4084,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementationAddress","nameLocation":"1985:24:18","nodeType":"FunctionDefinition","overrides":{"id":4061,"nodeType":"OverrideSpecifier","overrides":[],"src":"2059:8:18"},"parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"interfaceName","nameLocation":"2018:13:18","nodeType":"VariableDeclaration","scope":4084,"src":"2010:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2010:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2009:23:18"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"implementationAddress","nameLocation":"2089:21:18","nodeType":"VariableDeclaration","scope":4084,"src":"2081:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"2081:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2080:31:18"},"scope":4085,"src":"1976:297:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4086,"src":"367:1909:18","usedErrors":[4169,4171]}],"src":"32:2244:18"},"id":18},"src/interfaces/IAccessController.sol":{"ast":{"absolutePath":"src/interfaces/IAccessController.sol","exportedSymbols":{"IAccessControl":[388],"IAccessController":[4102]},"id":4103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4087,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol","file":"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol","id":4089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4103,"sourceUnit":389,"src":"57:94:19","symbolAliases":[{"foreign":{"id":4088,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"65:14:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4090,"name":"IAccessControl","nameLocations":["184:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"184:14:19"},"id":4091,"nodeType":"InheritanceSpecifier","src":"184:14:19"}],"canonicalName":"IAccessController","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4102,"linearizedBaseContracts":[4102,388],"name":"IAccessController","nameLocation":"163:17:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f8742254","id":4096,"implemented":false,"kind":"function","modifiers":[],"name":"MAINTAINER_ROLE","nameLocation":"212:15:19","nodeType":"FunctionDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[],"src":"227:2:19"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4096,"src":"253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"253:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"252:9:19"},"scope":4102,"src":"203:59:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ec87621c","id":4101,"implemented":false,"kind":"function","modifiers":[],"name":"MANAGER_ROLE","nameLocation":"274:12:19","nodeType":"FunctionDefinition","parameters":{"id":4097,"nodeType":"ParameterList","parameters":[],"src":"286:2:19"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"312:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"312:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"311:9:19"},"scope":4102,"src":"265:56:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4103,"src":"153:171:19","usedErrors":[]}],"src":"32:292:19"},"id":19},"src/interfaces/IImplementationManager.sol":{"ast":{"absolutePath":"src/interfaces/IImplementationManager.sol","exportedSymbols":{"IImplementationManager":[4121]},"id":4122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4104,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IImplementationManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4121,"linearizedBaseContracts":[4121],"name":"IImplementationManager","nameLocation":"67:22:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"95:300:20","text":" @notice Updates the address of the contract that implements `interfaceName`.\n @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n @param implementationAddress address of the deployed contract that implements the interface."},"functionSelector":"31f9665e","id":4112,"implemented":false,"kind":"function","modifiers":[],"name":"changeImplementationAddress","nameLocation":"409:27:20","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"interfaceName","nameLocation":"454:13:20","nodeType":"VariableDeclaration","scope":4112,"src":"446:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"446:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"implementationAddress","nameLocation":"485:21:20","nodeType":"VariableDeclaration","scope":4112,"src":"477:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4108,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"436:76:20"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"521:0:20"},"scope":4121,"src":"400:122:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4113,"nodeType":"StructuredDocumentation","src":"526:242:20","text":" @notice Gets the address of the contract that implements the given `interfaceName`.\n @param interfaceName queried interface.\n @return implementationAddress Address of the deployed contract that implements the interface."},"functionSelector":"aafd5e40","id":4120,"implemented":false,"kind":"function","modifiers":[],"name":"getImplementationAddress","nameLocation":"780:24:20","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"interfaceName","nameLocation":"813:13:20","nodeType":"VariableDeclaration","scope":4120,"src":"805:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"804:23:20"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"implementationAddress","nameLocation":"871:21:20","nodeType":"VariableDeclaration","scope":4120,"src":"863:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"862:31:20"},"scope":4121,"src":"771:123:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4122,"src":"57:840:20","usedErrors":[]}],"src":"32:865:20"},"id":20},"src/interfaces/IRaffle.sol":{"ast":{"absolutePath":"src/interfaces/IRaffle.sol","exportedSymbols":{"IRaffle":[4142]},"id":4143,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4123,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IRaffle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4142,"linearizedBaseContracts":[4142],"name":"IRaffle","nameLocation":"67:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"82:177:21","text":" @notice Allows users to purchase tickets\n @dev Only accessible if raffle still open to particpants\n @param nbOfTickets number of tickets purchased"},"functionSelector":"a1277600","id":4129,"implemented":false,"kind":"function","modifiers":[],"name":"purchaseTickets","nameLocation":"273:15:21","nodeType":"FunctionDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"nbOfTickets","nameLocation":"297:11:21","nodeType":"VariableDeclaration","scope":4129,"src":"289:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"289:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"288:21:21"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[],"src":"318:0:21"},"scope":4142,"src":"264:55:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"325:139:21","text":" @notice Allows the winner to claim his price\n @dev Ticket number must be draw and raffle close to new participants"},"functionSelector":"15d655c9","id":4133,"implemented":false,"kind":"function","modifiers":[],"name":"claimPrice","nameLocation":"478:10:21","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[],"src":"488:2:21"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[],"src":"499:0:21"},"scope":4142,"src":"469:31:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"510:166:21","text":" @notice Allows the creator to claim the amount related to the ticket sales\n @dev The functions should send to the creator his part after fees"},"functionSelector":"636ed74c","id":4137,"implemented":false,"kind":"function","modifiers":[],"name":"claimTicketSalesAmount","nameLocation":"690:22:21","nodeType":"FunctionDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[],"src":"712:2:21"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[],"src":"723:0:21"},"scope":4142,"src":"681:43:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"734:61:21","text":" @notice Allows to drawn a ticket randommly"},"functionSelector":"ccf1125c","id":4141,"implemented":false,"kind":"function","modifiers":[],"name":"drawnTicket","nameLocation":"809:11:21","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[],"src":"820:2:21"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[],"src":"831:0:21"},"scope":4142,"src":"800:32:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4143,"src":"57:777:21","usedErrors":[]}],"src":"32:802:21"},"id":21},"src/libraries/helpers/Errors.sol":{"ast":{"absolutePath":"src/libraries/helpers/Errors.sol","exportedSymbols":{"Errors":[4172]},"id":4173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4144,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":4145,"nodeType":"StructuredDocumentation","src":"57:121:22","text":" @title Errors library\n @notice Defines the error messages emitted by the different contracts of the protocol"},"fullyImplemented":true,"id":4172,"linearizedBaseContracts":[4172],"name":"Errors","nameLocation":"187:6:22","nodeType":"ContractDefinition","nodes":[{"errorSelector":"91e5b9ec","id":4147,"name":"BE_ADDRESS_0","nameLocation":"206:12:22","nodeType":"ErrorDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[],"src":"218:2:22"},"src":"200:21:22"},{"errorSelector":"9f34e019","id":4149,"name":"NOT_ADDRESS_0","nameLocation":"264:13:22","nodeType":"ErrorDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[],"src":"277:2:22"},"src":"258:22:22"},{"errorSelector":"6efa170a","id":4151,"name":"RAFFLE_CLOSE","nameLocation":"327:12:22","nodeType":"ErrorDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[],"src":"339:2:22"},"src":"321:21:22"},{"errorSelector":"184d2b7e","id":4153,"name":"RAFFLE_STILL_OPEN","nameLocation":"414:17:22","nodeType":"ErrorDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[],"src":"431:2:22"},"src":"408:26:22"},{"errorSelector":"98fccb27","id":4155,"name":"CANT_BE_ZERO","nameLocation":"505:12:22","nodeType":"ErrorDefinition","parameters":{"id":4154,"nodeType":"ParameterList","parameters":[],"src":"517:2:22"},"src":"499:21:22"},{"errorSelector":"84bfcb95","id":4157,"name":"MAX_TICKET_SUPPLY_EXCEEDED","nameLocation":"570:26:22","nodeType":"ErrorDefinition","parameters":{"id":4156,"nodeType":"ParameterList","parameters":[],"src":"596:2:22"},"src":"564:35:22"},{"errorSelector":"8cab1f28","id":4159,"name":"NOT_ENOUGH_BALANCE","nameLocation":"677:18:22","nodeType":"ErrorDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[],"src":"695:2:22"},"src":"671:27:22"},{"errorSelector":"b4e5b121","id":4161,"name":"MSG_SENDER_NOT_WINNER","nameLocation":"742:21:22","nodeType":"ErrorDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[],"src":"763:2:22"},"src":"736:30:22"},{"errorSelector":"2cff9427","id":4163,"name":"NOT_CREATOR","nameLocation":"815:11:22","nodeType":"ErrorDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[],"src":"826:2:22"},"src":"809:20:22"},{"errorSelector":"2dbc4692","id":4165,"name":"TICKET_NOT_DRAWN","nameLocation":"889:16:22","nodeType":"ErrorDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[],"src":"905:2:22"},"src":"883:25:22"},{"errorSelector":"a7f733d0","id":4167,"name":"TICKET_ALREADY_DRAWN","nameLocation":"945:20:22","nodeType":"ErrorDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[],"src":"965:2:22"},"src":"939:29:22"},{"errorSelector":"37ab45b7","id":4169,"name":"NOT_MAINTAINER","nameLocation":"1012:14:22","nodeType":"ErrorDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[],"src":"1026:2:22"},"src":"1006:23:22"},{"errorSelector":"20a03dc7","id":4171,"name":"IMPLEMENTATION_NOT_FOUND","nameLocation":"1074:24:22","nodeType":"ErrorDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[],"src":"1098:2:22"},"src":"1068:33:22"}],"scope":4173,"src":"179:973:22","usedErrors":[4147,4149,4151,4153,4155,4157,4159,4161,4163,4165,4167,4169,4171]}],"src":"32:1123:22"},"id":22},"src/libraries/helpers/ImplementationInterfaceNames.sol":{"ast":{"absolutePath":"src/libraries/helpers/ImplementationInterfaceNames.sol","exportedSymbols":{"ImplementationInterfaceNames":[4178]},"id":4179,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4174,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"ImplementationInterfaceNames","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4178,"linearizedBaseContracts":[4178],"name":"ImplementationInterfaceNames","nameLocation":"65:28:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d4fc8823","id":4177,"mutability":"constant","name":"AccessController","nameLocation":"122:16:23","nodeType":"VariableDeclaration","scope":4178,"src":"98:61:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"416363657373436f6e74726f6c6c6572","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"141:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac42f8beb17975ed062dcb80c63e6d203ef1c2c335ced149dc5664cc671cb7da","typeString":"literal_string \"AccessController\""},"value":"AccessController"},"visibility":"public"}],"scope":4179,"src":"57:105:23","usedErrors":[]}],"src":"32:131:23"},"id":23},"src/mocks/MockERC20.sol":{"ast":{"absolutePath":"src/mocks/MockERC20.sol","exportedSymbols":{"ERC20":[1144],"MockERC20":[4240]},"id":4241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4180,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:24"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","id":4182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4241,"sourceUnit":1145,"src":"57:81:24","symbolAliases":[{"foreign":{"id":4181,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"65:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4183,"name":"ERC20","nameLocations":["162:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1144,"src":"162:5:24"},"id":4184,"nodeType":"InheritanceSpecifier","src":"162:5:24"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4240,"linearizedBaseContracts":[4240,1144,1247,1222,2705],"name":"MockERC20","nameLocation":"149:9:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4186,"mutability":"mutable","name":"decimals_","nameLocation":"187:9:24","nodeType":"VariableDeclaration","scope":4240,"src":"173:23:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4185,"name":"uint8","nodeType":"ElementaryTypeName","src":"173:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":4203,"nodeType":"Block","src":"311:32:24","statements":[{"expression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"317:9:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4200,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"329:9:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"317:21:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4202,"nodeType":"ExpressionStatement","src":"317:21:24"}]},"id":4204,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4195,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"295:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4196,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"302:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4197,"kind":"baseConstructorSpecifier","modifierName":{"id":4194,"name":"ERC20","nameLocations":["289:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1144,"src":"289:5:24"},"nodeType":"ModifierInvocation","src":"289:21:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"_name","nameLocation":"231:5:24","nodeType":"VariableDeclaration","scope":4204,"src":"217:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4187,"name":"string","nodeType":"ElementaryTypeName","src":"217:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"_symbol","nameLocation":"256:7:24","nodeType":"VariableDeclaration","scope":4204,"src":"242:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4189,"name":"string","nodeType":"ElementaryTypeName","src":"242:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"_decimals","nameLocation":"275:9:24","nodeType":"VariableDeclaration","scope":4204,"src":"269:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4191,"name":"uint8","nodeType":"ElementaryTypeName","src":"269:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"211:77:24"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[],"src":"311:0:24"},"scope":4240,"src":"200:143:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4216,"nodeType":"Block","src":"401:33:24","statements":[{"expression":{"arguments":[{"id":4212,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"413:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4213,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"422:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4211,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"407:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"407:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4215,"nodeType":"ExpressionStatement","src":"407:22:24"}]},"functionSelector":"40c10f19","id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"356:4:24","nodeType":"FunctionDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"account","nameLocation":"369:7:24","nodeType":"VariableDeclaration","scope":4217,"src":"361:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4205,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"amount","nameLocation":"386:6:24","nodeType":"VariableDeclaration","scope":4217,"src":"378:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:33:24"},"returnParameters":{"id":4210,"nodeType":"ParameterList","parameters":[],"src":"401:0:24"},"scope":4240,"src":"347:87:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4229,"nodeType":"Block","src":"492:33:24","statements":[{"expression":{"arguments":[{"id":4225,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"504:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"513:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4224,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"498:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"498:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4228,"nodeType":"ExpressionStatement","src":"498:22:24"}]},"functionSelector":"9dc29fac","id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"447:4:24","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"account","nameLocation":"460:7:24","nodeType":"VariableDeclaration","scope":4230,"src":"452:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4218,"name":"address","nodeType":"ElementaryTypeName","src":"452:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"amount","nameLocation":"477:6:24","nodeType":"VariableDeclaration","scope":4230,"src":"469:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"469:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"451:33:24"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[],"src":"492:0:24"},"scope":4240,"src":"438:87:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[632],"body":{"id":4238,"nodeType":"Block","src":"594:31:24","statements":[{"expression":{"id":4236,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"611:9:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4235,"id":4237,"nodeType":"Return","src":"604:16:24"}]},"functionSelector":"313ce567","id":4239,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"538:8:24","nodeType":"FunctionDefinition","overrides":{"id":4232,"nodeType":"OverrideSpecifier","overrides":[],"src":"569:8:24"},"parameters":{"id":4231,"nodeType":"ParameterList","parameters":[],"src":"546:2:24"},"returnParameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4239,"src":"587:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4233,"name":"uint8","nodeType":"ElementaryTypeName","src":"587:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"586:7:24"},"scope":4240,"src":"529:96:24","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4241,"src":"140:487:24","usedErrors":[]}],"src":"32:595:24"},"id":24},"src/mocks/MockERC721.sol":{"ast":{"absolutePath":"src/mocks/MockERC721.sol","exportedSymbols":{"ERC721":[2192],"MockERC721":[4272]},"id":4273,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4242,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol","id":4244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4273,"sourceUnit":2193,"src":"57:84:25","symbolAliases":[{"foreign":{"id":4243,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"65:6:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4245,"name":"ERC721","nameLocations":["166:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":2192,"src":"166:6:25"},"id":4246,"nodeType":"InheritanceSpecifier","src":"166:6:25"}],"canonicalName":"MockERC721","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4272,"linearizedBaseContracts":[4272,2192,2353,2308,2958,2970,2705],"name":"MockERC721","nameLocation":"152:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4257,"nodeType":"Block","src":"269:2:25","statements":[]},"id":4258,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4253,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"253:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4254,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"260:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4255,"kind":"baseConstructorSpecifier","modifierName":{"id":4252,"name":"ERC721","nameLocations":["246:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":2192,"src":"246:6:25"},"nodeType":"ModifierInvocation","src":"246:22:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"_name","nameLocation":"209:5:25","nodeType":"VariableDeclaration","scope":4258,"src":"195:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4247,"name":"string","nodeType":"ElementaryTypeName","src":"195:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"_symbol","nameLocation":"234:7:25","nodeType":"VariableDeclaration","scope":4258,"src":"220:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4249,"name":"string","nodeType":"ElementaryTypeName","src":"220:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"189:56:25"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[],"src":"269:0:25"},"scope":4272,"src":"178:93:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4270,"nodeType":"Block","src":"325:33:25","statements":[{"expression":{"arguments":[{"id":4266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"341:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4267,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"345:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4265,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1742,1771],"referencedDeclaration":1742,"src":"331:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"331:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4269,"nodeType":"ExpressionStatement","src":"331:22:25"}]},"functionSelector":"40c10f19","id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"284:4:25","nodeType":"FunctionDefinition","parameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"to","nameLocation":"297:2:25","nodeType":"VariableDeclaration","scope":4271,"src":"289:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4259,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4262,"mutability":"mutable","name":"tokenId","nameLocation":"309:7:25","nodeType":"VariableDeclaration","scope":4271,"src":"301:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"288:29:25"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[],"src":"325:0:25"},"scope":4272,"src":"275:83:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4273,"src":"143:218:25","usedErrors":[]}],"src":"32:329:25"},"id":25},"src/raffle/Raffle.sol":{"ast":{"absolutePath":"src/raffle/Raffle.sol","exportedSymbols":{"Errors":[4172],"IERC20":[1222],"IERC721":[2308],"IRaffle":[4142],"Initializable":[557],"Raffle":[4928],"RaffleDataTypes":[4975],"RaffleStorage":[4993]},"id":4929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4274,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:26"},{"absolutePath":"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol","file":"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol","id":4276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":558,"src":"57:97:26","symbolAliases":[{"foreign":{"id":4275,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"65:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","id":4278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":1223,"src":"155:83:26","symbolAliases":[{"foreign":{"id":4277,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"163:6:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","id":4280,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":2309,"src":"239:86:26","symbolAliases":[{"foreign":{"id":4279,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"247:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/helpers/Errors.sol","file":"../libraries/helpers/Errors.sol","id":4282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":4173,"src":"327:55:26","symbolAliases":[{"foreign":{"id":4281,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"335:6:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IRaffle.sol","file":"../interfaces/IRaffle.sol","id":4284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":4143,"src":"383:50:26","symbolAliases":[{"foreign":{"id":4283,"name":"IRaffle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"391:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/raffle/RaffleDataTypes.sol","file":"./RaffleDataTypes.sol","id":4286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":4976,"src":"435:54:26","symbolAliases":[{"foreign":{"id":4285,"name":"RaffleDataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"443:15:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/raffle/RaffleStorage.sol","file":"./RaffleStorage.sol","id":4288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4929,"sourceUnit":4994,"src":"490:50:26","symbolAliases":[{"foreign":{"id":4287,"name":"RaffleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"498:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4289,"name":"IRaffle","nameLocations":["562:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"562:7:26"},"id":4290,"nodeType":"InheritanceSpecifier","src":"562:7:26"},{"baseName":{"id":4291,"name":"RaffleStorage","nameLocations":["571:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":4993,"src":"571:13:26"},"id":4292,"nodeType":"InheritanceSpecifier","src":"571:13:26"},{"baseName":{"id":4293,"name":"Initializable","nameLocations":["586:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"586:13:26"},"id":4294,"nodeType":"InheritanceSpecifier","src":"586:13:26"}],"canonicalName":"Raffle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4928,"linearizedBaseContracts":[4928,557,4993,4142],"name":"Raffle","nameLocation":"552:6:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2db21921e7bb87a5d99fc29841e4b9ad6d32f7e9f0f12471f615d5c611dcf4e2","id":4301,"name":"NewRaffle","nameLocation":"722:9:26","nodeType":"EventDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"indexed":true,"mutability":"mutable","name":"raffleContract","nameLocation":"748:14:26","nodeType":"VariableDeclaration","scope":4301,"src":"732:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4295,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4299,"indexed":false,"mutability":"mutable","name":"globalData","nameLocation":"791:10:26","nodeType":"VariableDeclaration","scope":4301,"src":"764:37:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_memory_ptr","typeString":"struct RaffleDataTypes.RaffleData"},"typeName":{"id":4298,"nodeType":"UserDefinedTypeName","pathNode":{"id":4297,"name":"RaffleDataTypes.RaffleData","nameLocations":["764:15:26","780:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"764:26:26"},"referencedDeclaration":4957,"src":"764:26:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage_ptr","typeString":"struct RaffleDataTypes.RaffleData"}},"visibility":"internal"}],"src":"731:71:26"},"src":"716:87:26"},{"anonymous":false,"eventSelector":"3298f998adc3ec4bdcc9bb12f2a924f1d28c61596124855d7d6d4d09e231847a","id":4310,"name":"TicketPurchased","nameLocation":"814:15:26","nodeType":"EventDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"indexed":true,"mutability":"mutable","name":"raffleContract","nameLocation":"846:14:26","nodeType":"VariableDeclaration","scope":4310,"src":"830:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4305,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"878:5:26","nodeType":"VariableDeclaration","scope":4310,"src":"862:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4304,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4308,"indexed":false,"mutability":"mutable","name":"ticketNumbers","nameLocation":"895:13:26","nodeType":"VariableDeclaration","scope":4310,"src":"885:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4307,"nodeType":"ArrayTypeName","src":"885:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"829:80:26"},"src":"808:102:26"},{"anonymous":false,"eventSelector":"1fc6b0218aceb86978fcfee181f91a4a3f28d1eddff4e6df0c3dc99c79ace6d4","id":4320,"name":"WinnerClaimedPrice","nameLocation":"921:18:26","nodeType":"EventDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"indexed":true,"mutability":"mutable","name":"raffleContract","nameLocation":"956:14:26","nodeType":"VariableDeclaration","scope":4320,"src":"940:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4311,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4314,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"988:6:26","nodeType":"VariableDeclaration","scope":4320,"src":"972:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4313,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4316,"indexed":true,"mutability":"mutable","name":"nftContract","nameLocation":"1012:11:26","nodeType":"VariableDeclaration","scope":4320,"src":"996:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4318,"indexed":false,"mutability":"mutable","name":"nftId","nameLocation":"1033:5:26","nodeType":"VariableDeclaration","scope":4320,"src":"1025:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"939:100:26"},"src":"915:125:26"},{"anonymous":false,"eventSelector":"2427926a2340a250197c73c9c1a12ca71ee0f1f53f8e08badda42770afc6ecf6","id":4328,"name":"CreatorClaimTicketSalesAmount","nameLocation":"1051:29:26","nodeType":"EventDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"indexed":true,"mutability":"mutable","name":"raffleContract","nameLocation":"1097:14:26","nodeType":"VariableDeclaration","scope":4328,"src":"1081:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4321,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4324,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1129:6:26","nodeType":"VariableDeclaration","scope":4328,"src":"1113:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4323,"name":"address","nodeType":"ElementaryTypeName","src":"1113:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4326,"indexed":false,"mutability":"mutable","name":"amountReceived","nameLocation":"1145:14:26","nodeType":"VariableDeclaration","scope":4328,"src":"1137:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1080:80:26"},"src":"1045:116:26"},{"anonymous":false,"eventSelector":"bd2ef7d8e723142e22eed26d859400cda0ac602edacddc8b13f96c921011a9ac","id":4334,"name":"WinningTicketDrawned","nameLocation":"1172:20:26","nodeType":"EventDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"indexed":true,"mutability":"mutable","name":"raffleContract","nameLocation":"1209:14:26","nodeType":"VariableDeclaration","scope":4334,"src":"1193:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4332,"indexed":false,"mutability":"mutable","name":"winningTicket","nameLocation":"1233:13:26","nodeType":"VariableDeclaration","scope":4334,"src":"1225:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1225:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1192:55:26"},"src":"1166:82:26"},{"body":{"id":4348,"nodeType":"Block","src":"1398:99:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4336,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1411:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1417:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"1411:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4338,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"1430:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1442:7:26","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"1430:19:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1411:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4346,"nodeType":"IfStatement","src":"1408:71:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4341,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1458:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1465:12:26","memberName":"RAFFLE_CLOSE","nodeType":"MemberAccess","referencedDeclaration":4151,"src":"1458:19:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1458:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4345,"nodeType":"RevertStatement","src":"1451:28:26"}},{"id":4347,"nodeType":"PlaceholderStatement","src":"1489:1:26"}]},"id":4349,"name":"ticketSalesOpen","nameLocation":"1380:15:26","nodeType":"ModifierDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"1395:2:26"},"src":"1371:126:26","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"1530:103:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4351,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1543:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1549:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"1543:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4353,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"1561:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1573:7:26","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"1561:19:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1543:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4361,"nodeType":"IfStatement","src":"1540:75:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4356,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1589:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1596:17:26","memberName":"RAFFLE_STILL_OPEN","nodeType":"MemberAccess","referencedDeclaration":4153,"src":"1589:24:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"RevertStatement","src":"1582:33:26"}},{"id":4362,"nodeType":"PlaceholderStatement","src":"1625:1:26"}]},"id":4364,"name":"ticketSalesClose","nameLocation":"1511:16:26","nodeType":"ModifierDefinition","parameters":{"id":4350,"nodeType":"ParameterList","parameters":[],"src":"1527:2:26"},"src":"1502:131:26","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"1669:84:26","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":4366,"name":"isTicketDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1682:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4373,"nodeType":"IfStatement","src":"1679:56:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4368,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1706:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1713:20:26","memberName":"TICKET_ALREADY_DRAWN","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"1706:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"RevertStatement","src":"1699:36:26"}},{"id":4374,"nodeType":"PlaceholderStatement","src":"1745:1:26"}]},"id":4376,"name":"ticketHasNotBeDrawn","nameLocation":"1648:19:26","nodeType":"ModifierDefinition","parameters":{"id":4365,"nodeType":"ParameterList","parameters":[],"src":"1667:2:26"},"src":"1639:114:26","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"1786:81:26","statements":[{"condition":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1799:16:26","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4378,"name":"isTicketDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1800:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1800:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4386,"nodeType":"IfStatement","src":"1796:53:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4381,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1824:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1831:16:26","memberName":"TICKET_NOT_DRAWN","nodeType":"MemberAccess","referencedDeclaration":4165,"src":"1824:23:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4385,"nodeType":"RevertStatement","src":"1817:32:26"}},{"id":4387,"nodeType":"PlaceholderStatement","src":"1859:1:26"}]},"id":4389,"name":"ticketHasBeDrawn","nameLocation":"1768:16:26","nodeType":"ModifierDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[],"src":"1784:2:26"},"src":"1759:108:26","virtual":false,"visibility":"internal"},{"body":{"id":4475,"nodeType":"Block","src":"2082:531:26","statements":[{"expression":{"arguments":[{"expression":{"id":4402,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2123:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2129:7:26","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":4959,"src":"2123:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4406,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2146:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2138:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4404,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:26","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4408,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2153:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2159:5:26","memberName":"nftId","nodeType":"MemberAccess","referencedDeclaration":4967,"src":"2153:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4397,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2092:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2098:11:26","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"2092:17:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2110:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2273,"src":"2092:30:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"2092:73:26"},{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4412,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2176:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2188:7:26","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"2176:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4415,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2198:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2204:7:26","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":4959,"src":"2198:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2176:35:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4418,"nodeType":"ExpressionStatement","src":"2176:35:26"},{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4419,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2221:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2233:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"2221:28:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4422,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2252:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2258:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"2252:22:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"src":"2221:53:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"id":4425,"nodeType":"ExpressionStatement","src":"2221:53:26"},{"expression":{"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4426,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2284:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2296:11:26","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"2284:23:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4429,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2310:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2316:11:26","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"2310:17:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"src":"2284:43:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"id":4432,"nodeType":"ExpressionStatement","src":"2284:43:26"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4433,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2337:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2349:5:26","memberName":"nftId","nodeType":"MemberAccess","referencedDeclaration":4944,"src":"2337:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4436,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2357:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2363:5:26","memberName":"nftId","nodeType":"MemberAccess","referencedDeclaration":4967,"src":"2357:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2337:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"2337:31:26"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4440,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2378:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2390:15:26","memberName":"maxTicketSupply","nodeType":"MemberAccess","referencedDeclaration":4946,"src":"2378:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4443,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2408:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2414:15:26","memberName":"maxTicketSupply","nodeType":"MemberAccess","referencedDeclaration":4969,"src":"2408:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2378:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"2378:51:26"},{"expression":{"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4447,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2439:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2451:11:26","memberName":"ticketPrice","nodeType":"MemberAccess","referencedDeclaration":4950,"src":"2439:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4450,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2465:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2471:11:26","memberName":"ticketPrice","nodeType":"MemberAccess","referencedDeclaration":4971,"src":"2465:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2439:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4453,"nodeType":"ExpressionStatement","src":"2439:43:26"},{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4454,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2492:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2504:7:26","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"2492:19:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2521:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"2521:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2514:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4457,"name":"uint64","nodeType":"ElementaryTypeName","src":"2514:6:26","typeDescriptions":{}}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2514:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4462,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2540:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams memory"}},"id":4463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2546:7:26","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4973,"src":"2540:13:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2514:39:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2492:61:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4466,"nodeType":"ExpressionStatement","src":"2492:61:26"},{"eventCall":{"arguments":[{"arguments":[{"id":4470,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2587:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2579:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4468,"name":"address","nodeType":"ElementaryTypeName","src":"2579:7:26","typeDescriptions":{}}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4472,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2594:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}],"id":4467,"name":"NewRaffle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"2569:9:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_RaffleData_$4957_memory_ptr_$returns$__$","typeString":"function (address,struct RaffleDataTypes.RaffleData memory)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2569:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4474,"nodeType":"EmitStatement","src":"2564:42:26"}]},"functionSelector":"237be938","id":4476,"implemented":true,"kind":"function","modifiers":[{"id":4395,"kind":"modifierInvocation","modifierName":{"id":4394,"name":"initializer","nameLocations":["2070:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"2070:11:26"},"nodeType":"ModifierInvocation","src":"2070:11:26"}],"name":"initialize","nameLocation":"2003:10:26","nodeType":"FunctionDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"_data","nameLocation":"2054:5:26","nodeType":"VariableDeclaration","scope":4476,"src":"2014:45:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_memory_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams"},"typeName":{"id":4391,"nodeType":"UserDefinedTypeName","pathNode":{"id":4390,"name":"RaffleDataTypes.InitRaffleParams","nameLocations":["2014:15:26","2030:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4974,"src":"2014:32:26"},"referencedDeclaration":4974,"src":"2014:32:26","typeDescriptions":{"typeIdentifier":"t_struct$_InitRaffleParams_$4974_storage_ptr","typeString":"struct RaffleDataTypes.InitRaffleParams"}},"visibility":"internal"}],"src":"2013:47:26"},"returnParameters":{"id":4396,"nodeType":"ParameterList","parameters":[],"src":"2082:0:26"},"scope":4928,"src":"1994:619:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4129],"body":{"id":4615,"nodeType":"Block","src":"2850:1059:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4485,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2863:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2878:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2863:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4493,"nodeType":"IfStatement","src":"2860:49:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4488,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"2888:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2895:12:26","memberName":"CANT_BE_ZERO","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"2888:19:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2888:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4492,"nodeType":"RevertStatement","src":"2881:28:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4494,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2922:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4496,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2938:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2922:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4498,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2952:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2964:15:26","memberName":"maxTicketSupply","nodeType":"MemberAccess","referencedDeclaration":4946,"src":"2952:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2922:57:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"2919:104:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4501,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"2988:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2995:26:26","memberName":"MAX_TICKET_SUPPLY_EXCEEDED","nodeType":"MemberAccess","referencedDeclaration":4157,"src":"2988:33:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2988:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4505,"nodeType":"RevertStatement","src":"2981:42:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4508,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3064:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4507,"name":"_calculateTotalTicketsPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"3036:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3036:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"id":4513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3118:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3122:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3118:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4510,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"3079:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3091:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"3079:28:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3108:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1179,"src":"3079:38:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3036:93:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"3033:132:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4517,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"3138:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:18:26","memberName":"NOT_ENOUGH_BALANCE","nodeType":"MemberAccess","referencedDeclaration":4159,"src":"3138:25:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"RevertStatement","src":"3131:34:26"}},{"expression":{"arguments":[{"expression":{"id":4528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3226:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3226:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4532,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3246:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:26","typeDescriptions":{}}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4535,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3281:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"name":"_calculateTotalTicketsPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"3253:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4523,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"3184:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3196:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"3184:28:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3213:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"3184:41:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:110:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4538,"nodeType":"ExpressionStatement","src":"3184:110:26"},{"assignments":[4543],"declarations":[{"constant":false,"id":4543,"mutability":"mutable","name":"ownerTickets","nameLocation":"3323:12:26","nodeType":"VariableDeclaration","scope":4615,"src":"3305:30:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ArrayTypeName","src":"3305:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4548,"initialValue":{"baseExpression":{"id":4544,"name":"_ownerTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"3338:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4547,"indexExpression":{"expression":{"id":4545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3352:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3356:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3352:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3338:25:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3305:58:26"},{"assignments":[4550],"declarations":[{"constant":false,"id":4550,"mutability":"mutable","name":"ticketNumber","nameLocation":"3381:12:26","nodeType":"VariableDeclaration","scope":4615,"src":"3373:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3373:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4553,"initialValue":{"expression":{"id":4551,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"3396:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3408:12:26","memberName":"ticketSupply","nodeType":"MemberAccess","referencedDeclaration":4948,"src":"3396:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3373:47:26"},{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"ticketsPurchased","nameLocation":"3448:16:26","nodeType":"VariableDeclaration","scope":4615,"src":"3431:33:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3431:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4557,"nodeType":"ArrayTypeName","src":"3431:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4564,"initialValue":{"arguments":[{"id":4562,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3481:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3467:13:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3471:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ArrayTypeName","src":"3471:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3431:62:26"},{"body":{"id":4597,"nodeType":"Block","src":"3531:248:26","statements":[{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4571,"name":"ticketsPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"3545:16:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4573,"indexExpression":{"id":4572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"3562:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3545:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4574,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"3567:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"3545:34:26"},{"expression":{"arguments":[{"id":4580,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"3611:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4577,"name":"ownerTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3593:12:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3606:4:26","memberName":"push","nodeType":"MemberAccess","src":"3593:17:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"ExpressionStatement","src":"3593:31:26"},{"expression":{"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4583,"name":"_ticketOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"3638:12:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4585,"indexExpression":{"id":4584,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"3651:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3638:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3667:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3671:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3667:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3638:39:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4589,"nodeType":"ExpressionStatement","src":"3638:39:26"},{"id":4596,"nodeType":"UncheckedBlock","src":"3691:78:26","statements":[{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3719:14:26","subExpression":{"id":4590,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"3721:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"3719:14:26"},{"expression":{"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3751:3:26","subExpression":{"id":4593,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"3753:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4595,"nodeType":"ExpressionStatement","src":"3751:3:26"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"3515:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4569,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3517:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3515:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4598,"initializationExpression":{"assignments":[4566],"declarations":[{"constant":false,"id":4566,"mutability":"mutable","name":"i","nameLocation":"3512:1:26","nodeType":"VariableDeclaration","scope":4598,"src":"3507:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint","nodeType":"ElementaryTypeName","src":"3507:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4567,"nodeType":"VariableDeclarationStatement","src":"3507:6:26"},"nodeType":"ForStatement","src":"3503:276:26"},{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4599,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"3788:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3800:12:26","memberName":"ticketSupply","nodeType":"MemberAccess","referencedDeclaration":4948,"src":"3788:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4602,"name":"ticketNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"3815:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3788:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"3788:39:26"},{"eventCall":{"arguments":[{"arguments":[{"id":4608,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3866:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3858:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4606,"name":"address","nodeType":"ElementaryTypeName","src":"3858:7:26","typeDescriptions":{}}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3873:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3877:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3873:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4612,"name":"ticketsPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"3885:16:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":4605,"name":"TicketPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"3842:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4614,"nodeType":"EmitStatement","src":"3837:65:26"}]},"documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"2741:23:26","text":"@inheritdoc IRaffle"},"functionSelector":"a1277600","id":4616,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":4483,"kind":"modifierInvocation","modifierName":{"id":4482,"name":"ticketSalesOpen","nameLocations":["2833:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":4349,"src":"2833:15:26"},"nodeType":"ModifierInvocation","src":"2833:17:26"}],"name":"purchaseTickets","nameLocation":"2778:15:26","nodeType":"FunctionDefinition","overrides":{"id":4481,"nodeType":"OverrideSpecifier","overrides":[],"src":"2824:8:26"},"parameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"nbOfTickets","nameLocation":"2802:11:26","nodeType":"VariableDeclaration","scope":4616,"src":"2794:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2794:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2793:21:26"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[],"src":"2850:0:26"},"scope":4928,"src":"2769:1140:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4141],"body":{"id":4662,"nodeType":"Block","src":"4025:287:26","statements":[{"assignments":[4626],"declarations":[{"constant":false,"id":4626,"mutability":"mutable","name":"randomNumber","nameLocation":"4043:12:26","nodeType":"VariableDeclaration","scope":4662,"src":"4035:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4035:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4636,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4630,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4076:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4082:6:26","memberName":"number","nodeType":"MemberAccess","src":"4076:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4091:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4076:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"4066:9:26","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4058:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4058:7:26","typeDescriptions":{}}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4035:59:26"},{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4637,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4104:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4116:19:26","memberName":"winningTicketNumber","nodeType":"MemberAccess","referencedDeclaration":4952,"src":"4104:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"4139:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":4641,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4154:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4166:12:26","memberName":"ticketSupply","nodeType":"MemberAccess","referencedDeclaration":4948,"src":"4154:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4139:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4138:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4104:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ExpressionStatement","src":"4104:75:26"},{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4647,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4189:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4201:13:26","memberName":"isTicketDrawn","nodeType":"MemberAccess","referencedDeclaration":4956,"src":"4189:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4217:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4189:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"ExpressionStatement","src":"4189:32:26"},{"eventCall":{"arguments":[{"arguments":[{"id":4656,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4265:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4257:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4654,"name":"address","nodeType":"ElementaryTypeName","src":"4257:7:26","typeDescriptions":{}}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4658,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4272:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4284:19:26","memberName":"winningTicketNumber","nodeType":"MemberAccess","referencedDeclaration":4952,"src":"4272:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"name":"WinningTicketDrawned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"4236:20:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:69:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4661,"nodeType":"EmitStatement","src":"4231:74:26"}]},"documentation":{"id":4617,"nodeType":"StructuredDocumentation","src":"3915:23:26","text":"@inheritdoc IRaffle"},"functionSelector":"ccf1125c","id":4663,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":4621,"kind":"modifierInvocation","modifierName":{"id":4620,"name":"ticketSalesClose","nameLocations":["3984:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"3984:16:26"},"nodeType":"ModifierInvocation","src":"3984:18:26"},{"arguments":[],"id":4623,"kind":"modifierInvocation","modifierName":{"id":4622,"name":"ticketHasNotBeDrawn","nameLocations":["4003:19:26"],"nodeType":"IdentifierPath","referencedDeclaration":4376,"src":"4003:19:26"},"nodeType":"ModifierInvocation","src":"4003:21:26"}],"name":"drawnTicket","nameLocation":"3952:11:26","nodeType":"FunctionDefinition","overrides":{"id":4619,"nodeType":"OverrideSpecifier","overrides":[],"src":"3975:8:26"},"parameters":{"id":4618,"nodeType":"ParameterList","parameters":[],"src":"3963:2:26"},"returnParameters":{"id":4624,"nodeType":"ParameterList","parameters":[],"src":"4025:0:26"},"scope":4928,"src":"3943:369:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4133],"body":{"id":4714,"nodeType":"Block","src":"4423:296:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4436:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4440:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4436:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4674,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"4450:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4450:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4436:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"4433:71:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4677,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"4474:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4481:21:26","memberName":"MSG_SENDER_NOT_WINNER","nodeType":"MemberAccess","referencedDeclaration":4161,"src":"4474:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4474:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4681,"nodeType":"RevertStatement","src":"4467:37:26"}},{"expression":{"arguments":[{"arguments":[{"id":4690,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4563:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4555:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4688,"name":"address","nodeType":"ElementaryTypeName","src":"4555:7:26","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4570:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4574:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4570:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4694,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4581:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4593:5:26","memberName":"nftId","nodeType":"MemberAccess","referencedDeclaration":4944,"src":"4581:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4683,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4514:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4526:11:26","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"4514:23:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4538:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2263,"src":"4514:40:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:85:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4697,"nodeType":"ExpressionStatement","src":"4514:85:26"},{"eventCall":{"arguments":[{"arguments":[{"id":4701,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4641:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4633:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4699,"name":"address","nodeType":"ElementaryTypeName","src":"4633:7:26","typeDescriptions":{}}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4648:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4652:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4648:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":4707,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4668:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4680:11:26","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"4668:23:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4660:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"4660:7:26","typeDescriptions":{}}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4660:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4710,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4694:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4706:5:26","memberName":"nftId","nodeType":"MemberAccess","referencedDeclaration":4944,"src":"4694:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4698,"name":"WinnerClaimedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"4614:18:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:98:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4713,"nodeType":"EmitStatement","src":"4609:103:26"}]},"documentation":{"id":4664,"nodeType":"StructuredDocumentation","src":"4318:23:26","text":"@inheritdoc IRaffle"},"functionSelector":"15d655c9","id":4715,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":4668,"kind":"modifierInvocation","modifierName":{"id":4667,"name":"ticketSalesClose","nameLocations":["4386:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"4386:16:26"},"nodeType":"ModifierInvocation","src":"4386:18:26"},{"arguments":[],"id":4670,"kind":"modifierInvocation","modifierName":{"id":4669,"name":"ticketHasBeDrawn","nameLocations":["4405:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"4405:16:26"},"nodeType":"ModifierInvocation","src":"4405:18:26"}],"name":"claimPrice","nameLocation":"4355:10:26","nodeType":"FunctionDefinition","overrides":{"id":4666,"nodeType":"OverrideSpecifier","overrides":[],"src":"4377:8:26"},"parameters":{"id":4665,"nodeType":"ParameterList","parameters":[],"src":"4365:2:26"},"returnParameters":{"id":4671,"nodeType":"ParameterList","parameters":[],"src":"4423:0:26"},"scope":4928,"src":"4346:373:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4137],"body":{"id":4766,"nodeType":"Block","src":"4842:298:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4855:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4859:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4855:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4726,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"4869:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:9:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4855:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4734,"nodeType":"IfStatement","src":"4852:55:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4729,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"4887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4172_$","typeString":"type(library Errors)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4894:11:26","memberName":"NOT_CREATOR","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"4887:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4887:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4733,"nodeType":"RevertStatement","src":"4880:27:26"}},{"assignments":[4736],"declarations":[{"constant":false,"id":4736,"mutability":"mutable","name":"amount","nameLocation":"4925:6:26","nodeType":"VariableDeclaration","scope":4766,"src":"4917:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"4917:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4745,"initialValue":{"arguments":[{"arguments":[{"id":4742,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4981:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4973:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4740,"name":"address","nodeType":"ElementaryTypeName","src":"4973:7:26","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4737,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4934:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4946:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"4934:28:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4963:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1179,"src":"4934:38:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4917:70:26"},{"expression":{"arguments":[{"expression":{"id":4751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5035:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5039:6:26","memberName":"sender","nodeType":"MemberAccess","src":"5035:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4753,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"5047:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4746,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4997:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"4997:28:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1189,"src":"4997:37:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4755,"nodeType":"ExpressionStatement","src":"4997:57:26"},{"eventCall":{"arguments":[{"arguments":[{"id":4759,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5107:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4928","typeString":"contract Raffle"}],"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5099:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4757,"name":"address","nodeType":"ElementaryTypeName","src":"5099:7:26","typeDescriptions":{}}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5099:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5114:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5118:6:26","memberName":"sender","nodeType":"MemberAccess","src":"5114:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4763,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"5126:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4756,"name":"CreatorClaimTicketSalesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"5069:29:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4765,"nodeType":"EmitStatement","src":"5064:69:26"}]},"documentation":{"id":4716,"nodeType":"StructuredDocumentation","src":"4725:23:26","text":"@inheritdoc IRaffle"},"functionSelector":"636ed74c","id":4767,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":4720,"kind":"modifierInvocation","modifierName":{"id":4719,"name":"ticketSalesClose","nameLocations":["4805:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"4805:16:26"},"nodeType":"ModifierInvocation","src":"4805:18:26"},{"arguments":[],"id":4722,"kind":"modifierInvocation","modifierName":{"id":4721,"name":"ticketHasBeDrawn","nameLocations":["4824:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"4824:16:26"},"nodeType":"ModifierInvocation","src":"4824:18:26"}],"name":"claimTicketSalesAmount","nameLocation":"4762:22:26","nodeType":"FunctionDefinition","overrides":{"id":4718,"nodeType":"OverrideSpecifier","overrides":[],"src":"4796:8:26"},"parameters":{"id":4717,"nodeType":"ParameterList","parameters":[],"src":"4784:2:26"},"returnParameters":{"id":4723,"nodeType":"ParameterList","parameters":[],"src":"4842:0:26"},"scope":4928,"src":"4753:387:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4776,"nodeType":"Block","src":"5311:48:26","statements":[{"expression":{"expression":{"id":4773,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"5328:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5340:12:26","memberName":"ticketSupply","nodeType":"MemberAccess","referencedDeclaration":4948,"src":"5328:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4772,"id":4775,"nodeType":"Return","src":"5321:31:26"}]},"documentation":{"id":4768,"nodeType":"StructuredDocumentation","src":"5146:108:26","text":" @notice get the total amount of tickets sold\n @return The total amount of tickets sold"},"functionSelector":"18160ddd","id":4777,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"5268:11:26","nodeType":"FunctionDefinition","parameters":{"id":4769,"nodeType":"ParameterList","parameters":[],"src":"5279:2:26"},"returnParameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4777,"src":"5302:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5301:9:26"},"scope":4928,"src":"5259:100:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4786,"nodeType":"Block","src":"5538:51:26","statements":[{"expression":{"expression":{"id":4783,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"5555:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5567:15:26","memberName":"maxTicketSupply","nodeType":"MemberAccess","referencedDeclaration":4946,"src":"5555:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4782,"id":4785,"nodeType":"Return","src":"5548:34:26"}]},"documentation":{"id":4778,"nodeType":"StructuredDocumentation","src":"5365:118:26","text":" @notice get the max amount of tickets that can be sold\n @return The total amount of tickets sold"},"functionSelector":"d5abeb01","id":4787,"implemented":true,"kind":"function","modifiers":[],"name":"maxSupply","nameLocation":"5497:9:26","nodeType":"FunctionDefinition","parameters":{"id":4779,"nodeType":"ParameterList","parameters":[],"src":"5506:2:26"},"returnParameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"5529:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5528:9:26"},"scope":4928,"src":"5488:101:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4796,"nodeType":"Block","src":"5769:43:26","statements":[{"expression":{"expression":{"id":4793,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"5786:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5798:7:26","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":4936,"src":"5786:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4792,"id":4795,"nodeType":"Return","src":"5779:26:26"}]},"documentation":{"id":4788,"nodeType":"StructuredDocumentation","src":"5595:121:26","text":" @notice get the address of the wallet that initiated the raffle\n @return The address of the creator"},"functionSelector":"02d05d3f","id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"creator","nameLocation":"5730:7:26","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[],"src":"5737:2:26"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"5760:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4790,"name":"address","nodeType":"ElementaryTypeName","src":"5760:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5759:9:26"},"scope":4928,"src":"5721:91:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4807,"nodeType":"Block","src":"5991:52:26","statements":[{"expression":{"expression":{"id":4804,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"6008:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6020:16:26","memberName":"purchaseCurrency","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"6008:28:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"functionReturnParameters":4803,"id":4806,"nodeType":"Return","src":"6001:35:26"}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"5818:112:26","text":" @notice get the address of the token used to buy tickets\n @return The address of the ERC20"},"functionSelector":"6a4a5b2d","id":4808,"implemented":true,"kind":"function","modifiers":[],"name":"purchaseCurrency","nameLocation":"5944:16:26","nodeType":"FunctionDefinition","parameters":{"id":4799,"nodeType":"ParameterList","parameters":[],"src":"5960:2:26"},"returnParameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4808,"src":"5983:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"},"typeName":{"id":4801,"nodeType":"UserDefinedTypeName","pathNode":{"id":4800,"name":"IERC20","nameLocations":["5983:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5983:6:26"},"referencedDeclaration":1222,"src":"5983:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"5982:8:26"},"scope":4928,"src":"5935:108:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4817,"nodeType":"Block","src":"6213:47:26","statements":[{"expression":{"expression":{"id":4814,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"6230:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6242:11:26","memberName":"ticketPrice","nodeType":"MemberAccess","referencedDeclaration":4950,"src":"6230:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4813,"id":4816,"nodeType":"Return","src":"6223:30:26"}]},"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"6049:107:26","text":" @notice get the price of one ticket\n @return The amount of token that one ticket cost"},"functionSelector":"1209b1f6","id":4818,"implemented":true,"kind":"function","modifiers":[],"name":"ticketPrice","nameLocation":"6170:11:26","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[],"src":"6181:2:26"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4818,"src":"6204:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6203:9:26"},"scope":4928,"src":"6161:99:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4827,"nodeType":"Block","src":"6423:43:26","statements":[{"expression":{"expression":{"id":4824,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"6440:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:7:26","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"6440:19:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4823,"id":4826,"nodeType":"Return","src":"6433:26:26"}]},"documentation":{"id":4819,"nodeType":"StructuredDocumentation","src":"6265:106:26","text":" @notice get the end time before ticket sales closing\n @return The time in timestamps"},"functionSelector":"3197cbb6","id":4828,"implemented":true,"kind":"function","modifiers":[],"name":"endTime","nameLocation":"6385:7:26","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[],"src":"6392:2:26"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4828,"src":"6415:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4821,"name":"uint64","nodeType":"ElementaryTypeName","src":"6415:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6414:8:26"},"scope":4928,"src":"6376:90:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4841,"nodeType":"Block","src":"6760:55:26","statements":[{"expression":{"expression":{"id":4838,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"6777:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6789:19:26","memberName":"winningTicketNumber","nodeType":"MemberAccess","referencedDeclaration":4952,"src":"6777:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4837,"id":4840,"nodeType":"Return","src":"6770:38:26"}]},"documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"6476:187:26","text":" @notice get the winning ticket number\n @dev revert if ticket sales not close and if ticket number hasn't be drawn\n @return The ticket number that win the raffle"},"functionSelector":"c26eea54","id":4842,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":4832,"kind":"modifierInvocation","modifierName":{"id":4831,"name":"ticketSalesClose","nameLocations":["6700:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"6700:16:26"},"nodeType":"ModifierInvocation","src":"6700:18:26"},{"arguments":[],"id":4834,"kind":"modifierInvocation","modifierName":{"id":4833,"name":"ticketHasBeDrawn","nameLocations":["6719:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"6719:16:26"},"nodeType":"ModifierInvocation","src":"6719:18:26"}],"name":"winningTicket","nameLocation":"6677:13:26","nodeType":"FunctionDefinition","parameters":{"id":4830,"nodeType":"ParameterList","parameters":[],"src":"6690:2:26"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4842,"src":"6751:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6751:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6750:9:26"},"scope":4928,"src":"6668:147:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4857,"nodeType":"Block","src":"7110:69:26","statements":[{"expression":{"baseExpression":{"id":4852,"name":"_ticketOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7127:12:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4855,"indexExpression":{"expression":{"id":4853,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7140:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7152:19:26","memberName":"winningTicketNumber","nodeType":"MemberAccess","referencedDeclaration":4952,"src":"7140:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7127:45:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4851,"id":4856,"nodeType":"Return","src":"7120:52:26"}]},"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"6825:188:26","text":" @notice get the winner address\n @dev revert if ticket sales not close and if ticket number hasn't be drawn\n @return The address of the wallet that won the raffle"},"functionSelector":"ed7a4e0b","id":4858,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":4846,"kind":"modifierInvocation","modifierName":{"id":4845,"name":"ticketSalesClose","nameLocations":["7050:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4364,"src":"7050:16:26"},"nodeType":"ModifierInvocation","src":"7050:18:26"},{"arguments":[],"id":4848,"kind":"modifierInvocation","modifierName":{"id":4847,"name":"ticketHasBeDrawn","nameLocations":["7069:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"7069:16:26"},"nodeType":"ModifierInvocation","src":"7069:18:26"}],"name":"winnerAddress","nameLocation":"7027:13:26","nodeType":"FunctionDefinition","parameters":{"id":4844,"nodeType":"ParameterList","parameters":[],"src":"7040:2:26"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"7101:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4849,"name":"address","nodeType":"ElementaryTypeName","src":"7101:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7100:9:26"},"scope":4928,"src":"7018:161:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4873,"nodeType":"Block","src":"7436:68:26","statements":[{"expression":{"components":[{"expression":{"id":4867,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7454:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7466:11:26","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"7454:23:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},{"expression":{"id":4869,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7479:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7491:5:26","memberName":"nftId","nodeType":"MemberAccess","referencedDeclaration":4944,"src":"7479:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7453:44:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC721_$2308_$_t_uint256_$","typeString":"tuple(contract IERC721,uint256)"}},"functionReturnParameters":4866,"id":4872,"nodeType":"Return","src":"7446:51:26"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"7185:163:26","text":" @notice get the information regarding the nft to win\n @return nftContractAddress The address of the nft\n @return nftId The id of the nft"},"functionSelector":"3b398ff8","id":4874,"implemented":true,"kind":"function","modifiers":[],"name":"nftToWin","nameLocation":"7362:8:26","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[],"src":"7370:2:26"},"returnParameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"nftContractAddress","nameLocation":"7401:18:26","nodeType":"VariableDeclaration","scope":4874,"src":"7393:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"},"typeName":{"id":4862,"nodeType":"UserDefinedTypeName","pathNode":{"id":4861,"name":"IERC721","nameLocations":["7393:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"7393:7:26"},"referencedDeclaration":2308,"src":"7393:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"visibility":"internal"},{"constant":false,"id":4865,"mutability":"mutable","name":"nftId","nameLocation":"7429:5:26","nodeType":"VariableDeclaration","scope":4874,"src":"7421:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"7421:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7392:43:26"},"scope":4928,"src":"7353:151:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4883,"nodeType":"Block","src":"7697:49:26","statements":[{"expression":{"expression":{"id":4880,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7714:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7726:13:26","memberName":"isTicketDrawn","nodeType":"MemberAccess","referencedDeclaration":4956,"src":"7714:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4879,"id":4882,"nodeType":"Return","src":"7707:32:26"}]},"documentation":{"id":4875,"nodeType":"StructuredDocumentation","src":"7510:131:26","text":" @notice get info if the winning ticket has been drawn\n @return True if ticket has been drawn, False otherwise"},"functionSelector":"32095a66","id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"isTicketDrawn","nameLocation":"7655:13:26","nodeType":"FunctionDefinition","parameters":{"id":4876,"nodeType":"ParameterList","parameters":[],"src":"7668:2:26"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4884,"src":"7691:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4877,"name":"bool","nodeType":"ElementaryTypeName","src":"7691:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7690:6:26"},"scope":4928,"src":"7646:100:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4897,"nodeType":"Block","src":"7954:43:26","statements":[{"expression":{"baseExpression":{"id":4893,"name":"_ownerTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"7971:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4895,"indexExpression":{"id":4894,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"7985:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7971:19:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":4892,"id":4896,"nodeType":"Return","src":"7964:26:26"}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"7752:125:26","text":" @notice get all tickets number bought by a user\n @return True if ticket has been drawn, False otherwise"},"functionSelector":"70a08231","id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"7891:9:26","nodeType":"FunctionDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"user","nameLocation":"7909:4:26","nodeType":"VariableDeclaration","scope":4898,"src":"7901:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"7901:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7900:14:26"},"returnParameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4898,"src":"7937:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4889,"name":"uint256","nodeType":"ElementaryTypeName","src":"7937:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4890,"nodeType":"ArrayTypeName","src":"7937:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7936:18:26"},"scope":4928,"src":"7882:115:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4910,"nodeType":"Block","src":"8201:40:26","statements":[{"expression":{"baseExpression":{"id":4906,"name":"_ticketOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"8218:12:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4908,"indexExpression":{"id":4907,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"8231:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8218:16:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4905,"id":4909,"nodeType":"Return","src":"8211:23:26"}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"8004:133:26","text":" @notice get the wallet that bought a specific ticket number\n @return The address that bought the own the ticket"},"functionSelector":"6352211e","id":4911,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"8151:7:26","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"id","nameLocation":"8167:2:26","nodeType":"VariableDeclaration","scope":4911,"src":"8159:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"8159:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8158:12:26"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4911,"src":"8193:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4903,"name":"address","nodeType":"ElementaryTypeName","src":"8193:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8192:9:26"},"scope":4928,"src":"8142:99:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4926,"nodeType":"Block","src":"8623:68:26","statements":[{"expression":{"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4919,"name":"amountPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"8633:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4920,"name":"_globalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"8647:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData storage ref"}},"id":4921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8659:11:26","memberName":"ticketPrice","nodeType":"MemberAccess","referencedDeclaration":4950,"src":"8647:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4922,"name":"nbOfTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"8673:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8647:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8633:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4925,"nodeType":"ExpressionStatement","src":"8633:51:26"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"8369:148:26","text":" @notice calculate the total price that must be paid regarding the amount of tickets to buy\n @return amountPrice the total cost"},"id":4927,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalTicketsPrice","nameLocation":"8531:27:26","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"nbOfTickets","nameLocation":"8567:11:26","nodeType":"VariableDeclaration","scope":4927,"src":"8559:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"8559:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8558:21:26"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"amountPrice","nameLocation":"8610:11:26","nodeType":"VariableDeclaration","scope":4927,"src":"8602:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"8602:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8601:21:26"},"scope":4928,"src":"8522:169:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4929,"src":"543:8150:26","usedErrors":[4151,4153,4155,4157,4159,4161,4163,4165,4167]}],"src":"32:8661:26"},"id":26},"src/raffle/RaffleDataTypes.sol":{"ast":{"absolutePath":"src/raffle/RaffleDataTypes.sol","exportedSymbols":{"IERC20":[1222],"IERC721":[2308],"RaffleDataTypes":[4975]},"id":4976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4930,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:27"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","id":4932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4976,"sourceUnit":1223,"src":"57:83:27","symbolAliases":[{"foreign":{"id":4931,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"65:6:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol","id":4934,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4976,"sourceUnit":2309,"src":"141:86:27","symbolAliases":[{"foreign":{"id":4933,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"149:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RaffleDataTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4975,"linearizedBaseContracts":[4975],"name":"RaffleDataTypes","nameLocation":"237:15:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RaffleDataTypes.RaffleData","id":4957,"members":[{"constant":false,"id":4936,"mutability":"mutable","name":"creator","nameLocation":"296:7:27","nodeType":"VariableDeclaration","scope":4957,"src":"288:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4935,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4939,"mutability":"mutable","name":"purchaseCurrency","nameLocation":"320:16:27","nodeType":"VariableDeclaration","scope":4957,"src":"313:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"},"typeName":{"id":4938,"nodeType":"UserDefinedTypeName","pathNode":{"id":4937,"name":"IERC20","nameLocations":["313:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"313:6:27"},"referencedDeclaration":1222,"src":"313:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4942,"mutability":"mutable","name":"nftContract","nameLocation":"354:11:27","nodeType":"VariableDeclaration","scope":4957,"src":"346:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"},"typeName":{"id":4941,"nodeType":"UserDefinedTypeName","pathNode":{"id":4940,"name":"IERC721","nameLocations":["346:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"346:7:27"},"referencedDeclaration":2308,"src":"346:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"visibility":"internal"},{"constant":false,"id":4944,"mutability":"mutable","name":"nftId","nameLocation":"383:5:27","nodeType":"VariableDeclaration","scope":4957,"src":"375:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"375:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4946,"mutability":"mutable","name":"maxTicketSupply","nameLocation":"406:15:27","nodeType":"VariableDeclaration","scope":4957,"src":"398:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"398:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4948,"mutability":"mutable","name":"ticketSupply","nameLocation":"439:12:27","nodeType":"VariableDeclaration","scope":4957,"src":"431:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4947,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4950,"mutability":"mutable","name":"ticketPrice","nameLocation":"469:11:27","nodeType":"VariableDeclaration","scope":4957,"src":"461:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4952,"mutability":"mutable","name":"winningTicketNumber","nameLocation":"498:19:27","nodeType":"VariableDeclaration","scope":4957,"src":"490:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"endTime","nameLocation":"534:7:27","nodeType":"VariableDeclaration","scope":4957,"src":"527:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4953,"name":"uint64","nodeType":"ElementaryTypeName","src":"527:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"isTicketDrawn","nameLocation":"556:13:27","nodeType":"VariableDeclaration","scope":4957,"src":"551:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4955,"name":"bool","nodeType":"ElementaryTypeName","src":"551:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"RaffleData","nameLocation":"267:10:27","nodeType":"StructDefinition","scope":4975,"src":"260:316:27","visibility":"public"},{"canonicalName":"RaffleDataTypes.InitRaffleParams","id":4974,"members":[{"constant":false,"id":4959,"mutability":"mutable","name":"creator","nameLocation":"624:7:27","nodeType":"VariableDeclaration","scope":4974,"src":"616:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"616:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4962,"mutability":"mutable","name":"purchaseCurrency","nameLocation":"648:16:27","nodeType":"VariableDeclaration","scope":4974,"src":"641:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"},"typeName":{"id":4961,"nodeType":"UserDefinedTypeName","pathNode":{"id":4960,"name":"IERC20","nameLocations":["641:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"641:6:27"},"referencedDeclaration":1222,"src":"641:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1222","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4965,"mutability":"mutable","name":"nftContract","nameLocation":"682:11:27","nodeType":"VariableDeclaration","scope":4974,"src":"674:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"},"typeName":{"id":4964,"nodeType":"UserDefinedTypeName","pathNode":{"id":4963,"name":"IERC721","nameLocations":["674:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"674:7:27"},"referencedDeclaration":2308,"src":"674:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2308","typeString":"contract IERC721"}},"visibility":"internal"},{"constant":false,"id":4967,"mutability":"mutable","name":"nftId","nameLocation":"711:5:27","nodeType":"VariableDeclaration","scope":4974,"src":"703:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"maxTicketSupply","nameLocation":"734:15:27","nodeType":"VariableDeclaration","scope":4974,"src":"726:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"ticketPrice","nameLocation":"767:11:27","nodeType":"VariableDeclaration","scope":4974,"src":"759:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4973,"mutability":"mutable","name":"endTime","nameLocation":"795:7:27","nodeType":"VariableDeclaration","scope":4974,"src":"788:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4972,"name":"uint64","nodeType":"ElementaryTypeName","src":"788:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"InitRaffleParams","nameLocation":"589:16:27","nodeType":"StructDefinition","scope":4975,"src":"582:227:27","visibility":"public"}],"scope":4976,"src":"229:582:27","usedErrors":[]}],"src":"32:779:27"},"id":27},"src/raffle/RaffleStorage.sol":{"ast":{"absolutePath":"src/raffle/RaffleStorage.sol","exportedSymbols":{"RaffleDataTypes":[4975],"RaffleStorage":[4993]},"id":4994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4977,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:28"},{"absolutePath":"src/raffle/RaffleDataTypes.sol","file":"./RaffleDataTypes.sol","id":4979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4994,"sourceUnit":4976,"src":"57:54:28","symbolAliases":[{"foreign":{"id":4978,"name":"RaffleDataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"65:15:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RaffleStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"113:153:28","text":" @title RaffleStorage\n @notice Contract used as storage of the Raffle contract.\n @dev It defines the storage layout of the Raffle contract."},"fullyImplemented":true,"id":4993,"linearizedBaseContracts":[4993],"name":"RaffleStorage","nameLocation":"276:13:28","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4984,"mutability":"mutable","name":"_ticketOwner","nameLocation":"381:12:28","nodeType":"VariableDeclaration","scope":4993,"src":"344:49:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":4983,"keyType":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"352:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"344:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":4982,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"_ownerTickets","nameLocation":"484:13:28","nodeType":"VariableDeclaration","scope":4993,"src":"445:52:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":4988,"keyType":{"id":4985,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"445:29:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"464:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4987,"nodeType":"ArrayTypeName","src":"464:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"_globalData","nameLocation":"540:11:28","nodeType":"VariableDeclaration","scope":4993,"src":"504:47:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage","typeString":"struct RaffleDataTypes.RaffleData"},"typeName":{"id":4991,"nodeType":"UserDefinedTypeName","pathNode":{"id":4990,"name":"RaffleDataTypes.RaffleData","nameLocations":["504:15:28","520:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":4957,"src":"504:26:28"},"referencedDeclaration":4957,"src":"504:26:28","typeDescriptions":{"typeIdentifier":"t_struct$_RaffleData_$4957_storage_ptr","typeString":"struct RaffleDataTypes.RaffleData"}},"visibility":"internal"}],"scope":4994,"src":"267:288:28","usedErrors":[]}],"src":"32:523:28"},"id":28}},"contracts":{"lib/openzeppelin-contracts/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8d29c5ce9b0d56701c1bf9dce816baa3d8665cea300abdd65e6f16314efcebc6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xef38a9dc04006cb780740ff85651f9bac7e522f42640527b6b1deda46e3155c7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":395,"contract":"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":398,"contract":"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_602":{"entryPoint":null,"id":602,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:29"},"nodeType":"YulFunctionCall","src":"66:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:29"},"nodeType":"YulFunctionCall","src":"56:31:29"},"nodeType":"YulExpressionStatement","src":"56:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:29"},"nodeType":"YulFunctionCall","src":"96:15:29"},"nodeType":"YulExpressionStatement","src":"96:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:29"},"nodeType":"YulFunctionCall","src":"120:15:29"},"nodeType":"YulExpressionStatement","src":"120:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:29"},{"body":{"nodeType":"YulBlock","src":"210:776:29","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:29"},"nodeType":"YulFunctionCall","src":"261:12:29"},"nodeType":"YulExpressionStatement","src":"261:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:29"},"nodeType":"YulFunctionCall","src":"234:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:29"},"nodeType":"YulFunctionCall","src":"223:35:29"},"nodeType":"YulIf","src":"220:55:29"},{"nodeType":"YulVariableDeclaration","src":"284:23:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:29"},"nodeType":"YulFunctionCall","src":"294:13:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:29"},"nodeType":"YulFunctionCall","src":"330:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:29"},"nodeType":"YulFunctionCall","src":"326:18:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:29"},"nodeType":"YulFunctionCall","src":"369:18:29"},"nodeType":"YulExpressionStatement","src":"369:18:29"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:29"},"nodeType":"YulFunctionCall","src":"356:10:29"},"nodeType":"YulIf","src":"353:36:29"},{"nodeType":"YulVariableDeclaration","src":"398:17:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:29"},"nodeType":"YulFunctionCall","src":"408:7:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:29"},"nodeType":"YulFunctionCall","src":"438:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:29"},"nodeType":"YulFunctionCall","src":"498:13:29"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:29"},"nodeType":"YulFunctionCall","src":"494:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:29"},"nodeType":"YulFunctionCall","src":"490:31:29"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:29"},"nodeType":"YulFunctionCall","src":"486:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:29"},"nodeType":"YulFunctionCall","src":"474:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:29"},"nodeType":"YulFunctionCall","src":"588:18:29"},"nodeType":"YulExpressionStatement","src":"588:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:29"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:29"},"nodeType":"YulFunctionCall","src":"542:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:29"},"nodeType":"YulFunctionCall","src":"562:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:29"},"nodeType":"YulFunctionCall","src":"539:46:29"},"nodeType":"YulIf","src":"536:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:29"},"nodeType":"YulFunctionCall","src":"617:22:29"},"nodeType":"YulExpressionStatement","src":"617:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:29"},"nodeType":"YulFunctionCall","src":"648:18:29"},"nodeType":"YulExpressionStatement","src":"648:18:29"},{"nodeType":"YulVariableDeclaration","src":"675:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:29","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:29"},"nodeType":"YulFunctionCall","src":"737:12:29"},"nodeType":"YulExpressionStatement","src":"737:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:29"},"nodeType":"YulFunctionCall","src":"708:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:29"},"nodeType":"YulFunctionCall","src":"704:24:29"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:29"},"nodeType":"YulFunctionCall","src":"701:33:29"},"nodeType":"YulIf","src":"698:53:29"},{"nodeType":"YulVariableDeclaration","src":"760:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:29"},"nodeType":"YulFunctionCall","src":"850:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:29"},"nodeType":"YulFunctionCall","src":"846:23:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:29"},"nodeType":"YulFunctionCall","src":"881:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:29"},"nodeType":"YulFunctionCall","src":"877:23:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:29"},"nodeType":"YulFunctionCall","src":"871:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:29"},"nodeType":"YulFunctionCall","src":"839:63:29"},"nodeType":"YulExpressionStatement","src":"839:63:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:29"},"nodeType":"YulFunctionCall","src":"787:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:29","statements":[{"nodeType":"YulAssignment","src":"799:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:29"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:29"},"nodeType":"YulFunctionCall","src":"804:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:29","statements":[]},"src":"779:133:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:29"},"nodeType":"YulFunctionCall","src":"932:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:29"},"nodeType":"YulFunctionCall","src":"928:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:29"},"nodeType":"YulFunctionCall","src":"921:35:29"},"nodeType":"YulExpressionStatement","src":"921:35:29"},{"nodeType":"YulAssignment","src":"965:15:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:29"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:29","type":""}],"src":"146:840:29"},{"body":{"nodeType":"YulBlock","src":"1109:444:29","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:29"},"nodeType":"YulFunctionCall","src":"1157:12:29"},"nodeType":"YulExpressionStatement","src":"1157:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:29"},"nodeType":"YulFunctionCall","src":"1126:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:29"},"nodeType":"YulFunctionCall","src":"1122:32:29"},"nodeType":"YulIf","src":"1119:52:29"},{"nodeType":"YulVariableDeclaration","src":"1180:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:29"},"nodeType":"YulFunctionCall","src":"1194:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:29"},"nodeType":"YulFunctionCall","src":"1233:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:29"},"nodeType":"YulFunctionCall","src":"1229:18:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:29"},"nodeType":"YulFunctionCall","src":"1276:12:29"},"nodeType":"YulExpressionStatement","src":"1276:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:29"},"nodeType":"YulFunctionCall","src":"1259:14:29"},"nodeType":"YulIf","src":"1256:34:29"},{"nodeType":"YulAssignment","src":"1299:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:29"},"nodeType":"YulFunctionCall","src":"1338:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:29"},"nodeType":"YulFunctionCall","src":"1309:61:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:29"},"nodeType":"YulFunctionCall","src":"1401:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:29"},"nodeType":"YulFunctionCall","src":"1395:25:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:29"},"nodeType":"YulFunctionCall","src":"1451:12:29"},"nodeType":"YulExpressionStatement","src":"1451:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:29"},"nodeType":"YulFunctionCall","src":"1432:16:29"},"nodeType":"YulIf","src":"1429:36:29"},{"nodeType":"YulAssignment","src":"1474:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:29"},"nodeType":"YulFunctionCall","src":"1513:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:29"},"nodeType":"YulFunctionCall","src":"1484:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:29","type":""}],"src":"991:562:29"},{"body":{"nodeType":"YulBlock","src":"1613:325:29","statements":[{"nodeType":"YulAssignment","src":"1623:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:29"},"nodeType":"YulFunctionCall","src":"1633:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:29"},"nodeType":"YulFunctionCall","src":"1680:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:29","statements":[{"nodeType":"YulAssignment","src":"1733:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:29"},"nodeType":"YulFunctionCall","src":"1743:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:29"},"nodeType":"YulFunctionCall","src":"1704:26:29"},"nodeType":"YulIf","src":"1701:61:29"},{"body":{"nodeType":"YulBlock","src":"1821:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:29"},"nodeType":"YulFunctionCall","src":"1845:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:29"},"nodeType":"YulFunctionCall","src":"1835:31:29"},"nodeType":"YulExpressionStatement","src":"1835:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:29"},"nodeType":"YulFunctionCall","src":"1879:15:29"},"nodeType":"YulExpressionStatement","src":"1879:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:29"},"nodeType":"YulFunctionCall","src":"1907:15:29"},"nodeType":"YulExpressionStatement","src":"1907:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:29"},"nodeType":"YulFunctionCall","src":"1797:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:29"},"nodeType":"YulFunctionCall","src":"1774:38:29"},"nodeType":"YulIf","src":"1771:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:29","type":""}],"src":"1558:380:29"},{"body":{"nodeType":"YulBlock","src":"1999:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:29"},"nodeType":"YulFunctionCall","src":"2009:14:29"},"nodeType":"YulExpressionStatement","src":"2009:14:29"},{"nodeType":"YulAssignment","src":"2032:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:29"},"nodeType":"YulFunctionCall","src":"2040:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:29"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:29","type":""}],"src":"1943:121:29"},{"body":{"nodeType":"YulBlock","src":"2150:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:29","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:29"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:29"},"nodeType":"YulFunctionCall","src":"2221:17:29"},"nodeType":"YulExpressionStatement","src":"2221:17:29"},{"nodeType":"YulVariableDeclaration","src":"2251:31:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:29"},"nodeType":"YulFunctionCall","src":"2263:19:29"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:29"},"nodeType":"YulFunctionCall","src":"2331:19:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:29"},"nodeType":"YulFunctionCall","src":"2324:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:29"},"nodeType":"YulFunctionCall","src":"2314:38:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:29","statements":[{"nodeType":"YulAssignment","src":"2391:19:29","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:29"},"nodeType":"YulFunctionCall","src":"2368:20:29"},"nodeType":"YulIf","src":"2365:47:29"},{"nodeType":"YulVariableDeclaration","src":"2425:41:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:29"},"nodeType":"YulFunctionCall","src":"2452:12:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:29"},"nodeType":"YulFunctionCall","src":"2445:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:29"},"nodeType":"YulFunctionCall","src":"2435:31:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:29","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:29"},"nodeType":"YulFunctionCall","src":"2579:17:29"},"nodeType":"YulExpressionStatement","src":"2579:17:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:29"},"nodeType":"YulFunctionCall","src":"2524:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:29","statements":[{"nodeType":"YulAssignment","src":"2540:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:29"},"nodeType":"YulFunctionCall","src":"2549:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:29","statements":[]},"src":"2516:82:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:29"},"nodeType":"YulFunctionCall","src":"2163:11:29"},"nodeType":"YulIf","src":"2160:448:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:29","type":""}],"src":"2069:545:29"},{"body":{"nodeType":"YulBlock","src":"2704:81:29","statements":[{"nodeType":"YulAssignment","src":"2714:65:29","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:29"},"nodeType":"YulFunctionCall","src":"2743:11:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:29"},"nodeType":"YulFunctionCall","src":"2756:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:29"},"nodeType":"YulFunctionCall","src":"2739:24:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:29"},"nodeType":"YulFunctionCall","src":"2735:29:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:29"},"nodeType":"YulFunctionCall","src":"2725:40:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:29"},"nodeType":"YulFunctionCall","src":"2767:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:29"},"nodeType":"YulFunctionCall","src":"2722:57:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:29","type":""}],"src":"2619:166:29"},{"body":{"nodeType":"YulBlock","src":"2886:1256:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:29"},"nodeType":"YulFunctionCall","src":"2910:10:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:29"},"nodeType":"YulFunctionCall","src":"2965:18:29"},"nodeType":"YulExpressionStatement","src":"2965:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:29"},"nodeType":"YulFunctionCall","src":"2947:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:29"},"nodeType":"YulFunctionCall","src":"2943:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:29"},"nodeType":"YulFunctionCall","src":"2932:30:29"},"nodeType":"YulIf","src":"2929:56:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:29"},"nodeType":"YulFunctionCall","src":"3070:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:29"},"nodeType":"YulFunctionCall","src":"3044:38:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:29"},"nodeType":"YulFunctionCall","src":"2994:97:29"},"nodeType":"YulExpressionStatement","src":"2994:97:29"},{"nodeType":"YulVariableDeclaration","src":"3100:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:29","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:29","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:29"},"nodeType":"YulFunctionCall","src":"3270:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:29"},"nodeType":"YulFunctionCall","src":"3258:20:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:29"},"nodeType":"YulFunctionCall","src":"3305:35:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:29"},"nodeType":"YulFunctionCall","src":"3479:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:29"},"nodeType":"YulFunctionCall","src":"3473:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:29"},"nodeType":"YulFunctionCall","src":"3458:42:29"},"nodeType":"YulExpressionStatement","src":"3458:42:29"},{"nodeType":"YulAssignment","src":"3517:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:29"},"nodeType":"YulFunctionCall","src":"3527:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:29"}]},{"nodeType":"YulAssignment","src":"3558:40:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:29"},"nodeType":"YulFunctionCall","src":"3571:27:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:29"},"nodeType":"YulFunctionCall","src":"3384:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:29","statements":[{"nodeType":"YulAssignment","src":"3401:24:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:29"},"nodeType":"YulFunctionCall","src":"3406:19:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:29","statements":[]},"src":"3376:236:29"},{"body":{"nodeType":"YulBlock","src":"3660:166:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:29"},"nodeType":"YulFunctionCall","src":"3701:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:29"},"nodeType":"YulFunctionCall","src":"3695:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:29","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:29"},"nodeType":"YulFunctionCall","src":"3780:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:29"},"nodeType":"YulFunctionCall","src":"3776:24:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:29"},"nodeType":"YulFunctionCall","src":"3802:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:29"},"nodeType":"YulFunctionCall","src":"3772:37:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:29"},"nodeType":"YulFunctionCall","src":"3768:42:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:29"},"nodeType":"YulFunctionCall","src":"3753:58:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:29"},"nodeType":"YulFunctionCall","src":"3738:74:29"},"nodeType":"YulExpressionStatement","src":"3738:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:29"},"nodeType":"YulFunctionCall","src":"3628:19:29"},"nodeType":"YulIf","src":"3625:201:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:29","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:29"},"nodeType":"YulFunctionCall","src":"3856:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:29"},"nodeType":"YulFunctionCall","src":"3852:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:29"},"nodeType":"YulFunctionCall","src":"3839:36:29"},"nodeType":"YulExpressionStatement","src":"3839:36:29"}]},"nodeType":"YulCase","src":"3222:663:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:29","statements":[{"nodeType":"YulAssignment","src":"3983:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:29"},"nodeType":"YulFunctionCall","src":"3998:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:29"},"nodeType":"YulFunctionCall","src":"3992:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:29"},"nodeType":"YulIf","src":"3943:89:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:29"},"nodeType":"YulFunctionCall","src":"4058:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:29"},"nodeType":"YulFunctionCall","src":"4045:81:29"},"nodeType":"YulExpressionStatement","src":"4045:81:29"}]},"nodeType":"YulCase","src":"3894:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:29"},"nodeType":"YulFunctionCall","src":"3199:14:29"},"nodeType":"YulSwitch","src":"3192:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:29","type":""}],"src":"2790:1352:29"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220aca616f3f9f683c6ea63f0c04f9fe60c9715433a545c4ceea75b83862f08a65c64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xA6 AND RETURN 0xF9 0xF6 DUP4 0xC6 0xEA PUSH4 0xF0C04F9F 0xE6 0xC SWAP8 ISZERO NUMBER GASPRICE SLOAD 0x5C 0x4C 0xEE 0xA7 JUMPDEST DUP4 DUP7 0x2F ADDMOD 0xA6 0x5C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1532:11312:3:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:3;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:29;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:29;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:29;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:29:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:29;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:29;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:29;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:29;;;3992:26;3943:89;-1:-1:-1;;2747:1:29;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:29;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:29;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:29;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:29:o;:::-;1532:11312:3;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1143":{"entryPoint":null,"id":1143,"parameterSlots":3,"returnSlots":0},"@_approve_1078":{"entryPoint":858,"id":1078,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1132":{"entryPoint":null,"id":1132,"parameterSlots":3,"returnSlots":0},"@_msgSender_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1121":{"entryPoint":1150,"id":1121,"parameterSlots":3,"returnSlots":0},"@_transfer_904":{"entryPoint":1272,"id":904,"parameterSlots":3,"returnSlots":0},"@allowance_699":{"entryPoint":815,"id":699,"parameterSlots":2,"returnSlots":1},"@approve_724":{"entryPoint":562,"id":724,"parameterSlots":2,"returnSlots":1},"@balanceOf_656":{"entryPoint":null,"id":656,"parameterSlots":1,"returnSlots":1},"@decimals_632":{"entryPoint":null,"id":632,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_827":{"entryPoint":673,"id":827,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_786":{"entryPoint":624,"id":786,"parameterSlots":2,"returnSlots":1},"@name_612":{"entryPoint":416,"id":612,"parameterSlots":0,"returnSlots":1},"@symbol_622":{"entryPoint":658,"id":622,"parameterSlots":0,"returnSlots":1},"@totalSupply_642":{"entryPoint":null,"id":642,"parameterSlots":0,"returnSlots":1},"@transferFrom_757":{"entryPoint":588,"id":757,"parameterSlots":3,"returnSlots":1},"@transfer_681":{"entryPoint":801,"id":681,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:29","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:29"},"nodeType":"YulFunctionCall","src":"166:21:29"},"nodeType":"YulExpressionStatement","src":"166:21:29"},{"nodeType":"YulVariableDeclaration","src":"196:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:29"},"nodeType":"YulFunctionCall","src":"210:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:29"},"nodeType":"YulFunctionCall","src":"239:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:29"},"nodeType":"YulFunctionCall","src":"232:34:29"},"nodeType":"YulExpressionStatement","src":"232:34:29"},{"nodeType":"YulVariableDeclaration","src":"275:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:29"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:29"},"nodeType":"YulFunctionCall","src":"369:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:29"},"nodeType":"YulFunctionCall","src":"365:26:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:29"},"nodeType":"YulFunctionCall","src":"403:14:29"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:23:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:29"},"nodeType":"YulFunctionCall","src":"393:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:29"},"nodeType":"YulFunctionCall","src":"358:66:29"},"nodeType":"YulExpressionStatement","src":"358:66:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:29"},"nodeType":"YulFunctionCall","src":"302:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:29","statements":[{"nodeType":"YulAssignment","src":"318:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:29"},"nodeType":"YulFunctionCall","src":"323:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:29","statements":[]},"src":"294:140:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:29"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:29"},"nodeType":"YulFunctionCall","src":"454:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:29"},"nodeType":"YulFunctionCall","src":"450:31:29"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:29"},"nodeType":"YulFunctionCall","src":"443:42:29"},"nodeType":"YulExpressionStatement","src":"443:42:29"},{"nodeType":"YulAssignment","src":"494:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:29"},"nodeType":"YulFunctionCall","src":"525:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:29"},"nodeType":"YulFunctionCall","src":"542:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:29"},"nodeType":"YulFunctionCall","src":"521:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:29"},"nodeType":"YulFunctionCall","src":"506:45:29"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:29"},"nodeType":"YulFunctionCall","src":"502:54:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:29","type":""}],"src":"14:548:29"},{"body":{"nodeType":"YulBlock","src":"616:124:29","statements":[{"nodeType":"YulAssignment","src":"626:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:29"},"nodeType":"YulFunctionCall","src":"635:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:29"}]},{"body":{"nodeType":"YulBlock","src":"718:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:29"},"nodeType":"YulFunctionCall","src":"720:12:29"},"nodeType":"YulExpressionStatement","src":"720:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:29"},"nodeType":"YulFunctionCall","src":"699:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:29"},"nodeType":"YulFunctionCall","src":"695:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:29"},"nodeType":"YulFunctionCall","src":"684:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:29"},"nodeType":"YulFunctionCall","src":"674:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:29"},"nodeType":"YulFunctionCall","src":"667:50:29"},"nodeType":"YulIf","src":"664:70:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:29","type":""}],"src":"567:173:29"},{"body":{"nodeType":"YulBlock","src":"832:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:29"},"nodeType":"YulFunctionCall","src":"880:12:29"},"nodeType":"YulExpressionStatement","src":"880:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:29"},"nodeType":"YulFunctionCall","src":"849:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:29"},"nodeType":"YulFunctionCall","src":"845:32:29"},"nodeType":"YulIf","src":"842:52:29"},{"nodeType":"YulAssignment","src":"903:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:29"},"nodeType":"YulFunctionCall","src":"913:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:29"}]},{"nodeType":"YulAssignment","src":"951:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:29"},"nodeType":"YulFunctionCall","src":"974:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:29"},"nodeType":"YulFunctionCall","src":"961:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:29","type":""}],"src":"745:254:29"},{"body":{"nodeType":"YulBlock","src":"1099:92:29","statements":[{"nodeType":"YulAssignment","src":"1109:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:29"},"nodeType":"YulFunctionCall","src":"1117:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:29"},"nodeType":"YulFunctionCall","src":"1169:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:29"},"nodeType":"YulFunctionCall","src":"1162:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:29"},"nodeType":"YulFunctionCall","src":"1144:41:29"},"nodeType":"YulExpressionStatement","src":"1144:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:29","type":""}],"src":"1004:187:29"},{"body":{"nodeType":"YulBlock","src":"1297:76:29","statements":[{"nodeType":"YulAssignment","src":"1307:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:29"},"nodeType":"YulFunctionCall","src":"1315:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:29"},"nodeType":"YulFunctionCall","src":"1342:25:29"},"nodeType":"YulExpressionStatement","src":"1342:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:29","type":""}],"src":"1196:177:29"},{"body":{"nodeType":"YulBlock","src":"1482:224:29","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:29"},"nodeType":"YulFunctionCall","src":"1530:12:29"},"nodeType":"YulExpressionStatement","src":"1530:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:29"},"nodeType":"YulFunctionCall","src":"1499:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:29"},"nodeType":"YulFunctionCall","src":"1495:32:29"},"nodeType":"YulIf","src":"1492:52:29"},{"nodeType":"YulAssignment","src":"1553:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:29"},"nodeType":"YulFunctionCall","src":"1563:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:29"}]},{"nodeType":"YulAssignment","src":"1601:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:29"},"nodeType":"YulFunctionCall","src":"1630:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:29"},"nodeType":"YulFunctionCall","src":"1611:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:29"}]},{"nodeType":"YulAssignment","src":"1658:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:29"},"nodeType":"YulFunctionCall","src":"1681:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:29"},"nodeType":"YulFunctionCall","src":"1668:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:29","type":""}],"src":"1378:328:29"},{"body":{"nodeType":"YulBlock","src":"1808:87:29","statements":[{"nodeType":"YulAssignment","src":"1818:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:29"},"nodeType":"YulFunctionCall","src":"1826:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:29"},"nodeType":"YulFunctionCall","src":"1871:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:29"},"nodeType":"YulFunctionCall","src":"1853:36:29"},"nodeType":"YulExpressionStatement","src":"1853:36:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:29","type":""}],"src":"1711:184:29"},{"body":{"nodeType":"YulBlock","src":"1970:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:29"},"nodeType":"YulFunctionCall","src":"2018:12:29"},"nodeType":"YulExpressionStatement","src":"2018:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:29"},"nodeType":"YulFunctionCall","src":"1987:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:29"},"nodeType":"YulFunctionCall","src":"1983:32:29"},"nodeType":"YulIf","src":"1980:52:29"},{"nodeType":"YulAssignment","src":"2041:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:29"},"nodeType":"YulFunctionCall","src":"2051:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:29","type":""}],"src":"1900:186:29"},{"body":{"nodeType":"YulBlock","src":"2178:173:29","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:29"},"nodeType":"YulFunctionCall","src":"2226:12:29"},"nodeType":"YulExpressionStatement","src":"2226:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:29"},"nodeType":"YulFunctionCall","src":"2195:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:29"},"nodeType":"YulFunctionCall","src":"2191:32:29"},"nodeType":"YulIf","src":"2188:52:29"},{"nodeType":"YulAssignment","src":"2249:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:29"},"nodeType":"YulFunctionCall","src":"2259:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:29"}]},{"nodeType":"YulAssignment","src":"2297:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:29"},"nodeType":"YulFunctionCall","src":"2326:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:29"},"nodeType":"YulFunctionCall","src":"2307:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:29","type":""}],"src":"2091:260:29"},{"body":{"nodeType":"YulBlock","src":"2411:325:29","statements":[{"nodeType":"YulAssignment","src":"2421:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:29"},"nodeType":"YulFunctionCall","src":"2431:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:29"},"nodeType":"YulFunctionCall","src":"2478:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:29","statements":[{"nodeType":"YulAssignment","src":"2531:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:29"},"nodeType":"YulFunctionCall","src":"2541:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:29"},"nodeType":"YulFunctionCall","src":"2502:26:29"},"nodeType":"YulIf","src":"2499:61:29"},{"body":{"nodeType":"YulBlock","src":"2619:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:29"},"nodeType":"YulFunctionCall","src":"2643:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:29"},"nodeType":"YulFunctionCall","src":"2633:31:29"},"nodeType":"YulExpressionStatement","src":"2633:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:29"},"nodeType":"YulFunctionCall","src":"2677:15:29"},"nodeType":"YulExpressionStatement","src":"2677:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:29"},"nodeType":"YulFunctionCall","src":"2705:15:29"},"nodeType":"YulExpressionStatement","src":"2705:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:29"},"nodeType":"YulFunctionCall","src":"2595:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:29"},"nodeType":"YulFunctionCall","src":"2572:38:29"},"nodeType":"YulIf","src":"2569:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:29","type":""}],"src":"2356:380:29"},{"body":{"nodeType":"YulBlock","src":"2789:174:29","statements":[{"nodeType":"YulAssignment","src":"2799:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:29"},"nodeType":"YulFunctionCall","src":"2806:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:29"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:29"},"nodeType":"YulFunctionCall","src":"2870:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:29"},"nodeType":"YulFunctionCall","src":"2860:31:29"},"nodeType":"YulExpressionStatement","src":"2860:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:29"},"nodeType":"YulFunctionCall","src":"2904:15:29"},"nodeType":"YulExpressionStatement","src":"2904:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:29"},"nodeType":"YulFunctionCall","src":"2932:15:29"},"nodeType":"YulExpressionStatement","src":"2932:15:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:29"},"nodeType":"YulFunctionCall","src":"2827:10:29"},"nodeType":"YulIf","src":"2824:133:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:29","type":""}],"src":"2741:222:29"},{"body":{"nodeType":"YulBlock","src":"3142:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:29"},"nodeType":"YulFunctionCall","src":"3152:21:29"},"nodeType":"YulExpressionStatement","src":"3152:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:29"},"nodeType":"YulFunctionCall","src":"3189:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:29"},"nodeType":"YulFunctionCall","src":"3182:30:29"},"nodeType":"YulExpressionStatement","src":"3182:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:29"},"nodeType":"YulFunctionCall","src":"3228:18:29"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:29","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:29"},"nodeType":"YulFunctionCall","src":"3221:62:29"},"nodeType":"YulExpressionStatement","src":"3221:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:29"},"nodeType":"YulFunctionCall","src":"3299:18:29"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:29","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:29"},"nodeType":"YulFunctionCall","src":"3292:35:29"},"nodeType":"YulExpressionStatement","src":"3292:35:29"},{"nodeType":"YulAssignment","src":"3336:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:29"},"nodeType":"YulFunctionCall","src":"3344:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:29","type":""}],"src":"2968:401:29"},{"body":{"nodeType":"YulBlock","src":"3548:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:29"},"nodeType":"YulFunctionCall","src":"3558:21:29"},"nodeType":"YulExpressionStatement","src":"3558:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:29"},"nodeType":"YulFunctionCall","src":"3595:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:29"},"nodeType":"YulFunctionCall","src":"3588:30:29"},"nodeType":"YulExpressionStatement","src":"3588:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:29"},"nodeType":"YulFunctionCall","src":"3634:18:29"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:29","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:29"},"nodeType":"YulFunctionCall","src":"3627:62:29"},"nodeType":"YulExpressionStatement","src":"3627:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:29"},"nodeType":"YulFunctionCall","src":"3705:18:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:29"},"nodeType":"YulFunctionCall","src":"3698:34:29"},"nodeType":"YulExpressionStatement","src":"3698:34:29"},{"nodeType":"YulAssignment","src":"3741:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:29"},"nodeType":"YulFunctionCall","src":"3749:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:29","type":""}],"src":"3374:400:29"},{"body":{"nodeType":"YulBlock","src":"3953:224:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:29"},"nodeType":"YulFunctionCall","src":"3963:21:29"},"nodeType":"YulExpressionStatement","src":"3963:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:29"},"nodeType":"YulFunctionCall","src":"4000:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:29","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:29"},"nodeType":"YulFunctionCall","src":"3993:30:29"},"nodeType":"YulExpressionStatement","src":"3993:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:29"},"nodeType":"YulFunctionCall","src":"4039:18:29"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:29","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:29"},"nodeType":"YulFunctionCall","src":"4032:62:29"},"nodeType":"YulExpressionStatement","src":"4032:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:29"},"nodeType":"YulFunctionCall","src":"4110:18:29"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:29","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:29"},"nodeType":"YulFunctionCall","src":"4103:32:29"},"nodeType":"YulExpressionStatement","src":"4103:32:29"},{"nodeType":"YulAssignment","src":"4144:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:29"},"nodeType":"YulFunctionCall","src":"4152:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:29","type":""}],"src":"3779:398:29"},{"body":{"nodeType":"YulBlock","src":"4356:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:29"},"nodeType":"YulFunctionCall","src":"4366:21:29"},"nodeType":"YulExpressionStatement","src":"4366:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:29"},"nodeType":"YulFunctionCall","src":"4403:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:29"},"nodeType":"YulFunctionCall","src":"4396:30:29"},"nodeType":"YulExpressionStatement","src":"4396:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:29"},"nodeType":"YulFunctionCall","src":"4442:18:29"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:29","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:29"},"nodeType":"YulFunctionCall","src":"4435:59:29"},"nodeType":"YulExpressionStatement","src":"4435:59:29"},{"nodeType":"YulAssignment","src":"4503:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:29"},"nodeType":"YulFunctionCall","src":"4511:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:29","type":""}],"src":"4182:353:29"},{"body":{"nodeType":"YulBlock","src":"4714:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:29"},"nodeType":"YulFunctionCall","src":"4724:21:29"},"nodeType":"YulExpressionStatement","src":"4724:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:29"},"nodeType":"YulFunctionCall","src":"4761:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:29"},"nodeType":"YulFunctionCall","src":"4754:30:29"},"nodeType":"YulExpressionStatement","src":"4754:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:29"},"nodeType":"YulFunctionCall","src":"4800:18:29"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:29","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:29"},"nodeType":"YulFunctionCall","src":"4793:62:29"},"nodeType":"YulExpressionStatement","src":"4793:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:29"},"nodeType":"YulFunctionCall","src":"4871:18:29"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:29","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:29"},"nodeType":"YulFunctionCall","src":"4864:35:29"},"nodeType":"YulExpressionStatement","src":"4864:35:29"},{"nodeType":"YulAssignment","src":"4908:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:29"},"nodeType":"YulFunctionCall","src":"4916:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:29","type":""}],"src":"4540:401:29"},{"body":{"nodeType":"YulBlock","src":"5120:225:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:29"},"nodeType":"YulFunctionCall","src":"5130:21:29"},"nodeType":"YulExpressionStatement","src":"5130:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:29"},"nodeType":"YulFunctionCall","src":"5167:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:29","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:29"},"nodeType":"YulFunctionCall","src":"5160:30:29"},"nodeType":"YulExpressionStatement","src":"5160:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:29"},"nodeType":"YulFunctionCall","src":"5206:18:29"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:29","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:29"},"nodeType":"YulFunctionCall","src":"5199:62:29"},"nodeType":"YulExpressionStatement","src":"5199:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:29"},"nodeType":"YulFunctionCall","src":"5277:18:29"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:29","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:29"},"nodeType":"YulFunctionCall","src":"5270:33:29"},"nodeType":"YulExpressionStatement","src":"5270:33:29"},{"nodeType":"YulAssignment","src":"5312:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:29"},"nodeType":"YulFunctionCall","src":"5320:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:29","type":""}],"src":"4946:399:29"},{"body":{"nodeType":"YulBlock","src":"5524:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:29"},"nodeType":"YulFunctionCall","src":"5534:21:29"},"nodeType":"YulExpressionStatement","src":"5534:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:29"},"nodeType":"YulFunctionCall","src":"5571:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:29"},"nodeType":"YulFunctionCall","src":"5564:30:29"},"nodeType":"YulExpressionStatement","src":"5564:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:29"},"nodeType":"YulFunctionCall","src":"5610:18:29"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:29","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:29"},"nodeType":"YulFunctionCall","src":"5603:62:29"},"nodeType":"YulExpressionStatement","src":"5603:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:29"},"nodeType":"YulFunctionCall","src":"5681:18:29"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:29","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:29"},"nodeType":"YulFunctionCall","src":"5674:36:29"},"nodeType":"YulExpressionStatement","src":"5674:36:29"},{"nodeType":"YulAssignment","src":"5719:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:29"},"nodeType":"YulFunctionCall","src":"5727:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:29","type":""}],"src":"5350:402:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220aca616f3f9f683c6ea63f0c04f9fe60c9715433a545c4ceea75b83862f08a65c64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xA6 AND RETURN 0xF9 0xF6 DUP4 0xC6 0xEA PUSH4 0xF0C04F9F 0xE6 0xC SWAP8 ISZERO NUMBER GASPRICE SLOAD 0x5C 0x4C 0xEE 0xA7 JUMPDEST DUP4 DUP7 0x2F ADDMOD 0xA6 0x5C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1532:11312:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:29;;1162:22;1144:41;;1132:2;1117:18;4444:197:3;1004:187:29;3255:106:3;3342:12;;3255:106;;;1342:25:29;;;1330:2;1315:18;3255:106:3;1196:177:29;5203:256:3;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:29;;1841:2;1826:18;3104:91:3;1711:184:29;5854:234:3;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:3;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:11;4581:32:3;719:10:11;4597:7:3;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:11;5356:38:3;5372:4;719:10:11;5387:6:3;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:3;;5203:256;-1:-1:-1;;;;5203:256:3:o;5854:234::-;5942:4;719:10:11;5996:64:3;719:10:11;6012:7:3;6049:10;6021:25;719:10:11;6012:7:3;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:11;6668:4:3;6749:25;719:10:11;6766:7:3;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:3;;3170:2:29;6784:85:3;;;3152:21:29;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:29;;;3292:35;3344:19;;6784:85:3;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:11;3873:28:3;719:10:11;3890:2:3;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:3;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:3;;10550:68;;;;-1:-1:-1;;;10550:68:3;;3576:2:29;10550:68:3;;;3558:21:29;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:29;;;3698:34;3749:19;;10550:68:3;3374:400:29;10550:68:3;-1:-1:-1;;;;;10636:21:3;;10628:68;;;;-1:-1:-1;;;10628:68:3;;3981:2:29;10628:68:3;;;3963:21:29;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:29;;;4103:32;4152:19;;10628:68:3;3779:398:29;10628:68:3;-1:-1:-1;;;;;10707:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:29;;;10758:32:3;;1315:18:29;10758:32:3;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:3;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:3;;4384:2:29;11297:68:3;;;4366:21:29;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:3;4182:353:29;11297:68:3;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:3;;7544:68;;;;-1:-1:-1;;;7544:68:3;;4742:2:29;7544:68:3;;;4724:21:29;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:29;;;4864:35;4916:19;;7544:68:3;4540:401:29;7544:68:3;-1:-1:-1;;;;;7630:16:3;;7622:64;;;;-1:-1:-1;;;7622:64:3;;5148:2:29;7622:64:3;;;5130:21:29;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:29;;;5270:33;5320:19;;7622:64:3;4946:399:29;7622:64:3;-1:-1:-1;;;;;7768:15:3;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:3;;5552:2:29;7793:72:3;;;5534:21:29;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:29;;;5674:36;5727:19;;7793:72:3;5350:402:29;7793:72:3;-1:-1:-1;;;;;7899:15:3;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:29;;;8114:13:3;;8163:26;;1315:18:29;8163:26:3;;;;;;;8200:37;12073:91;14:548:29;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:29;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:29:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:29:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"426000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51138","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":573,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":579,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":581,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":583,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":585,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1310":{"entryPoint":null,"id":1310,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:29"},"nodeType":"YulFunctionCall","src":"66:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:29"},"nodeType":"YulFunctionCall","src":"56:31:29"},"nodeType":"YulExpressionStatement","src":"56:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:29"},"nodeType":"YulFunctionCall","src":"96:15:29"},"nodeType":"YulExpressionStatement","src":"96:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:29"},"nodeType":"YulFunctionCall","src":"120:15:29"},"nodeType":"YulExpressionStatement","src":"120:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:29"},{"body":{"nodeType":"YulBlock","src":"210:776:29","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:29"},"nodeType":"YulFunctionCall","src":"261:12:29"},"nodeType":"YulExpressionStatement","src":"261:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:29"},"nodeType":"YulFunctionCall","src":"234:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:29"},"nodeType":"YulFunctionCall","src":"223:35:29"},"nodeType":"YulIf","src":"220:55:29"},{"nodeType":"YulVariableDeclaration","src":"284:23:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:29"},"nodeType":"YulFunctionCall","src":"294:13:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:29"},"nodeType":"YulFunctionCall","src":"330:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:29"},"nodeType":"YulFunctionCall","src":"326:18:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:29"},"nodeType":"YulFunctionCall","src":"369:18:29"},"nodeType":"YulExpressionStatement","src":"369:18:29"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:29"},"nodeType":"YulFunctionCall","src":"356:10:29"},"nodeType":"YulIf","src":"353:36:29"},{"nodeType":"YulVariableDeclaration","src":"398:17:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:29"},"nodeType":"YulFunctionCall","src":"408:7:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:29"},"nodeType":"YulFunctionCall","src":"438:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:29"},"nodeType":"YulFunctionCall","src":"498:13:29"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:29"},"nodeType":"YulFunctionCall","src":"494:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:29"},"nodeType":"YulFunctionCall","src":"490:31:29"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:29"},"nodeType":"YulFunctionCall","src":"486:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:29"},"nodeType":"YulFunctionCall","src":"474:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:29"},"nodeType":"YulFunctionCall","src":"588:18:29"},"nodeType":"YulExpressionStatement","src":"588:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:29"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:29"},"nodeType":"YulFunctionCall","src":"542:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:29"},"nodeType":"YulFunctionCall","src":"562:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:29"},"nodeType":"YulFunctionCall","src":"539:46:29"},"nodeType":"YulIf","src":"536:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:29"},"nodeType":"YulFunctionCall","src":"617:22:29"},"nodeType":"YulExpressionStatement","src":"617:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:29"},"nodeType":"YulFunctionCall","src":"648:18:29"},"nodeType":"YulExpressionStatement","src":"648:18:29"},{"nodeType":"YulVariableDeclaration","src":"675:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:29","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:29"},"nodeType":"YulFunctionCall","src":"737:12:29"},"nodeType":"YulExpressionStatement","src":"737:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:29"},"nodeType":"YulFunctionCall","src":"708:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:29"},"nodeType":"YulFunctionCall","src":"704:24:29"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:29"},"nodeType":"YulFunctionCall","src":"701:33:29"},"nodeType":"YulIf","src":"698:53:29"},{"nodeType":"YulVariableDeclaration","src":"760:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:29"},"nodeType":"YulFunctionCall","src":"850:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:29"},"nodeType":"YulFunctionCall","src":"846:23:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:29"},"nodeType":"YulFunctionCall","src":"881:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:29"},"nodeType":"YulFunctionCall","src":"877:23:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:29"},"nodeType":"YulFunctionCall","src":"871:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:29"},"nodeType":"YulFunctionCall","src":"839:63:29"},"nodeType":"YulExpressionStatement","src":"839:63:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:29"},"nodeType":"YulFunctionCall","src":"787:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:29","statements":[{"nodeType":"YulAssignment","src":"799:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:29"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:29"},"nodeType":"YulFunctionCall","src":"804:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:29","statements":[]},"src":"779:133:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:29"},"nodeType":"YulFunctionCall","src":"932:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:29"},"nodeType":"YulFunctionCall","src":"928:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:29"},"nodeType":"YulFunctionCall","src":"921:35:29"},"nodeType":"YulExpressionStatement","src":"921:35:29"},{"nodeType":"YulAssignment","src":"965:15:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:29"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:29","type":""}],"src":"146:840:29"},{"body":{"nodeType":"YulBlock","src":"1109:444:29","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:29"},"nodeType":"YulFunctionCall","src":"1157:12:29"},"nodeType":"YulExpressionStatement","src":"1157:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:29"},"nodeType":"YulFunctionCall","src":"1126:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:29"},"nodeType":"YulFunctionCall","src":"1122:32:29"},"nodeType":"YulIf","src":"1119:52:29"},{"nodeType":"YulVariableDeclaration","src":"1180:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:29"},"nodeType":"YulFunctionCall","src":"1194:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:29"},"nodeType":"YulFunctionCall","src":"1233:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:29"},"nodeType":"YulFunctionCall","src":"1229:18:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:29"},"nodeType":"YulFunctionCall","src":"1276:12:29"},"nodeType":"YulExpressionStatement","src":"1276:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:29"},"nodeType":"YulFunctionCall","src":"1259:14:29"},"nodeType":"YulIf","src":"1256:34:29"},{"nodeType":"YulAssignment","src":"1299:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:29"},"nodeType":"YulFunctionCall","src":"1338:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:29"},"nodeType":"YulFunctionCall","src":"1309:61:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:29"},"nodeType":"YulFunctionCall","src":"1401:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:29"},"nodeType":"YulFunctionCall","src":"1395:25:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:29"},"nodeType":"YulFunctionCall","src":"1451:12:29"},"nodeType":"YulExpressionStatement","src":"1451:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:29"},"nodeType":"YulFunctionCall","src":"1432:16:29"},"nodeType":"YulIf","src":"1429:36:29"},{"nodeType":"YulAssignment","src":"1474:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:29"},"nodeType":"YulFunctionCall","src":"1513:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:29"},"nodeType":"YulFunctionCall","src":"1484:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:29","type":""}],"src":"991:562:29"},{"body":{"nodeType":"YulBlock","src":"1613:325:29","statements":[{"nodeType":"YulAssignment","src":"1623:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:29"},"nodeType":"YulFunctionCall","src":"1633:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:29"},"nodeType":"YulFunctionCall","src":"1680:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:29","statements":[{"nodeType":"YulAssignment","src":"1733:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:29"},"nodeType":"YulFunctionCall","src":"1743:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:29"},"nodeType":"YulFunctionCall","src":"1704:26:29"},"nodeType":"YulIf","src":"1701:61:29"},{"body":{"nodeType":"YulBlock","src":"1821:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:29"},"nodeType":"YulFunctionCall","src":"1845:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:29"},"nodeType":"YulFunctionCall","src":"1835:31:29"},"nodeType":"YulExpressionStatement","src":"1835:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:29"},"nodeType":"YulFunctionCall","src":"1879:15:29"},"nodeType":"YulExpressionStatement","src":"1879:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:29"},"nodeType":"YulFunctionCall","src":"1907:15:29"},"nodeType":"YulExpressionStatement","src":"1907:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:29"},"nodeType":"YulFunctionCall","src":"1797:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:29"},"nodeType":"YulFunctionCall","src":"1774:38:29"},"nodeType":"YulIf","src":"1771:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:29","type":""}],"src":"1558:380:29"},{"body":{"nodeType":"YulBlock","src":"1999:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:29"},"nodeType":"YulFunctionCall","src":"2009:14:29"},"nodeType":"YulExpressionStatement","src":"2009:14:29"},{"nodeType":"YulAssignment","src":"2032:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:29"},"nodeType":"YulFunctionCall","src":"2040:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:29"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:29","type":""}],"src":"1943:121:29"},{"body":{"nodeType":"YulBlock","src":"2150:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:29","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:29"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:29"},"nodeType":"YulFunctionCall","src":"2221:17:29"},"nodeType":"YulExpressionStatement","src":"2221:17:29"},{"nodeType":"YulVariableDeclaration","src":"2251:31:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:29"},"nodeType":"YulFunctionCall","src":"2263:19:29"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:29"},"nodeType":"YulFunctionCall","src":"2331:19:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:29"},"nodeType":"YulFunctionCall","src":"2324:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:29"},"nodeType":"YulFunctionCall","src":"2314:38:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:29","statements":[{"nodeType":"YulAssignment","src":"2391:19:29","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:29"},"nodeType":"YulFunctionCall","src":"2368:20:29"},"nodeType":"YulIf","src":"2365:47:29"},{"nodeType":"YulVariableDeclaration","src":"2425:41:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:29"},"nodeType":"YulFunctionCall","src":"2452:12:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:29"},"nodeType":"YulFunctionCall","src":"2445:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:29"},"nodeType":"YulFunctionCall","src":"2435:31:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:29","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:29"},"nodeType":"YulFunctionCall","src":"2579:17:29"},"nodeType":"YulExpressionStatement","src":"2579:17:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:29"},"nodeType":"YulFunctionCall","src":"2524:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:29","statements":[{"nodeType":"YulAssignment","src":"2540:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:29"},"nodeType":"YulFunctionCall","src":"2549:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:29","statements":[]},"src":"2516:82:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:29"},"nodeType":"YulFunctionCall","src":"2163:11:29"},"nodeType":"YulIf","src":"2160:448:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:29","type":""}],"src":"2069:545:29"},{"body":{"nodeType":"YulBlock","src":"2704:81:29","statements":[{"nodeType":"YulAssignment","src":"2714:65:29","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:29"},"nodeType":"YulFunctionCall","src":"2743:11:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:29"},"nodeType":"YulFunctionCall","src":"2756:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:29"},"nodeType":"YulFunctionCall","src":"2739:24:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:29"},"nodeType":"YulFunctionCall","src":"2735:29:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:29"},"nodeType":"YulFunctionCall","src":"2725:40:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:29"},"nodeType":"YulFunctionCall","src":"2767:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:29"},"nodeType":"YulFunctionCall","src":"2722:57:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:29","type":""}],"src":"2619:166:29"},{"body":{"nodeType":"YulBlock","src":"2886:1256:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:29"},"nodeType":"YulFunctionCall","src":"2910:10:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:29"},"nodeType":"YulFunctionCall","src":"2965:18:29"},"nodeType":"YulExpressionStatement","src":"2965:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:29"},"nodeType":"YulFunctionCall","src":"2947:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:29"},"nodeType":"YulFunctionCall","src":"2943:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:29"},"nodeType":"YulFunctionCall","src":"2932:30:29"},"nodeType":"YulIf","src":"2929:56:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:29"},"nodeType":"YulFunctionCall","src":"3070:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:29"},"nodeType":"YulFunctionCall","src":"3044:38:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:29"},"nodeType":"YulFunctionCall","src":"2994:97:29"},"nodeType":"YulExpressionStatement","src":"2994:97:29"},{"nodeType":"YulVariableDeclaration","src":"3100:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:29","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:29","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:29"},"nodeType":"YulFunctionCall","src":"3270:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:29"},"nodeType":"YulFunctionCall","src":"3258:20:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:29"},"nodeType":"YulFunctionCall","src":"3305:35:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:29"},"nodeType":"YulFunctionCall","src":"3479:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:29"},"nodeType":"YulFunctionCall","src":"3473:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:29"},"nodeType":"YulFunctionCall","src":"3458:42:29"},"nodeType":"YulExpressionStatement","src":"3458:42:29"},{"nodeType":"YulAssignment","src":"3517:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:29"},"nodeType":"YulFunctionCall","src":"3527:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:29"}]},{"nodeType":"YulAssignment","src":"3558:40:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:29"},"nodeType":"YulFunctionCall","src":"3571:27:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:29"},"nodeType":"YulFunctionCall","src":"3384:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:29","statements":[{"nodeType":"YulAssignment","src":"3401:24:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:29"},"nodeType":"YulFunctionCall","src":"3406:19:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:29","statements":[]},"src":"3376:236:29"},{"body":{"nodeType":"YulBlock","src":"3660:166:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:29"},"nodeType":"YulFunctionCall","src":"3701:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:29"},"nodeType":"YulFunctionCall","src":"3695:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:29","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:29"},"nodeType":"YulFunctionCall","src":"3780:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:29"},"nodeType":"YulFunctionCall","src":"3776:24:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:29"},"nodeType":"YulFunctionCall","src":"3802:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:29"},"nodeType":"YulFunctionCall","src":"3772:37:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:29"},"nodeType":"YulFunctionCall","src":"3768:42:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:29"},"nodeType":"YulFunctionCall","src":"3753:58:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:29"},"nodeType":"YulFunctionCall","src":"3738:74:29"},"nodeType":"YulExpressionStatement","src":"3738:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:29"},"nodeType":"YulFunctionCall","src":"3628:19:29"},"nodeType":"YulIf","src":"3625:201:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:29","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:29"},"nodeType":"YulFunctionCall","src":"3856:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:29"},"nodeType":"YulFunctionCall","src":"3852:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:29"},"nodeType":"YulFunctionCall","src":"3839:36:29"},"nodeType":"YulExpressionStatement","src":"3839:36:29"}]},"nodeType":"YulCase","src":"3222:663:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:29","statements":[{"nodeType":"YulAssignment","src":"3983:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:29"},"nodeType":"YulFunctionCall","src":"3998:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:29"},"nodeType":"YulFunctionCall","src":"3992:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:29"},"nodeType":"YulIf","src":"3943:89:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:29"},"nodeType":"YulFunctionCall","src":"4058:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:29"},"nodeType":"YulFunctionCall","src":"4045:81:29"},"nodeType":"YulExpressionStatement","src":"4045:81:29"}]},"nodeType":"YulCase","src":"3894:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:29"},"nodeType":"YulFunctionCall","src":"3199:14:29"},"nodeType":"YulSwitch","src":"3192:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:29","type":""}],"src":"2790:1352:29"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200149d3803806200149d83398101604081905262000034916200011f565b600062000042838262000218565b50600162000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6111a980620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610cf9565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d66565b61012461011f366004610d79565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dae565b61030a565b005b61014f61015f366004610dd8565b610424565b61014f610172366004610dd8565b610455565b610124610185366004610d79565b610470565b61019d610198366004610e14565b6104d0565b6040519081526020016100f3565b610104610556565b61014f6101c1366004610e2f565b610565565b61014f6101d4366004610e81565b610574565b6101046101e7366004610d79565b6105ac565b6100e76101fa366004610f5d565b610620565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610f90565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610f90565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b60006102ee8261064e565b506000908152600460205260409020546001600160a01b031690565b600061031582610470565b9050806001600160a01b0316836001600160a01b0316036103875760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103a357506103a38133610620565b6104155760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161037e565b61041f83836106b0565b505050565b61042e338261071e565b61044a5760405162461bcd60e51b815260040161037e90610fca565b61041f83838361077d565b61041f83838360405180602001604052806000815250610574565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b60006001600160a01b03821661053a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161037e565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610f90565b6105703383836108ee565b5050565b61057e338361071e565b61059a5760405162461bcd60e51b815260040161037e90610fca565b6105a6848484846109bc565b50505050565b60606105b78261064e565b60006105ce60408051602081019091526000815290565b905060008151116105ee5760405180602001604052806000815250610619565b806105f8846109ef565b604051602001610609929190611017565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166106ad5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e582610470565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072a83610470565b9050806001600160a01b0316846001600160a01b0316148061075157506107518185610620565b806107755750836001600160a01b031661076a846102e3565b6001600160a01b0316145b949350505050565b826001600160a01b031661079082610470565b6001600160a01b0316146107b65760405162461bcd60e51b815260040161037e90611046565b6001600160a01b0382166108185760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161037e565b6108258383836001610a82565b826001600160a01b031661083882610470565b6001600160a01b03161461085e5760405162461bcd60e51b815260040161037e90611046565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361094f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161037e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109c784848461077d565b6109d384848484610b0a565b6105a65760405162461bcd60e51b815260040161037e9061108b565b606060006109fc83610c0b565b600101905060008167ffffffffffffffff811115610a1c57610a1c610e6b565b6040519080825280601f01601f191660200182016040528015610a46576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5057509392505050565b60018111156105a6576001600160a01b03841615610ac8576001600160a01b03841660009081526003602052604081208054839290610ac29084906110f3565b90915550505b6001600160a01b038316156105a6576001600160a01b03831660009081526003602052604081208054839290610aff908490611106565b909155505050505050565b60006001600160a01b0384163b15610c0057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b4e903390899088908890600401611119565b6020604051808303816000875af1925050508015610b89575060408051601f3d908101601f19168201909252610b8691810190611156565b60015b610be6573d808015610bb7576040519150601f19603f3d011682016040523d82523d6000602084013e610bbc565b606091505b508051600003610bde5760405162461bcd60e51b815260040161037e9061108b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610775565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c76576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9457662386f26fc10000830492506010015b6305f5e1008310610cac576305f5e100830492506008015b6127108310610cc057612710830492506004015b60648310610cd2576064830492506002015b600a831061024b5760010192915050565b6001600160e01b0319811681146106ad57600080fd5b600060208284031215610d0b57600080fd5b813561061981610ce3565b60005b83811015610d31578181015183820152602001610d19565b50506000910152565b60008151808452610d52816020860160208601610d16565b601f01601f19169290920160200192915050565b6020815260006106196020830184610d3a565b600060208284031215610d8b57600080fd5b5035919050565b80356001600160a01b0381168114610da957600080fd5b919050565b60008060408385031215610dc157600080fd5b610dca83610d92565b946020939093013593505050565b600080600060608486031215610ded57600080fd5b610df684610d92565b9250610e0460208501610d92565b9150604084013590509250925092565b600060208284031215610e2657600080fd5b61061982610d92565b60008060408385031215610e4257600080fd5b610e4b83610d92565b915060208301358015158114610e6057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e9757600080fd5b610ea085610d92565b9350610eae60208601610d92565b925060408501359150606085013567ffffffffffffffff80821115610ed257600080fd5b818701915087601f830112610ee657600080fd5b813581811115610ef857610ef8610e6b565b604051601f8201601f19908116603f01168101908382118183101715610f2057610f20610e6b565b816040528281528a6020848701011115610f3957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f7057600080fd5b610f7983610d92565b9150610f8760208401610d92565b90509250929050565b600181811c90821680610fa457607f821691505b602082108103610fc457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611029818460208801610d16565b83519083019061103d818360208801610d16565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b6110dd565b8082018082111561024b5761024b6110dd565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114c90830184610d3a565b9695505050505050565b60006020828403121561116857600080fd5b815161061981610ce356fea2646970667358221220eb86eaeba11efee7e0bb3e8929a6d489b625e7f50f4d3a5c408de67d356b44a264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x149D CODESIZE SUB DUP1 PUSH3 0x149D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x11A9 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP3 PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH2 0x3A3 DUP2 CALLER PUSH2 0x620 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x42E CALLER DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x570 CALLER DUP4 DUP4 PUSH2 0x8EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57E CALLER DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B7 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x619 JUMP JUMPDEST DUP1 PUSH2 0x5F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x609 SWAP3 SWAP2 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E5 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72A DUP4 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH2 0x751 DUP2 DUP6 PUSH2 0x620 JUMP JUMPDEST DUP1 PUSH2 0x775 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x790 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x825 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x838 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9C7 DUP5 DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9D3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9FC DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA50 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAC2 SWAP1 DUP5 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB4E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB89 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB86 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBE6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x775 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC4A JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC76 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC94 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCAC JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCC0 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCD2 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x24B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD19 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD52 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x619 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCA DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF6 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH2 0xE04 PUSH1 0x20 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA0 DUP6 PUSH2 0xD92 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAE PUSH1 0x20 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF8 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF20 PUSH2 0xE6B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF79 DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF87 PUSH1 0x20 DUP5 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1029 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x103D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x114C SWAP1 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP7 0xEA 0xEB LOG1 0x1E INVALID 0xE7 0xE0 0xBB RETURNDATACOPY DUP10 0x29 0xA6 0xD4 DUP10 0xB6 0x25 0xE7 CREATE2 0xF 0x4D GASPRICE 0x5C BLOCKHASH DUP14 0xE6 PUSH30 0x356B44A264736F6C63430008110033000000000000000000000000000000 ","sourceMap":"628:16063:6:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:6;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16063;;14:127:29;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:29;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:29;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:29:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:29;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:29;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:29;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:29;;;3992:26;3943:89;-1:-1:-1;;2747:1:29;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:29;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:29;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:29;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:29:o;:::-;628:16063:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2191":{"entryPoint":null,"id":2191,"parameterSlots":4,"returnSlots":0},"@_approve_2024":{"entryPoint":1712,"id":2024,"parameterSlots":2,"returnSlots":0},"@_baseURI_1461":{"entryPoint":null,"id":1461,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2178":{"entryPoint":2690,"id":2178,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2132":{"entryPoint":2826,"id":2132,"parameterSlots":4,"returnSlots":1},"@_exists_1693":{"entryPoint":null,"id":1693,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1727":{"entryPoint":1822,"id":1727,"parameterSlots":2,"returnSlots":1},"@_msgSender_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1675":{"entryPoint":null,"id":1675,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2070":{"entryPoint":1614,"id":2070,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1662":{"entryPoint":2492,"id":1662,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2056":{"entryPoint":2286,"id":2056,"parameterSlots":3,"returnSlots":0},"@_transfer_2000":{"entryPoint":1917,"id":2000,"parameterSlots":3,"returnSlots":0},"@approve_1504":{"entryPoint":778,"id":1504,"parameterSlots":2,"returnSlots":0},"@balanceOf_1365":{"entryPoint":1232,"id":1365,"parameterSlots":1,"returnSlots":1},"@getApproved_1522":{"entryPoint":739,"id":1522,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1557":{"entryPoint":1568,"id":1557,"parameterSlots":2,"returnSlots":1},"@isContract_2371":{"entryPoint":null,"id":2371,"parameterSlots":1,"returnSlots":1},"@log10_3673":{"entryPoint":3083,"id":3673,"parameterSlots":1,"returnSlots":1},"@name_1403":{"entryPoint":593,"id":1403,"parameterSlots":0,"returnSlots":1},"@ownerOf_1393":{"entryPoint":1136,"id":1393,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1603":{"entryPoint":1109,"id":1603,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1633":{"entryPoint":1396,"id":1633,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1539":{"entryPoint":1381,"id":1539,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1341":{"entryPoint":511,"id":1341,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2957":{"entryPoint":null,"id":2957,"parameterSlots":1,"returnSlots":1},"@symbol_1413":{"entryPoint":1366,"id":1413,"parameterSlots":0,"returnSlots":1},"@toString_2764":{"entryPoint":2543,"id":2764,"parameterSlots":1,"returnSlots":1},"@tokenURI_1452":{"entryPoint":1452,"id":1452,"parameterSlots":1,"returnSlots":1},"@transferFrom_1584":{"entryPoint":1060,"id":1584,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":3474,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3933,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3544,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":3713,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3631,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3502,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4438,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4119,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4377,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4358,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4339,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3350,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3984,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4317,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3691,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3299,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10527:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:29","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:29"},"nodeType":"YulFunctionCall","src":"125:12:29"},"nodeType":"YulExpressionStatement","src":"125:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:29"},"nodeType":"YulFunctionCall","src":"99:20:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:29"},"nodeType":"YulFunctionCall","src":"88:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:29"},"nodeType":"YulFunctionCall","src":"78:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:29"},"nodeType":"YulFunctionCall","src":"71:51:29"},"nodeType":"YulIf","src":"68:71:29"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:29","type":""}],"src":"14:131:29"},{"body":{"nodeType":"YulBlock","src":"219:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:29"},"nodeType":"YulFunctionCall","src":"267:12:29"},"nodeType":"YulExpressionStatement","src":"267:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:29"},"nodeType":"YulFunctionCall","src":"236:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:29"},"nodeType":"YulFunctionCall","src":"232:32:29"},"nodeType":"YulIf","src":"229:52:29"},{"nodeType":"YulVariableDeclaration","src":"290:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:29"},"nodeType":"YulFunctionCall","src":"303:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:29"},"nodeType":"YulFunctionCall","src":"335:30:29"},"nodeType":"YulExpressionStatement","src":"335:30:29"},{"nodeType":"YulAssignment","src":"374:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:29","type":""}],"src":"150:245:29"},{"body":{"nodeType":"YulBlock","src":"495:92:29","statements":[{"nodeType":"YulAssignment","src":"505:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:29"},"nodeType":"YulFunctionCall","src":"513:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:29"},"nodeType":"YulFunctionCall","src":"565:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:29"},"nodeType":"YulFunctionCall","src":"558:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:29"},"nodeType":"YulFunctionCall","src":"540:41:29"},"nodeType":"YulExpressionStatement","src":"540:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:29","type":""}],"src":"400:187:29"},{"body":{"nodeType":"YulBlock","src":"658:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:29"},"nodeType":"YulFunctionCall","src":"758:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:29"},"nodeType":"YulFunctionCall","src":"777:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:29"},"nodeType":"YulFunctionCall","src":"771:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:29"},"nodeType":"YulFunctionCall","src":"751:39:29"},"nodeType":"YulExpressionStatement","src":"751:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:29"},"nodeType":"YulFunctionCall","src":"695:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:29","statements":[{"nodeType":"YulAssignment","src":"711:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:29"},"nodeType":"YulFunctionCall","src":"716:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:29","statements":[]},"src":"687:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:29"},"nodeType":"YulFunctionCall","src":"816:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:29"},"nodeType":"YulFunctionCall","src":"809:27:29"},"nodeType":"YulExpressionStatement","src":"809:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:29","type":""}],"src":"592:250:29"},{"body":{"nodeType":"YulBlock","src":"897:221:29","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:29"},"nodeType":"YulFunctionCall","src":"921:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:29"},"nodeType":"YulFunctionCall","src":"942:19:29"},"nodeType":"YulExpressionStatement","src":"942:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:29"},"nodeType":"YulFunctionCall","src":"1005:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:29"},"nodeType":"YulFunctionCall","src":"1023:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:29"},"nodeType":"YulFunctionCall","src":"970:76:29"},"nodeType":"YulExpressionStatement","src":"970:76:29"},{"nodeType":"YulAssignment","src":"1055:57:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:29"},"nodeType":"YulFunctionCall","src":"1079:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:29"},"nodeType":"YulFunctionCall","src":"1096:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:29"},"nodeType":"YulFunctionCall","src":"1075:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:29"},"nodeType":"YulFunctionCall","src":"1066:39:29"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:29"},"nodeType":"YulFunctionCall","src":"1062:50:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:29"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:29","type":""}],"src":"847:271:29"},{"body":{"nodeType":"YulBlock","src":"1244:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:29"},"nodeType":"YulFunctionCall","src":"1254:21:29"},"nodeType":"YulExpressionStatement","src":"1254:21:29"},{"nodeType":"YulAssignment","src":"1284:53:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:29"},"nodeType":"YulFunctionCall","src":"1318:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:29"},"nodeType":"YulFunctionCall","src":"1292:45:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:29","type":""}],"src":"1123:220:29"},{"body":{"nodeType":"YulBlock","src":"1418:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:29"},"nodeType":"YulFunctionCall","src":"1466:12:29"},"nodeType":"YulExpressionStatement","src":"1466:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:29"},"nodeType":"YulFunctionCall","src":"1435:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:29"},"nodeType":"YulFunctionCall","src":"1431:32:29"},"nodeType":"YulIf","src":"1428:52:29"},{"nodeType":"YulAssignment","src":"1489:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:29"},"nodeType":"YulFunctionCall","src":"1499:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:29","type":""}],"src":"1348:180:29"},{"body":{"nodeType":"YulBlock","src":"1634:102:29","statements":[{"nodeType":"YulAssignment","src":"1644:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:29"},"nodeType":"YulFunctionCall","src":"1652:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:29"},"nodeType":"YulFunctionCall","src":"1713:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:29"},"nodeType":"YulFunctionCall","src":"1709:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:29"},"nodeType":"YulFunctionCall","src":"1697:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:29"},"nodeType":"YulFunctionCall","src":"1679:51:29"},"nodeType":"YulExpressionStatement","src":"1679:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:29","type":""}],"src":"1533:203:29"},{"body":{"nodeType":"YulBlock","src":"1790:124:29","statements":[{"nodeType":"YulAssignment","src":"1800:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:29"},"nodeType":"YulFunctionCall","src":"1809:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:29"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:29"},"nodeType":"YulFunctionCall","src":"1894:12:29"},"nodeType":"YulExpressionStatement","src":"1894:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:29"},"nodeType":"YulFunctionCall","src":"1873:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:29"},"nodeType":"YulFunctionCall","src":"1869:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:29"},"nodeType":"YulFunctionCall","src":"1858:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:29"},"nodeType":"YulFunctionCall","src":"1848:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:29"},"nodeType":"YulFunctionCall","src":"1841:50:29"},"nodeType":"YulIf","src":"1838:70:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:29","type":""}],"src":"1741:173:29"},{"body":{"nodeType":"YulBlock","src":"2006:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:29"},"nodeType":"YulFunctionCall","src":"2054:12:29"},"nodeType":"YulExpressionStatement","src":"2054:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:29"},"nodeType":"YulFunctionCall","src":"2023:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:29"},"nodeType":"YulFunctionCall","src":"2019:32:29"},"nodeType":"YulIf","src":"2016:52:29"},{"nodeType":"YulAssignment","src":"2077:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:29"},"nodeType":"YulFunctionCall","src":"2087:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:29"}]},{"nodeType":"YulAssignment","src":"2125:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:29"},"nodeType":"YulFunctionCall","src":"2148:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:29"},"nodeType":"YulFunctionCall","src":"2135:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:29","type":""}],"src":"1919:254:29"},{"body":{"nodeType":"YulBlock","src":"2282:224:29","statements":[{"body":{"nodeType":"YulBlock","src":"2328:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2340:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:29"},"nodeType":"YulFunctionCall","src":"2330:12:29"},"nodeType":"YulExpressionStatement","src":"2330:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2299:3:29"},"nodeType":"YulFunctionCall","src":"2299:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2295:3:29"},"nodeType":"YulFunctionCall","src":"2295:32:29"},"nodeType":"YulIf","src":"2292:52:29"},{"nodeType":"YulAssignment","src":"2353:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2363:18:29"},"nodeType":"YulFunctionCall","src":"2363:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2353:6:29"}]},{"nodeType":"YulAssignment","src":"2401:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:29"},"nodeType":"YulFunctionCall","src":"2430:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2411:18:29"},"nodeType":"YulFunctionCall","src":"2411:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2401:6:29"}]},{"nodeType":"YulAssignment","src":"2458:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2496:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:29"},"nodeType":"YulFunctionCall","src":"2481:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2468:12:29"},"nodeType":"YulFunctionCall","src":"2468:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2458:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2243:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2255:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2263:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2271:6:29","type":""}],"src":"2178:328:29"},{"body":{"nodeType":"YulBlock","src":"2581:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"2627:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2636:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2629:6:29"},"nodeType":"YulFunctionCall","src":"2629:12:29"},"nodeType":"YulExpressionStatement","src":"2629:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2602:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2598:3:29"},"nodeType":"YulFunctionCall","src":"2598:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2623:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2594:3:29"},"nodeType":"YulFunctionCall","src":"2594:32:29"},"nodeType":"YulIf","src":"2591:52:29"},{"nodeType":"YulAssignment","src":"2652:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2662:18:29"},"nodeType":"YulFunctionCall","src":"2662:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2652:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2547:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2558:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2570:6:29","type":""}],"src":"2511:186:29"},{"body":{"nodeType":"YulBlock","src":"2803:76:29","statements":[{"nodeType":"YulAssignment","src":"2813:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2825:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2836:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2821:3:29"},"nodeType":"YulFunctionCall","src":"2821:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2813:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2866:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:29"},"nodeType":"YulFunctionCall","src":"2848:25:29"},"nodeType":"YulExpressionStatement","src":"2848:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2772:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2783:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2794:4:29","type":""}],"src":"2702:177:29"},{"body":{"nodeType":"YulBlock","src":"2968:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"3014:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3016:6:29"},"nodeType":"YulFunctionCall","src":"3016:12:29"},"nodeType":"YulExpressionStatement","src":"3016:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2989:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2985:3:29"},"nodeType":"YulFunctionCall","src":"2985:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2981:3:29"},"nodeType":"YulFunctionCall","src":"2981:32:29"},"nodeType":"YulIf","src":"2978:52:29"},{"nodeType":"YulAssignment","src":"3039:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3049:18:29"},"nodeType":"YulFunctionCall","src":"3049:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3039:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3087:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:29"},"nodeType":"YulFunctionCall","src":"3113:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3100:12:29"},"nodeType":"YulFunctionCall","src":"3100:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3185:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3187:6:29"},"nodeType":"YulFunctionCall","src":"3187:12:29"},"nodeType":"YulExpressionStatement","src":"3187:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3154:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3168:6:29"},"nodeType":"YulFunctionCall","src":"3168:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3161:6:29"},"nodeType":"YulFunctionCall","src":"3161:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3151:2:29"},"nodeType":"YulFunctionCall","src":"3151:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3144:6:29"},"nodeType":"YulFunctionCall","src":"3144:40:29"},"nodeType":"YulIf","src":"3141:60:29"},{"nodeType":"YulAssignment","src":"3210:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3220:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3210:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2926:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2937:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2949:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2957:6:29","type":""}],"src":"2884:347:29"},{"body":{"nodeType":"YulBlock","src":"3268:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3285:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3297:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3288:3:29"},"nodeType":"YulFunctionCall","src":"3288:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:29"},"nodeType":"YulFunctionCall","src":"3278:31:29"},"nodeType":"YulExpressionStatement","src":"3278:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:29"},"nodeType":"YulFunctionCall","src":"3318:15:29"},"nodeType":"YulExpressionStatement","src":"3318:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3349:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3352:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:29"},"nodeType":"YulFunctionCall","src":"3342:15:29"},"nodeType":"YulExpressionStatement","src":"3342:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3236:127:29"},{"body":{"nodeType":"YulBlock","src":"3498:1008:29","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:29"},"nodeType":"YulFunctionCall","src":"3547:12:29"},"nodeType":"YulExpressionStatement","src":"3547:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3519:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3528:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3515:3:29"},"nodeType":"YulFunctionCall","src":"3515:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3540:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3511:3:29"},"nodeType":"YulFunctionCall","src":"3511:33:29"},"nodeType":"YulIf","src":"3508:53:29"},{"nodeType":"YulAssignment","src":"3570:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3580:18:29"},"nodeType":"YulFunctionCall","src":"3580:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3570:6:29"}]},{"nodeType":"YulAssignment","src":"3618:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:29"},"nodeType":"YulFunctionCall","src":"3647:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3628:18:29"},"nodeType":"YulFunctionCall","src":"3628:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3618:6:29"}]},{"nodeType":"YulAssignment","src":"3675:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3702:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3713:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:29"},"nodeType":"YulFunctionCall","src":"3698:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3685:12:29"},"nodeType":"YulFunctionCall","src":"3685:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3675:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3726:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3757:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3753:3:29"},"nodeType":"YulFunctionCall","src":"3753:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3740:12:29"},"nodeType":"YulFunctionCall","src":"3740:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3730:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3781:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3791:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3785:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3836:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3848:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3838:6:29"},"nodeType":"YulFunctionCall","src":"3838:12:29"},"nodeType":"YulExpressionStatement","src":"3838:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3824:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3832:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3821:2:29"},"nodeType":"YulFunctionCall","src":"3821:14:29"},"nodeType":"YulIf","src":"3818:34:29"},{"nodeType":"YulVariableDeclaration","src":"3861:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3886:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:29"},"nodeType":"YulFunctionCall","src":"3871:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3865:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3941:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3943:6:29"},"nodeType":"YulFunctionCall","src":"3943:12:29"},"nodeType":"YulExpressionStatement","src":"3943:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3920:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3916:3:29"},"nodeType":"YulFunctionCall","src":"3916:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3931:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3912:3:29"},"nodeType":"YulFunctionCall","src":"3912:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3905:6:29"},"nodeType":"YulFunctionCall","src":"3905:35:29"},"nodeType":"YulIf","src":"3902:55:29"},{"nodeType":"YulVariableDeclaration","src":"3966:26:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3989:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3976:12:29"},"nodeType":"YulFunctionCall","src":"3976:16:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3970:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4015:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4017:16:29"},"nodeType":"YulFunctionCall","src":"4017:18:29"},"nodeType":"YulExpressionStatement","src":"4017:18:29"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4007:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4011:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4004:2:29"},"nodeType":"YulFunctionCall","src":"4004:10:29"},"nodeType":"YulIf","src":"4001:36:29"},{"nodeType":"YulVariableDeclaration","src":"4046:17:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4060:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4056:3:29"},"nodeType":"YulFunctionCall","src":"4056:7:29"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4050:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4072:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4086:5:29"},"nodeType":"YulFunctionCall","src":"4086:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4076:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4104:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4126:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4150:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4154:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4146:3:29"},"nodeType":"YulFunctionCall","src":"4146:13:29"},{"name":"_4","nodeType":"YulIdentifier","src":"4161:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4142:3:29"},"nodeType":"YulFunctionCall","src":"4142:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:29"},"nodeType":"YulFunctionCall","src":"4138:31:29"},{"name":"_4","nodeType":"YulIdentifier","src":"4171:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4134:3:29"},"nodeType":"YulFunctionCall","src":"4134:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:29"},"nodeType":"YulFunctionCall","src":"4122:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4108:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4234:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4236:16:29"},"nodeType":"YulFunctionCall","src":"4236:18:29"},"nodeType":"YulExpressionStatement","src":"4236:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4193:10:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4205:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4190:2:29"},"nodeType":"YulFunctionCall","src":"4190:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4213:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4225:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4210:2:29"},"nodeType":"YulFunctionCall","src":"4210:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4187:2:29"},"nodeType":"YulFunctionCall","src":"4187:46:29"},"nodeType":"YulIf","src":"4184:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4276:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:29"},"nodeType":"YulFunctionCall","src":"4265:22:29"},"nodeType":"YulExpressionStatement","src":"4265:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4303:6:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4311:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:29"},"nodeType":"YulFunctionCall","src":"4296:18:29"},"nodeType":"YulExpressionStatement","src":"4296:18:29"},{"body":{"nodeType":"YulBlock","src":"4360:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4362:6:29"},"nodeType":"YulFunctionCall","src":"4362:12:29"},"nodeType":"YulExpressionStatement","src":"4362:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4337:2:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4341:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:29"},"nodeType":"YulFunctionCall","src":"4333:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:29"},"nodeType":"YulFunctionCall","src":"4329:20:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4351:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4326:2:29"},"nodeType":"YulFunctionCall","src":"4326:33:29"},"nodeType":"YulIf","src":"4323:53:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4402:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4398:3:29"},"nodeType":"YulFunctionCall","src":"4398:15:29"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4419:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:29"},"nodeType":"YulFunctionCall","src":"4415:11:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4428:2:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4385:12:29"},"nodeType":"YulFunctionCall","src":"4385:46:29"},"nodeType":"YulExpressionStatement","src":"4385:46:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4455:6:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4463:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:29"},"nodeType":"YulFunctionCall","src":"4451:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"4468:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:29"},"nodeType":"YulFunctionCall","src":"4447:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:29"},"nodeType":"YulFunctionCall","src":"4440:35:29"},"nodeType":"YulExpressionStatement","src":"4440:35:29"},{"nodeType":"YulAssignment","src":"4484:16:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4494:6:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4484:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3440:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3451:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3463:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3471:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3479:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3487:6:29","type":""}],"src":"3368:1138:29"},{"body":{"nodeType":"YulBlock","src":"4598:173:29","statements":[{"body":{"nodeType":"YulBlock","src":"4644:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4653:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4656:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4646:6:29"},"nodeType":"YulFunctionCall","src":"4646:12:29"},"nodeType":"YulExpressionStatement","src":"4646:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4619:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4615:3:29"},"nodeType":"YulFunctionCall","src":"4615:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4611:3:29"},"nodeType":"YulFunctionCall","src":"4611:32:29"},"nodeType":"YulIf","src":"4608:52:29"},{"nodeType":"YulAssignment","src":"4669:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4679:18:29"},"nodeType":"YulFunctionCall","src":"4679:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4669:6:29"}]},{"nodeType":"YulAssignment","src":"4717:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:29"},"nodeType":"YulFunctionCall","src":"4746:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4727:18:29"},"nodeType":"YulFunctionCall","src":"4727:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4717:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4556:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4567:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4579:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4587:6:29","type":""}],"src":"4511:260:29"},{"body":{"nodeType":"YulBlock","src":"4831:325:29","statements":[{"nodeType":"YulAssignment","src":"4841:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4855:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4858:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4851:3:29"},"nodeType":"YulFunctionCall","src":"4851:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4841:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4872:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4902:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"4908:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4898:3:29"},"nodeType":"YulFunctionCall","src":"4898:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4876:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4949:31:29","statements":[{"nodeType":"YulAssignment","src":"4951:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4965:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4973:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4961:3:29"},"nodeType":"YulFunctionCall","src":"4961:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4951:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4929:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4922:6:29"},"nodeType":"YulFunctionCall","src":"4922:26:29"},"nodeType":"YulIf","src":"4919:61:29"},{"body":{"nodeType":"YulBlock","src":"5039:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5060:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5067:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5072:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5063:3:29"},"nodeType":"YulFunctionCall","src":"5063:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:29"},"nodeType":"YulFunctionCall","src":"5053:31:29"},"nodeType":"YulExpressionStatement","src":"5053:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5104:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5107:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5097:6:29"},"nodeType":"YulFunctionCall","src":"5097:15:29"},"nodeType":"YulExpressionStatement","src":"5097:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5135:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:29"},"nodeType":"YulFunctionCall","src":"5125:15:29"},"nodeType":"YulExpressionStatement","src":"5125:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4995:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5018:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5026:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5015:2:29"},"nodeType":"YulFunctionCall","src":"5015:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4992:2:29"},"nodeType":"YulFunctionCall","src":"4992:38:29"},"nodeType":"YulIf","src":"4989:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4811:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4820:6:29","type":""}],"src":"4776:380:29"},{"body":{"nodeType":"YulBlock","src":"5335:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5352:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5363:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5345:6:29"},"nodeType":"YulFunctionCall","src":"5345:21:29"},"nodeType":"YulExpressionStatement","src":"5345:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5382:3:29"},"nodeType":"YulFunctionCall","src":"5382:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5402:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5375:6:29"},"nodeType":"YulFunctionCall","src":"5375:30:29"},"nodeType":"YulExpressionStatement","src":"5375:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:29"},"nodeType":"YulFunctionCall","src":"5421:18:29"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5441:34:29","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:29"},"nodeType":"YulFunctionCall","src":"5414:62:29"},"nodeType":"YulExpressionStatement","src":"5414:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5496:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:29"},"nodeType":"YulFunctionCall","src":"5492:18:29"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5512:3:29","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5485:6:29"},"nodeType":"YulFunctionCall","src":"5485:31:29"},"nodeType":"YulExpressionStatement","src":"5485:31:29"},{"nodeType":"YulAssignment","src":"5525:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5548:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:29"},"nodeType":"YulFunctionCall","src":"5533:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5525:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5312:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5326:4:29","type":""}],"src":"5161:397:29"},{"body":{"nodeType":"YulBlock","src":"5737:251:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5765:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5747:6:29"},"nodeType":"YulFunctionCall","src":"5747:21:29"},"nodeType":"YulExpressionStatement","src":"5747:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:29"},"nodeType":"YulFunctionCall","src":"5784:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5804:2:29","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:29"},"nodeType":"YulFunctionCall","src":"5777:30:29"},"nodeType":"YulExpressionStatement","src":"5777:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5827:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5838:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5823:3:29"},"nodeType":"YulFunctionCall","src":"5823:18:29"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"5843:34:29","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5816:6:29"},"nodeType":"YulFunctionCall","src":"5816:62:29"},"nodeType":"YulExpressionStatement","src":"5816:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5909:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5894:3:29"},"nodeType":"YulFunctionCall","src":"5894:18:29"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"5914:31:29","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5887:6:29"},"nodeType":"YulFunctionCall","src":"5887:59:29"},"nodeType":"YulExpressionStatement","src":"5887:59:29"},{"nodeType":"YulAssignment","src":"5955:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5967:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5978:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5963:3:29"},"nodeType":"YulFunctionCall","src":"5963:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5955:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5714:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5728:4:29","type":""}],"src":"5563:425:29"},{"body":{"nodeType":"YulBlock","src":"6167:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6195:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6177:6:29"},"nodeType":"YulFunctionCall","src":"6177:21:29"},"nodeType":"YulExpressionStatement","src":"6177:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6218:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6229:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6214:3:29"},"nodeType":"YulFunctionCall","src":"6214:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6234:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6207:6:29"},"nodeType":"YulFunctionCall","src":"6207:30:29"},"nodeType":"YulExpressionStatement","src":"6207:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6257:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6268:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6253:3:29"},"nodeType":"YulFunctionCall","src":"6253:18:29"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"6273:34:29","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6246:6:29"},"nodeType":"YulFunctionCall","src":"6246:62:29"},"nodeType":"YulExpressionStatement","src":"6246:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6328:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:29"},"nodeType":"YulFunctionCall","src":"6324:18:29"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"6344:15:29","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6317:6:29"},"nodeType":"YulFunctionCall","src":"6317:43:29"},"nodeType":"YulExpressionStatement","src":"6317:43:29"},{"nodeType":"YulAssignment","src":"6369:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6392:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:29"},"nodeType":"YulFunctionCall","src":"6377:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6369:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6144:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6158:4:29","type":""}],"src":"5993:409:29"},{"body":{"nodeType":"YulBlock","src":"6581:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6591:6:29"},"nodeType":"YulFunctionCall","src":"6591:21:29"},"nodeType":"YulExpressionStatement","src":"6591:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6643:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6628:3:29"},"nodeType":"YulFunctionCall","src":"6628:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6648:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:29"},"nodeType":"YulFunctionCall","src":"6621:30:29"},"nodeType":"YulExpressionStatement","src":"6621:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6671:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6682:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6667:3:29"},"nodeType":"YulFunctionCall","src":"6667:18:29"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"6687:26:29","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:29"},"nodeType":"YulFunctionCall","src":"6660:54:29"},"nodeType":"YulExpressionStatement","src":"6660:54:29"},{"nodeType":"YulAssignment","src":"6723:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6735:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6746:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:29"},"nodeType":"YulFunctionCall","src":"6731:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6723:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6558:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6572:4:29","type":""}],"src":"6407:348:29"},{"body":{"nodeType":"YulBlock","src":"6934:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6951:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6962:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6944:6:29"},"nodeType":"YulFunctionCall","src":"6944:21:29"},"nodeType":"YulExpressionStatement","src":"6944:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6985:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6981:3:29"},"nodeType":"YulFunctionCall","src":"6981:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7001:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6974:6:29"},"nodeType":"YulFunctionCall","src":"6974:30:29"},"nodeType":"YulExpressionStatement","src":"6974:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7024:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7035:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7020:3:29"},"nodeType":"YulFunctionCall","src":"7020:18:29"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7040:34:29","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7013:6:29"},"nodeType":"YulFunctionCall","src":"7013:62:29"},"nodeType":"YulExpressionStatement","src":"7013:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7095:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7106:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7091:3:29"},"nodeType":"YulFunctionCall","src":"7091:18:29"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7111:11:29","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7084:6:29"},"nodeType":"YulFunctionCall","src":"7084:39:29"},"nodeType":"YulExpressionStatement","src":"7084:39:29"},{"nodeType":"YulAssignment","src":"7132:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7144:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7155:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:29"},"nodeType":"YulFunctionCall","src":"7140:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7132:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6911:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6925:4:29","type":""}],"src":"6760:405:29"},{"body":{"nodeType":"YulBlock","src":"7357:309:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7367:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7387:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7381:5:29"},"nodeType":"YulFunctionCall","src":"7381:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7371:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7442:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7450:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7438:3:29"},"nodeType":"YulFunctionCall","src":"7438:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7457:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7462:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7403:34:29"},"nodeType":"YulFunctionCall","src":"7403:66:29"},"nodeType":"YulExpressionStatement","src":"7403:66:29"},{"nodeType":"YulVariableDeclaration","src":"7478:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7495:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7500:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7491:3:29"},"nodeType":"YulFunctionCall","src":"7491:16:29"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"7482:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7516:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7538:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7532:5:29"},"nodeType":"YulFunctionCall","src":"7532:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7520:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7593:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7601:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:29"},"nodeType":"YulFunctionCall","src":"7589:17:29"},{"name":"end_1","nodeType":"YulIdentifier","src":"7608:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7615:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7554:34:29"},"nodeType":"YulFunctionCall","src":"7554:70:29"},"nodeType":"YulExpressionStatement","src":"7554:70:29"},{"nodeType":"YulAssignment","src":"7633:27:29","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"7644:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7651:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:29"},"nodeType":"YulFunctionCall","src":"7640:20:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7633:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7325:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7330:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7338:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7349:3:29","type":""}],"src":"7170:496:29"},{"body":{"nodeType":"YulBlock","src":"7845:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7862:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7873:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7855:6:29"},"nodeType":"YulFunctionCall","src":"7855:21:29"},"nodeType":"YulExpressionStatement","src":"7855:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7896:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7907:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7892:3:29"},"nodeType":"YulFunctionCall","src":"7892:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7912:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7885:6:29"},"nodeType":"YulFunctionCall","src":"7885:30:29"},"nodeType":"YulExpressionStatement","src":"7885:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7935:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7946:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7931:3:29"},"nodeType":"YulFunctionCall","src":"7931:18:29"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"7951:34:29","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7924:6:29"},"nodeType":"YulFunctionCall","src":"7924:62:29"},"nodeType":"YulExpressionStatement","src":"7924:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:29"},"nodeType":"YulFunctionCall","src":"8002:18:29"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"8022:7:29","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7995:6:29"},"nodeType":"YulFunctionCall","src":"7995:35:29"},"nodeType":"YulExpressionStatement","src":"7995:35:29"},{"nodeType":"YulAssignment","src":"8039:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8051:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8062:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8047:3:29"},"nodeType":"YulFunctionCall","src":"8047:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8039:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7822:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7836:4:29","type":""}],"src":"7671:401:29"},{"body":{"nodeType":"YulBlock","src":"8251:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8268:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8279:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:29"},"nodeType":"YulFunctionCall","src":"8261:21:29"},"nodeType":"YulExpressionStatement","src":"8261:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8302:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8313:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8298:3:29"},"nodeType":"YulFunctionCall","src":"8298:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:29"},"nodeType":"YulFunctionCall","src":"8291:30:29"},"nodeType":"YulExpressionStatement","src":"8291:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8341:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8352:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:29"},"nodeType":"YulFunctionCall","src":"8337:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8357:34:29","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8330:6:29"},"nodeType":"YulFunctionCall","src":"8330:62:29"},"nodeType":"YulExpressionStatement","src":"8330:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8412:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8423:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8408:3:29"},"nodeType":"YulFunctionCall","src":"8408:18:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8428:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8401:6:29"},"nodeType":"YulFunctionCall","src":"8401:34:29"},"nodeType":"YulExpressionStatement","src":"8401:34:29"},{"nodeType":"YulAssignment","src":"8444:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8456:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8467:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8452:3:29"},"nodeType":"YulFunctionCall","src":"8452:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8444:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8228:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8242:4:29","type":""}],"src":"8077:400:29"},{"body":{"nodeType":"YulBlock","src":"8656:175:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8673:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8684:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8666:6:29"},"nodeType":"YulFunctionCall","src":"8666:21:29"},"nodeType":"YulExpressionStatement","src":"8666:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8718:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8703:3:29"},"nodeType":"YulFunctionCall","src":"8703:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8723:2:29","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8696:6:29"},"nodeType":"YulFunctionCall","src":"8696:30:29"},"nodeType":"YulExpressionStatement","src":"8696:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8757:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8742:3:29"},"nodeType":"YulFunctionCall","src":"8742:18:29"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"8762:27:29","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8735:6:29"},"nodeType":"YulFunctionCall","src":"8735:55:29"},"nodeType":"YulExpressionStatement","src":"8735:55:29"},{"nodeType":"YulAssignment","src":"8799:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8811:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8822:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:29"},"nodeType":"YulFunctionCall","src":"8807:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8799:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8633:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8647:4:29","type":""}],"src":"8482:349:29"},{"body":{"nodeType":"YulBlock","src":"9010:240:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9038:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9020:6:29"},"nodeType":"YulFunctionCall","src":"9020:21:29"},"nodeType":"YulExpressionStatement","src":"9020:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9061:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9072:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9057:3:29"},"nodeType":"YulFunctionCall","src":"9057:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"9077:2:29","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9050:6:29"},"nodeType":"YulFunctionCall","src":"9050:30:29"},"nodeType":"YulExpressionStatement","src":"9050:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9100:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9111:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:29"},"nodeType":"YulFunctionCall","src":"9096:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"9116:34:29","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9089:6:29"},"nodeType":"YulFunctionCall","src":"9089:62:29"},"nodeType":"YulExpressionStatement","src":"9089:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9182:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9167:3:29"},"nodeType":"YulFunctionCall","src":"9167:18:29"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"9187:20:29","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9160:6:29"},"nodeType":"YulFunctionCall","src":"9160:48:29"},"nodeType":"YulExpressionStatement","src":"9160:48:29"},{"nodeType":"YulAssignment","src":"9217:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9229:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9240:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9225:3:29"},"nodeType":"YulFunctionCall","src":"9225:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9217:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8987:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9001:4:29","type":""}],"src":"8836:414:29"},{"body":{"nodeType":"YulBlock","src":"9287:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9304:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9311:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9316:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9307:3:29"},"nodeType":"YulFunctionCall","src":"9307:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9297:6:29"},"nodeType":"YulFunctionCall","src":"9297:31:29"},"nodeType":"YulExpressionStatement","src":"9297:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9344:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9347:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9337:6:29"},"nodeType":"YulFunctionCall","src":"9337:15:29"},"nodeType":"YulExpressionStatement","src":"9337:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9368:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9371:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9361:6:29"},"nodeType":"YulFunctionCall","src":"9361:15:29"},"nodeType":"YulExpressionStatement","src":"9361:15:29"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9255:127:29"},{"body":{"nodeType":"YulBlock","src":"9419:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9436:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9443:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9448:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9439:3:29"},"nodeType":"YulFunctionCall","src":"9439:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9429:6:29"},"nodeType":"YulFunctionCall","src":"9429:31:29"},"nodeType":"YulExpressionStatement","src":"9429:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9476:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9479:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9469:6:29"},"nodeType":"YulFunctionCall","src":"9469:15:29"},"nodeType":"YulExpressionStatement","src":"9469:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9500:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9503:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9493:6:29"},"nodeType":"YulFunctionCall","src":"9493:15:29"},"nodeType":"YulExpressionStatement","src":"9493:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9387:127:29"},{"body":{"nodeType":"YulBlock","src":"9568:79:29","statements":[{"nodeType":"YulAssignment","src":"9578:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9590:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"9593:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9586:3:29"},"nodeType":"YulFunctionCall","src":"9586:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9578:4:29"}]},{"body":{"nodeType":"YulBlock","src":"9619:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9621:16:29"},"nodeType":"YulFunctionCall","src":"9621:18:29"},"nodeType":"YulExpressionStatement","src":"9621:18:29"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9610:4:29"},{"name":"x","nodeType":"YulIdentifier","src":"9616:1:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9607:2:29"},"nodeType":"YulFunctionCall","src":"9607:11:29"},"nodeType":"YulIf","src":"9604:37:29"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9550:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"9553:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9559:4:29","type":""}],"src":"9519:128:29"},{"body":{"nodeType":"YulBlock","src":"9700:77:29","statements":[{"nodeType":"YulAssignment","src":"9710:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9721:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"9724:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9717:3:29"},"nodeType":"YulFunctionCall","src":"9717:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9710:3:29"}]},{"body":{"nodeType":"YulBlock","src":"9749:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9751:16:29"},"nodeType":"YulFunctionCall","src":"9751:18:29"},"nodeType":"YulExpressionStatement","src":"9751:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9741:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"9744:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9738:2:29"},"nodeType":"YulFunctionCall","src":"9738:10:29"},"nodeType":"YulIf","src":"9735:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9683:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"9686:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9692:3:29","type":""}],"src":"9652:125:29"},{"body":{"nodeType":"YulBlock","src":"9985:286:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9995:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10013:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10018:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10009:3:29"},"nodeType":"YulFunctionCall","src":"10009:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"10022:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10005:3:29"},"nodeType":"YulFunctionCall","src":"10005:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9999:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10040:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10055:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10063:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10051:3:29"},"nodeType":"YulFunctionCall","src":"10051:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10033:6:29"},"nodeType":"YulFunctionCall","src":"10033:34:29"},"nodeType":"YulExpressionStatement","src":"10033:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10087:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10098:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10083:3:29"},"nodeType":"YulFunctionCall","src":"10083:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10107:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10115:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10103:3:29"},"nodeType":"YulFunctionCall","src":"10103:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10076:6:29"},"nodeType":"YulFunctionCall","src":"10076:43:29"},"nodeType":"YulExpressionStatement","src":"10076:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10139:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10150:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10135:3:29"},"nodeType":"YulFunctionCall","src":"10135:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"10155:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10128:6:29"},"nodeType":"YulFunctionCall","src":"10128:34:29"},"nodeType":"YulExpressionStatement","src":"10128:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10182:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10193:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:29"},"nodeType":"YulFunctionCall","src":"10178:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"10198:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10171:6:29"},"nodeType":"YulFunctionCall","src":"10171:31:29"},"nodeType":"YulExpressionStatement","src":"10171:31:29"},{"nodeType":"YulAssignment","src":"10211:54:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10237:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10249:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10260:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10245:3:29"},"nodeType":"YulFunctionCall","src":"10245:19:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10219:17:29"},"nodeType":"YulFunctionCall","src":"10219:46:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10211:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9930:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9941:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9949:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9957:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9965:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9976:4:29","type":""}],"src":"9782:489:29"},{"body":{"nodeType":"YulBlock","src":"10356:169:29","statements":[{"body":{"nodeType":"YulBlock","src":"10402:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10411:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10414:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10404:6:29"},"nodeType":"YulFunctionCall","src":"10404:12:29"},"nodeType":"YulExpressionStatement","src":"10404:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10377:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10386:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10373:3:29"},"nodeType":"YulFunctionCall","src":"10373:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10398:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10369:3:29"},"nodeType":"YulFunctionCall","src":"10369:32:29"},"nodeType":"YulIf","src":"10366:52:29"},{"nodeType":"YulVariableDeclaration","src":"10427:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10446:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10440:5:29"},"nodeType":"YulFunctionCall","src":"10440:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10431:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10489:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"10465:23:29"},"nodeType":"YulFunctionCall","src":"10465:30:29"},"nodeType":"YulExpressionStatement","src":"10465:30:29"},{"nodeType":"YulAssignment","src":"10504:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"10514:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10504:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10322:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10333:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10345:6:29","type":""}],"src":"10276:249:29"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610cf9565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d66565b61012461011f366004610d79565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dae565b61030a565b005b61014f61015f366004610dd8565b610424565b61014f610172366004610dd8565b610455565b610124610185366004610d79565b610470565b61019d610198366004610e14565b6104d0565b6040519081526020016100f3565b610104610556565b61014f6101c1366004610e2f565b610565565b61014f6101d4366004610e81565b610574565b6101046101e7366004610d79565b6105ac565b6100e76101fa366004610f5d565b610620565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610f90565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610f90565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b60006102ee8261064e565b506000908152600460205260409020546001600160a01b031690565b600061031582610470565b9050806001600160a01b0316836001600160a01b0316036103875760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103a357506103a38133610620565b6104155760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161037e565b61041f83836106b0565b505050565b61042e338261071e565b61044a5760405162461bcd60e51b815260040161037e90610fca565b61041f83838361077d565b61041f83838360405180602001604052806000815250610574565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b60006001600160a01b03821661053a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161037e565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610f90565b6105703383836108ee565b5050565b61057e338361071e565b61059a5760405162461bcd60e51b815260040161037e90610fca565b6105a6848484846109bc565b50505050565b60606105b78261064e565b60006105ce60408051602081019091526000815290565b905060008151116105ee5760405180602001604052806000815250610619565b806105f8846109ef565b604051602001610609929190611017565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166106ad5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e582610470565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072a83610470565b9050806001600160a01b0316846001600160a01b0316148061075157506107518185610620565b806107755750836001600160a01b031661076a846102e3565b6001600160a01b0316145b949350505050565b826001600160a01b031661079082610470565b6001600160a01b0316146107b65760405162461bcd60e51b815260040161037e90611046565b6001600160a01b0382166108185760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161037e565b6108258383836001610a82565b826001600160a01b031661083882610470565b6001600160a01b03161461085e5760405162461bcd60e51b815260040161037e90611046565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361094f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161037e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109c784848461077d565b6109d384848484610b0a565b6105a65760405162461bcd60e51b815260040161037e9061108b565b606060006109fc83610c0b565b600101905060008167ffffffffffffffff811115610a1c57610a1c610e6b565b6040519080825280601f01601f191660200182016040528015610a46576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5057509392505050565b60018111156105a6576001600160a01b03841615610ac8576001600160a01b03841660009081526003602052604081208054839290610ac29084906110f3565b90915550505b6001600160a01b038316156105a6576001600160a01b03831660009081526003602052604081208054839290610aff908490611106565b909155505050505050565b60006001600160a01b0384163b15610c0057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b4e903390899088908890600401611119565b6020604051808303816000875af1925050508015610b89575060408051601f3d908101601f19168201909252610b8691810190611156565b60015b610be6573d808015610bb7576040519150601f19603f3d011682016040523d82523d6000602084013e610bbc565b606091505b508051600003610bde5760405162461bcd60e51b815260040161037e9061108b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610775565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c76576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9457662386f26fc10000830492506010015b6305f5e1008310610cac576305f5e100830492506008015b6127108310610cc057612710830492506004015b60648310610cd2576064830492506002015b600a831061024b5760010192915050565b6001600160e01b0319811681146106ad57600080fd5b600060208284031215610d0b57600080fd5b813561061981610ce3565b60005b83811015610d31578181015183820152602001610d19565b50506000910152565b60008151808452610d52816020860160208601610d16565b601f01601f19169290920160200192915050565b6020815260006106196020830184610d3a565b600060208284031215610d8b57600080fd5b5035919050565b80356001600160a01b0381168114610da957600080fd5b919050565b60008060408385031215610dc157600080fd5b610dca83610d92565b946020939093013593505050565b600080600060608486031215610ded57600080fd5b610df684610d92565b9250610e0460208501610d92565b9150604084013590509250925092565b600060208284031215610e2657600080fd5b61061982610d92565b60008060408385031215610e4257600080fd5b610e4b83610d92565b915060208301358015158114610e6057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e9757600080fd5b610ea085610d92565b9350610eae60208601610d92565b925060408501359150606085013567ffffffffffffffff80821115610ed257600080fd5b818701915087601f830112610ee657600080fd5b813581811115610ef857610ef8610e6b565b604051601f8201601f19908116603f01168101908382118183101715610f2057610f20610e6b565b816040528281528a6020848701011115610f3957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f7057600080fd5b610f7983610d92565b9150610f8760208401610d92565b90509250929050565b600181811c90821680610fa457607f821691505b602082108103610fc457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611029818460208801610d16565b83519083019061103d818360208801610d16565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b6110dd565b8082018082111561024b5761024b6110dd565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114c90830184610d3a565b9695505050505050565b60006020828403121561116857600080fd5b815161061981610ce356fea2646970667358221220eb86eaeba11efee7e0bb3e8929a6d489b625e7f50f4d3a5c408de67d356b44a264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP3 PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH2 0x3A3 DUP2 CALLER PUSH2 0x620 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x42E CALLER DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x570 CALLER DUP4 DUP4 PUSH2 0x8EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57E CALLER DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B7 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x619 JUMP JUMPDEST DUP1 PUSH2 0x5F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x609 SWAP3 SWAP2 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E5 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72A DUP4 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH2 0x751 DUP2 DUP6 PUSH2 0x620 JUMP JUMPDEST DUP1 PUSH2 0x775 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x790 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x825 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x838 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9C7 DUP5 DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9D3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9FC DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA50 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAC2 SWAP1 DUP5 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB4E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB89 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB86 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBE6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x775 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC4A JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC76 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC94 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCAC JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCC0 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCD2 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x24B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD19 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD52 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x619 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCA DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF6 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH2 0xE04 PUSH1 0x20 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA0 DUP6 PUSH2 0xD92 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAE PUSH1 0x20 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF8 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF20 PUSH2 0xE6B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF79 DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF87 PUSH1 0x20 DUP5 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1029 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x103D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x114C SWAP1 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP7 0xEA 0xEB LOG1 0x1E INVALID 0xE7 0xE0 0xBB RETURNDATACOPY DUP10 0x29 0xA6 0xD4 DUP10 0xB6 0x25 0xE7 CREATE2 0xF 0x4D GASPRICE 0x5C BLOCKHASH DUP14 0xE6 PUSH30 0x356B44A264736F6C63430008110033000000000000000000000000000000 ","sourceMap":"628:16063:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:29;;558:22;540:41;;528:2;513:18;1570:300:6;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:29;;;1679:51;;1667:2;1652:18;3935:167:6;1533:203:29;3468:406:6;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:29;;;2836:2;2821:18;1929:204:6;2702:177:29;2633:102:6;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:6;;-1:-1:-1;;;1707:40:6;;:104;;-1:-1:-1;;;;;;;1763:48:6;;-1:-1:-1;;;1763:48:6;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1827:36:6;1688:175;1570:300;-1:-1:-1;;1570:300:6:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:6;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:6;:2;-1:-1:-1;;;;;3605:11:6;;3597:57;;;;-1:-1:-1;;;3597:57:6;;5363:2:29;3597:57:6;;;5345:21:29;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:29;;;5485:31;5533:19;;3597:57:6;;;;;;;;;719:10:11;-1:-1:-1;;;;;3686:21:6;;;;:62;;-1:-1:-1;3711:37:6;3728:5;719:10:11;4388:162:6;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:6;;5765:2:29;3665:170:6;;;5747:21:29;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:6;5563:425:29;3665:170:6;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:11;4804:7:6;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:6;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;;2324:56;;;;-1:-1:-1;;;2324:56:6;;6609:2:29;2324:56:6;;;6591:21:29;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:29;;;6660:54;6731:18;;2324:56:6;6407:348:29;1929:204:6;2001:7;-1:-1:-1;;;;;2028:19:6;;2020:73;;;;-1:-1:-1;;;2020:73:6;;6962:2:29;2020:73:6;;;6944:21:29;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:29;;;7084:39;7140:19;;2020:73:6;6760:405:29;2020:73:6;-1:-1:-1;;;;;;2110:16:6;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:11;4296:8:6;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:11;5352:7:6;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:6;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:6;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:6:o;4388:162::-;-1:-1:-1;;;;;4508:25:6;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;13313:53;;;;-1:-1:-1;;;13313:53:6;;6609:2:29;13313:53:6;;;6591:21:29;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:29;;;6660:54;6731:18;;13313:53:6;6407:348:29;13313:53:6;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:6;-1:-1:-1;;;;;12646:29:6;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:6;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:6;:7;-1:-1:-1;;;;;7570:16:6;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:6;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:6;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:6:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:6;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:6;;11346:81;;;;-1:-1:-1;;;11346:81:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:6;;11437:65;;;;-1:-1:-1;;;11437:65:6;;8279:2:29;11437:65:6;;;8261:21:29;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:29;;;8401:34;8452:19;;11437:65:6;8077:400:29;11437:65:6;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;-1:-1:-1;;;;;11655:31:6;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:6;;11647:81;;;;-1:-1:-1;;;11647:81:6;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:6;;;;;;-1:-1:-1;;;;;12265:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:6;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:6;:5;-1:-1:-1;;;;;12990:17:6;;12982:55;;;;-1:-1:-1;;;12982:55:6;;8684:2:29;12982:55:6;;;8666:21:29;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;12982:55:6;8482:349:29;12982:55:6;-1:-1:-1;;;;;13047:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:6;;;;;;;;;;13108:41;;540::29;;;13108::6;;513:18:29;13108:41:6;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:6;;;;;;;:::i;447:696:12:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:12;-1:-1:-1;604:41:12;-1:-1:-1;765:28:12;;;781:2;765:28;820:280;-1:-1:-1;;851:5:12;-1:-1:-1;;;985:2:12;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:12;820:280;1064:21;-1:-1:-1;1120:6:12;447:696;-1:-1:-1;;;447:696:12:o;15472:396:6:-;15656:1;15644:9;:13;15640:222;;;-1:-1:-1;;;;;15677:18:6;;;15673:85;;-1:-1:-1;;;;;15715:15:6;;;;;;:9;:15;;;;;:28;;15734:9;;15715:15;:28;;15734:9;;15715:28;:::i;:::-;;;;-1:-1:-1;;15673:85:6;-1:-1:-1;;;;;15775:16:6;;;15771:81;;-1:-1:-1;;;;;15811:13:6;;;;;;:9;:13;;;;;:26;;15828:9;;15811:13;:26;;15828:9;;15811:26;:::i;:::-;;;;-1:-1:-1;;15472:396:6;;;;:::o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:6;;1702:19:10;:23;14090:660:6;;14129:71;;-1:-1:-1;;;14129:71:6;;-1:-1:-1;;;;;14129:36:6;;;;;:71;;719:10:11;;14180:4:6;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:6;;;;;;;;-1:-1:-1;;14129:71:6;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:6;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:6;-1:-1:-1;;;14250:51:6;;-1:-1:-1;14243:58:6;;14090:660;-1:-1:-1;14735:4:6;13925:831;;;;;;:::o;9846:916:15:-;9899:7;;-1:-1:-1;;;9974:17:15;;9970:103;;-1:-1:-1;;;10011:17:15;;;-1:-1:-1;10056:2:15;10046:12;9970:103;10099:8;10090:5;:17;10086:103;;10136:8;10127:17;;;-1:-1:-1;10172:2:15;10162:12;10086:103;10215:8;10206:5;:17;10202:103;;10252:8;10243:17;;;-1:-1:-1;10288:2:15;10278:12;10202:103;10331:7;10322:5;:16;10318:100;;10367:7;10358:16;;;-1:-1:-1;10402:1:15;10392:11;10318:100;10444:7;10435:5;:16;10431:100;;10480:7;10471:16;;;-1:-1:-1;10515:1:15;10505:11;10431:100;10557:7;10548:5;:16;10544:100;;10593:7;10584:16;;;-1:-1:-1;10628:1:15;10618:11;10544:100;10670:7;10661:5;:16;10657:66;;10707:1;10697:11;10749:6;9846:916;-1:-1:-1;;9846:916:15:o;14:131:29:-;-1:-1:-1;;;;;;88:32:29;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:29;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:29;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:29:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:29;;1348:180;-1:-1:-1;1348:180:29:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:29;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:29:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:29;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:29;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:29:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:29;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:29;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:127::-;9448:10;9443:3;9439:20;9436:1;9429:31;9479:4;9476:1;9469:15;9503:4;9500:1;9493:15;9519:128;9586:9;;;9607:11;;;9604:37;;;9621:18;;:::i;9652:125::-;9717:9;;;9738:10;;;9735:36;;;9751:18;;:::i;9782:489::-;-1:-1:-1;;;;;10051:15:29;;;10033:34;;10103:15;;10098:2;10083:18;;10076:43;10150:2;10135:18;;10128:34;;;10198:3;10193:2;10178:18;;10171:31;;;9976:4;;10219:46;;10245:19;;10237:6;10219:46;:::i;:::-;10211:54;9782:489;-1:-1:-1;;;;;;9782:489:29:o;10276:249::-;10345:6;10398:2;10386:9;10377:7;10373:23;10369:32;10366:52;;;10414:1;10411;10404:12;10366:52;10446:9;10440:16;10465:30;10489:5;10465:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"904200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2634","getApproved(uint256)":"4769","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2561","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26705","supportsInterface(bytes4)":"511","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256,uint256)":"infinite","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"24513","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"infinite","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 /* firstTokenId */,\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n}\\n\",\"keccak256\":\"0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1273,"contract":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1275,"contract":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1279,"contract":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1283,"contract":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1287,"contract":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1293,"contract":"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122073517eee2271c46595b481bf7da854e7e28f6f3bb16fb1596343c52a557a9eff64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x517EEE2271C46595B481BF7DA854E7E28F6F3BB1 PUSH16 0xB1596343C52A557A9EFF64736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9170:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9170:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122073517eee2271c46595b481bf7da854e7e28f6f3bb16fb1596343c52a557a9eff64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x517EEE2271C46595B481BF7DA854E7E28F6F3BB1 PUSH16 0xB1596343C52A557A9EFF64736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9170:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000c76c1ce40476e7fe7c7f7d28d47fcfc85c7734cc5849104a21ba5a95e1990964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xC7 PUSH13 0x1CE40476E7FE7C7F7D28D47FCF 0xC8 0x5C PUSH24 0x34CC5849104A21BA5A95E1990964736F6C63430008110033 ","sourceMap":"220:2559:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000c76c1ce40476e7fe7c7f7d28d47fcfc85c7734cc5849104a21ba5a95e1990964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xC7 PUSH13 0x1CE40476E7FE7C7F7D28D47FCF 0xC8 0x5C PUSH24 0x34CC5849104A21BA5A95E1990964736F6C63430008110033 ","sourceMap":"220:2559:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055d184ba96171813e6649c0b905afbe14e85932dd0ff4d62737f2843b72dbec464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD1 DUP5 0xBA SWAP7 OR XOR SGT 0xE6 PUSH5 0x9C0B905AFB 0xE1 0x4E DUP6 SWAP4 0x2D 0xD0 SELFDESTRUCT 0x4D PUSH3 0x737F28 NUMBER 0xB7 0x2D 0xBE 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12289:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12289:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055d184ba96171813e6649c0b905afbe14e85932dd0ff4d62737f2843b72dbec464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD1 DUP5 0xBA SWAP7 OR XOR SGT 0xE6 PUSH5 0x9C0B905AFB 0xE1 0x4E DUP6 SWAP4 0x2D 0xD0 SELFDESTRUCT 0x4D PUSH3 0x737F28 NUMBER 0xB7 0x2D 0xBE 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12289:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220150032a27f1f31848f5e8a9c8f77ee7b6cd561e90d3f4e9608d62bf11fa72e0264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO STOP ORIGIN LOG2 PUSH32 0x1F31848F5E8A9C8F77EE7B6CD561E90D3F4E9608D62BF11FA72E0264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220150032a27f1f31848f5e8a9c8f77ee7b6cd561e90d3f4e9608d62bf11fa72e0264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO STOP ORIGIN LOG2 PUSH32 0x1F31848F5E8A9C8F77EE7B6CD561E90D3F4E9608D62BF11FA72E0264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/core/AccessController.sol":{"AccessController":{"abi":[{"inputs":[{"internalType":"address","name":"maintainer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAINTAINER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3968":{"entryPoint":null,"id":3968,"parameterSlots":1,"returnSlots":0},"@_grantRole_283":{"entryPoint":120,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@_setupRole_223":{"entryPoint":106,"id":223,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":278,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:29","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:29"},"nodeType":"YulFunctionCall","src":"143:12:29"},"nodeType":"YulExpressionStatement","src":"143:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:29"},"nodeType":"YulFunctionCall","src":"112:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:29"},"nodeType":"YulFunctionCall","src":"108:32:29"},"nodeType":"YulIf","src":"105:52:29"},{"nodeType":"YulVariableDeclaration","src":"166:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:29"},"nodeType":"YulFunctionCall","src":"179:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:29"},"nodeType":"YulFunctionCall","src":"260:12:29"},"nodeType":"YulExpressionStatement","src":"260:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:29"},"nodeType":"YulFunctionCall","src":"239:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:29"},"nodeType":"YulFunctionCall","src":"235:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:29"},"nodeType":"YulFunctionCall","src":"224:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:29"},"nodeType":"YulFunctionCall","src":"214:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:29"},"nodeType":"YulFunctionCall","src":"207:50:29"},"nodeType":"YulIf","src":"204:70:29"},{"nodeType":"YulAssignment","src":"283:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:29"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:29","type":""}],"src":"14:290:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516108f23803806108f283398101604081905261002f91610116565b61003a60003361006a565b6100647f339759585899103d2ace64958e37e18ccb0504652c81d4a1b8aa80fe2126ab958261006a565b50610146565b6100748282610078565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610074576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100d23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006020828403121561012857600080fd5b81516001600160a01b038116811461013f57600080fd5b9392505050565b61079d806101556000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806391d148541161005b57806391d148541461010e578063a217fddf14610121578063d547741f14610129578063f87422541461013c57600080fd5b806301ffc9a71461008d578063248a9ca3146100b55780632f2ff15d146100e657806336568abe146100fb575b600080fd5b6100a061009b366004610599565b610163565b60405190151581526020015b60405180910390f35b6100d86100c33660046105c3565b60009081526020819052604090206001015490565b6040519081526020016100ac565b6100f96100f43660046105dc565b61019a565b005b6100f96101093660046105dc565b6101c4565b6100a061011c3660046105dc565b610247565b6100d8600081565b6100f96101373660046105dc565b610270565b6100d87f339759585899103d2ace64958e37e18ccb0504652c81d4a1b8aa80fe2126ab9581565b60006001600160e01b03198216637965db0b60e01b148061019457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101b581610295565b6101bf83836102a2565b505050565b6001600160a01b03811633146102395760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102438282610326565b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461028b81610295565b6101bf8383610326565b61029f813361038b565b50565b6102ac8282610247565b610243576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556102e23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6103308282610247565b15610243576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6103958282610247565b610243576103a2816103e4565b6103ad8360206103f6565b6040516020016103be92919061063c565b60408051601f198184030181529082905262461bcd60e51b8252610230916004016106b1565b60606101946001600160a01b03831660145b606060006104058360026106fa565b610410906002610711565b67ffffffffffffffff81111561042857610428610724565b6040519080825280601f01601f191660200182016040528015610452576020820181803683370190505b509050600360fc1b8160008151811061046d5761046d61073a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061049c5761049c61073a565b60200101906001600160f81b031916908160001a90535060006104c08460026106fa565b6104cb906001610711565b90505b6001811115610543576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104ff576104ff61073a565b1a60f81b8282815181106105155761051561073a565b60200101906001600160f81b031916908160001a90535060049490941c9361053c81610750565b90506104ce565b5083156105925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610230565b9392505050565b6000602082840312156105ab57600080fd5b81356001600160e01b03198116811461059257600080fd5b6000602082840312156105d557600080fd5b5035919050565b600080604083850312156105ef57600080fd5b8235915060208301356001600160a01b038116811461060d57600080fd5b809150509250929050565b60005b8381101561063357818101518382015260200161061b565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610674816017850160208801610618565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516106a5816028840160208801610618565b01602801949350505050565b60208152600082518060208401526106d0816040850160208701610618565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610194576101946106e4565b80820180821115610194576101946106e4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161075f5761075f6106e4565b50600019019056fea2646970667358221220a2ddb009a4ff281130eeec45ff2b91aa251ef6a5fe49553db4d44e28c5dce8ac64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8F2 CODESIZE SUB DUP1 PUSH2 0x8F2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x116 JUMP JUMPDEST PUSH2 0x3A PUSH1 0x0 CALLER PUSH2 0x6A JUMP JUMPDEST PUSH2 0x64 PUSH32 0x339759585899103D2ACE64958E37E18CCB0504652C81D4A1B8AA80FE2126AB95 DUP3 PUSH2 0x6A JUMP JUMPDEST POP PUSH2 0x146 JUMP JUMPDEST PUSH2 0x74 DUP3 DUP3 PUSH2 0x78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x74 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xD2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x79D DUP1 PUSH2 0x155 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xF8742254 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xD8 PUSH32 0x339759585899103D2ACE64958E37E18CCB0504652C81D4A1B8AA80FE2126AB95 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x194 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1B5 DUP2 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x1BF DUP4 DUP4 PUSH2 0x2A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x243 DUP3 DUP3 PUSH2 0x326 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x28B DUP2 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x1BF DUP4 DUP4 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x29F DUP2 CALLER PUSH2 0x38B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC DUP3 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x243 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2E2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x330 DUP3 DUP3 PUSH2 0x247 JUMP JUMPDEST ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x395 DUP3 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x243 JUMPI PUSH2 0x3A2 DUP2 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x3AD DUP4 PUSH1 0x20 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BE SWAP3 SWAP2 SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x230 SWAP2 PUSH1 0x4 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x194 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x405 DUP4 PUSH1 0x2 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x410 SWAP1 PUSH1 0x2 PUSH2 0x711 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x428 JUMPI PUSH2 0x428 PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46D JUMPI PUSH2 0x46D PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x4C0 DUP5 PUSH1 0x2 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x4CB SWAP1 PUSH1 0x1 PUSH2 0x711 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x73A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x515 JUMPI PUSH2 0x515 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x53C DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CE JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x230 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x633 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x61B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x674 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x618 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x6A5 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x618 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6D0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x618 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x194 JUMPI PUSH2 0x194 PUSH2 0x6E4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x194 JUMPI PUSH2 0x194 PUSH2 0x6E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x75F JUMPI PUSH2 0x75F PUSH2 0x6E4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xDD 0xB0 MULMOD LOG4 SELFDESTRUCT 0x28 GT ADDRESS 0xEE 0xEC GASLIMIT SELFDESTRUCT 0x2B SWAP2 0xAA 0x25 0x1E 0xF6 0xA5 INVALID 0x49 SSTORE RETURNDATASIZE 0xB4 0xD4 0x4E 0x28 0xC5 0xDC 0xE8 0xAC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"130:355:17:-:0;;;353:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;391:42;2088:4:0;422:10:17;391;:42::i;:::-;439:39;320:28;467:10;439;:39::i;:::-;353:130;130:355;;6827:110:0;6905:25;6916:4;6922:7;6905:10;:25::i;:::-;6827:110;;:::o;7477:233::-;2997:4;3020:12;;;;;;;;;;;-1:-1:-1;;;;;3020:29:0;;;;;;;;;;;;7555:149;;7598:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7598:29:0;;;;;;;;;:36;;-1:-1:-1;;7598:36:0;7630:4;7598:36;;;7680:12;719:10:11;;640:96;7680:12:0;-1:-1:-1;;;;;7653:40:0;7671:7;-1:-1:-1;;;;;7653:40:0;7665:4;7653:40;;;;;;;;;;7477:233;;:::o;14:290:29:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:29;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:29:o;:::-;130:355:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@MAINTAINER_ROLE_3951":{"entryPoint":null,"id":3951,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":907,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":661,"id":92,"parameterSlots":1,"returnSlots":0},"@_grantRole_283":{"entryPoint":674,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@_revokeRole_314":{"entryPoint":806,"id":314,"parameterSlots":2,"returnSlots":0},"@getRoleAdmin_146":{"entryPoint":null,"id":146,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":410,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":583,"id":79,"parameterSlots":2,"returnSlots":1},"@renounceRole_209":{"entryPoint":452,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":624,"id":186,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2957":{"entryPoint":null,"id":2957,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":355,"id":60,"parameterSlots":1,"returnSlots":1},"@toHexString_2888":{"entryPoint":1014,"id":2888,"parameterSlots":2,"returnSlots":1},"@toHexString_2908":{"entryPoint":996,"id":2908,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":1475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":1500,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":1433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1596,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1786,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1560,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":1872,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1764,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1850,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1828,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4310:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:29","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:29"},"nodeType":"YulFunctionCall","src":"131:12:29"},"nodeType":"YulExpressionStatement","src":"131:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:29"},"nodeType":"YulFunctionCall","src":"100:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:29"},"nodeType":"YulFunctionCall","src":"96:32:29"},"nodeType":"YulIf","src":"93:52:29"},{"nodeType":"YulVariableDeclaration","src":"154:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:29"},"nodeType":"YulFunctionCall","src":"167:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:29"},"nodeType":"YulFunctionCall","src":"256:12:29"},"nodeType":"YulExpressionStatement","src":"256:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:20:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:29"},"nodeType":"YulFunctionCall","src":"219:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:29"},"nodeType":"YulFunctionCall","src":"209:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:29"},"nodeType":"YulFunctionCall","src":"202:51:29"},"nodeType":"YulIf","src":"199:71:29"},{"nodeType":"YulAssignment","src":"279:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:29","type":""}],"src":"14:286:29"},{"body":{"nodeType":"YulBlock","src":"400:92:29","statements":[{"nodeType":"YulAssignment","src":"410:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:29"},"nodeType":"YulFunctionCall","src":"418:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:29"},"nodeType":"YulFunctionCall","src":"470:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:29"},"nodeType":"YulFunctionCall","src":"463:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:29"},"nodeType":"YulFunctionCall","src":"445:41:29"},"nodeType":"YulExpressionStatement","src":"445:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:29","type":""}],"src":"305:187:29"},{"body":{"nodeType":"YulBlock","src":"567:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"613:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"622:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"625:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"615:6:29"},"nodeType":"YulFunctionCall","src":"615:12:29"},"nodeType":"YulExpressionStatement","src":"615:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"588:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"597:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"584:3:29"},"nodeType":"YulFunctionCall","src":"584:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"609:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"580:3:29"},"nodeType":"YulFunctionCall","src":"580:32:29"},"nodeType":"YulIf","src":"577:52:29"},{"nodeType":"YulAssignment","src":"638:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"661:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"648:12:29"},"nodeType":"YulFunctionCall","src":"648:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"638:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"533:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"544:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"556:6:29","type":""}],"src":"497:180:29"},{"body":{"nodeType":"YulBlock","src":"783:76:29","statements":[{"nodeType":"YulAssignment","src":"793:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"805:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"816:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"801:3:29"},"nodeType":"YulFunctionCall","src":"801:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"793:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"835:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"846:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"828:6:29"},"nodeType":"YulFunctionCall","src":"828:25:29"},"nodeType":"YulExpressionStatement","src":"828:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"752:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"763:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"774:4:29","type":""}],"src":"682:177:29"},{"body":{"nodeType":"YulBlock","src":"951:267:29","statements":[{"body":{"nodeType":"YulBlock","src":"997:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1006:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1009:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"999:6:29"},"nodeType":"YulFunctionCall","src":"999:12:29"},"nodeType":"YulExpressionStatement","src":"999:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"972:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"968:3:29"},"nodeType":"YulFunctionCall","src":"968:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"993:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"964:3:29"},"nodeType":"YulFunctionCall","src":"964:32:29"},"nodeType":"YulIf","src":"961:52:29"},{"nodeType":"YulAssignment","src":"1022:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1045:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1032:12:29"},"nodeType":"YulFunctionCall","src":"1032:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1022:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1064:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1094:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1090:3:29"},"nodeType":"YulFunctionCall","src":"1090:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1077:12:29"},"nodeType":"YulFunctionCall","src":"1077:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1068:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1172:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1181:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1184:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1174:6:29"},"nodeType":"YulFunctionCall","src":"1174:12:29"},"nodeType":"YulExpressionStatement","src":"1174:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1131:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1142:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1157:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1162:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1153:3:29"},"nodeType":"YulFunctionCall","src":"1153:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1166:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1149:3:29"},"nodeType":"YulFunctionCall","src":"1149:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1138:3:29"},"nodeType":"YulFunctionCall","src":"1138:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1128:2:29"},"nodeType":"YulFunctionCall","src":"1128:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1121:6:29"},"nodeType":"YulFunctionCall","src":"1121:50:29"},"nodeType":"YulIf","src":"1118:70:29"},{"nodeType":"YulAssignment","src":"1197:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1207:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1197:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"909:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"920:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"932:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"940:6:29","type":""}],"src":"864:354:29"},{"body":{"nodeType":"YulBlock","src":"1397:237:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1414:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1425:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1407:6:29"},"nodeType":"YulFunctionCall","src":"1407:21:29"},"nodeType":"YulExpressionStatement","src":"1407:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1444:3:29"},"nodeType":"YulFunctionCall","src":"1444:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"1464:2:29","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1437:6:29"},"nodeType":"YulFunctionCall","src":"1437:30:29"},"nodeType":"YulExpressionStatement","src":"1437:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1487:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1498:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1483:3:29"},"nodeType":"YulFunctionCall","src":"1483:18:29"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"1503:34:29","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1476:6:29"},"nodeType":"YulFunctionCall","src":"1476:62:29"},"nodeType":"YulExpressionStatement","src":"1476:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1558:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1569:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1554:3:29"},"nodeType":"YulFunctionCall","src":"1554:18:29"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"1574:17:29","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1547:6:29"},"nodeType":"YulFunctionCall","src":"1547:45:29"},"nodeType":"YulExpressionStatement","src":"1547:45:29"},{"nodeType":"YulAssignment","src":"1601:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1613:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1624:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1609:3:29"},"nodeType":"YulFunctionCall","src":"1609:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1601:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1374:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1388:4:29","type":""}],"src":"1223:411:29"},{"body":{"nodeType":"YulBlock","src":"1705:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1715:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1724:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1719:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1784:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1809:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1814:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1805:3:29"},"nodeType":"YulFunctionCall","src":"1805:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1828:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1833:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1824:3:29"},"nodeType":"YulFunctionCall","src":"1824:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1818:5:29"},"nodeType":"YulFunctionCall","src":"1818:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1798:6:29"},"nodeType":"YulFunctionCall","src":"1798:39:29"},"nodeType":"YulExpressionStatement","src":"1798:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1745:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1748:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1742:2:29"},"nodeType":"YulFunctionCall","src":"1742:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1756:19:29","statements":[{"nodeType":"YulAssignment","src":"1758:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1767:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1770:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:29"},"nodeType":"YulFunctionCall","src":"1763:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1758:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1738:3:29","statements":[]},"src":"1734:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1867:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1872:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:29"},"nodeType":"YulFunctionCall","src":"1863:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1881:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1856:6:29"},"nodeType":"YulFunctionCall","src":"1856:27:29"},"nodeType":"YulExpressionStatement","src":"1856:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1683:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1688:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1693:6:29","type":""}],"src":"1639:250:29"},{"body":{"nodeType":"YulBlock","src":"2283:423:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2300:3:29"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"2305:25:29","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2293:6:29"},"nodeType":"YulFunctionCall","src":"2293:38:29"},"nodeType":"YulExpressionStatement","src":"2293:38:29"},{"nodeType":"YulVariableDeclaration","src":"2340:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2360:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2354:5:29"},"nodeType":"YulFunctionCall","src":"2354:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2344:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2415:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2423:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2411:3:29"},"nodeType":"YulFunctionCall","src":"2411:17:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2434:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2439:2:29","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:29"},"nodeType":"YulFunctionCall","src":"2430:12:29"},{"name":"length","nodeType":"YulIdentifier","src":"2444:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2376:34:29"},"nodeType":"YulFunctionCall","src":"2376:75:29"},"nodeType":"YulExpressionStatement","src":"2376:75:29"},{"nodeType":"YulVariableDeclaration","src":"2460:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2474:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2479:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2470:3:29"},"nodeType":"YulFunctionCall","src":"2470:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2464:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2506:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:29","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2502:3:29"},"nodeType":"YulFunctionCall","src":"2502:11:29"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"2515:19:29","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2495:6:29"},"nodeType":"YulFunctionCall","src":"2495:40:29"},"nodeType":"YulExpressionStatement","src":"2495:40:29"},{"nodeType":"YulVariableDeclaration","src":"2544:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2566:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2560:5:29"},"nodeType":"YulFunctionCall","src":"2560:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"2548:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2621:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2629:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2617:3:29"},"nodeType":"YulFunctionCall","src":"2617:17:29"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2640:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2644:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2636:3:29"},"nodeType":"YulFunctionCall","src":"2636:11:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"2649:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2582:34:29"},"nodeType":"YulFunctionCall","src":"2582:76:29"},"nodeType":"YulExpressionStatement","src":"2582:76:29"},{"nodeType":"YulAssignment","src":"2667:33:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2682:2:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"2686:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2678:3:29"},"nodeType":"YulFunctionCall","src":"2678:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"2697:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2674:3:29"},"nodeType":"YulFunctionCall","src":"2674:26:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2667:3:29"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2251:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2256:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2264:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2275:3:29","type":""}],"src":"1894:812:29"},{"body":{"nodeType":"YulBlock","src":"2832:275:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2849:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2860:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2842:6:29"},"nodeType":"YulFunctionCall","src":"2842:21:29"},"nodeType":"YulExpressionStatement","src":"2842:21:29"},{"nodeType":"YulVariableDeclaration","src":"2872:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2892:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2886:5:29"},"nodeType":"YulFunctionCall","src":"2886:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2876:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2919:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2930:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2915:3:29"},"nodeType":"YulFunctionCall","src":"2915:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"2935:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2908:6:29"},"nodeType":"YulFunctionCall","src":"2908:34:29"},"nodeType":"YulExpressionStatement","src":"2908:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2990:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2998:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2986:3:29"},"nodeType":"YulFunctionCall","src":"2986:15:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3018:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:29"},"nodeType":"YulFunctionCall","src":"3003:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"3023:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2951:34:29"},"nodeType":"YulFunctionCall","src":"2951:79:29"},"nodeType":"YulExpressionStatement","src":"2951:79:29"},{"nodeType":"YulAssignment","src":"3039:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3055:9:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3074:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3082:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3070:3:29"},"nodeType":"YulFunctionCall","src":"3070:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3091:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3087:3:29"},"nodeType":"YulFunctionCall","src":"3087:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3066:3:29"},"nodeType":"YulFunctionCall","src":"3066:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3051:3:29"},"nodeType":"YulFunctionCall","src":"3051:45:29"},{"kind":"number","nodeType":"YulLiteral","src":"3098:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3047:3:29"},"nodeType":"YulFunctionCall","src":"3047:54:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3039:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2812:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2823:4:29","type":""}],"src":"2711:396:29"},{"body":{"nodeType":"YulBlock","src":"3144:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3161:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3168:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3173:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3164:3:29"},"nodeType":"YulFunctionCall","src":"3164:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3154:6:29"},"nodeType":"YulFunctionCall","src":"3154:31:29"},"nodeType":"YulExpressionStatement","src":"3154:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3201:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3204:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3194:6:29"},"nodeType":"YulFunctionCall","src":"3194:15:29"},"nodeType":"YulExpressionStatement","src":"3194:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3228:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3218:6:29"},"nodeType":"YulFunctionCall","src":"3218:15:29"},"nodeType":"YulExpressionStatement","src":"3218:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3112:127:29"},{"body":{"nodeType":"YulBlock","src":"3296:116:29","statements":[{"nodeType":"YulAssignment","src":"3306:20:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3321:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"3324:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3317:3:29"},"nodeType":"YulFunctionCall","src":"3317:9:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3306:7:29"}]},{"body":{"nodeType":"YulBlock","src":"3384:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3386:16:29"},"nodeType":"YulFunctionCall","src":"3386:18:29"},"nodeType":"YulExpressionStatement","src":"3386:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3355:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3348:6:29"},"nodeType":"YulFunctionCall","src":"3348:9:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3362:1:29"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3369:7:29"},{"name":"x","nodeType":"YulIdentifier","src":"3378:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3365:3:29"},"nodeType":"YulFunctionCall","src":"3365:15:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3359:2:29"},"nodeType":"YulFunctionCall","src":"3359:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3345:2:29"},"nodeType":"YulFunctionCall","src":"3345:37:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3338:6:29"},"nodeType":"YulFunctionCall","src":"3338:45:29"},"nodeType":"YulIf","src":"3335:71:29"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3275:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"3278:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3284:7:29","type":""}],"src":"3244:168:29"},{"body":{"nodeType":"YulBlock","src":"3465:77:29","statements":[{"nodeType":"YulAssignment","src":"3475:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3486:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"3489:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3482:3:29"},"nodeType":"YulFunctionCall","src":"3482:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3475:3:29"}]},{"body":{"nodeType":"YulBlock","src":"3514:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3516:16:29"},"nodeType":"YulFunctionCall","src":"3516:18:29"},"nodeType":"YulExpressionStatement","src":"3516:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3506:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"3509:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3503:2:29"},"nodeType":"YulFunctionCall","src":"3503:10:29"},"nodeType":"YulIf","src":"3500:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3448:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"3451:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3457:3:29","type":""}],"src":"3417:125:29"},{"body":{"nodeType":"YulBlock","src":"3579:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3596:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3603:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3608:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3599:3:29"},"nodeType":"YulFunctionCall","src":"3599:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3589:6:29"},"nodeType":"YulFunctionCall","src":"3589:31:29"},"nodeType":"YulExpressionStatement","src":"3589:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3636:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3639:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3629:6:29"},"nodeType":"YulFunctionCall","src":"3629:15:29"},"nodeType":"YulExpressionStatement","src":"3629:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3660:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3663:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3653:6:29"},"nodeType":"YulFunctionCall","src":"3653:15:29"},"nodeType":"YulExpressionStatement","src":"3653:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3547:127:29"},{"body":{"nodeType":"YulBlock","src":"3711:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3728:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3735:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3740:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3731:3:29"},"nodeType":"YulFunctionCall","src":"3731:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3721:6:29"},"nodeType":"YulFunctionCall","src":"3721:31:29"},"nodeType":"YulExpressionStatement","src":"3721:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3768:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3771:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3761:6:29"},"nodeType":"YulFunctionCall","src":"3761:15:29"},"nodeType":"YulExpressionStatement","src":"3761:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3792:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3795:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3785:6:29"},"nodeType":"YulFunctionCall","src":"3785:15:29"},"nodeType":"YulExpressionStatement","src":"3785:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3679:127:29"},{"body":{"nodeType":"YulBlock","src":"3858:89:29","statements":[{"body":{"nodeType":"YulBlock","src":"3885:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3887:16:29"},"nodeType":"YulFunctionCall","src":"3887:18:29"},"nodeType":"YulExpressionStatement","src":"3887:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3878:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3871:6:29"},"nodeType":"YulFunctionCall","src":"3871:13:29"},"nodeType":"YulIf","src":"3868:39:29"},{"nodeType":"YulAssignment","src":"3916:25:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3927:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3938:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3934:3:29"},"nodeType":"YulFunctionCall","src":"3934:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3923:3:29"},"nodeType":"YulFunctionCall","src":"3923:18:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3916:3:29"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3840:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3850:3:29","type":""}],"src":"3811:136:29"},{"body":{"nodeType":"YulBlock","src":"4126:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4143:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4154:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4136:6:29"},"nodeType":"YulFunctionCall","src":"4136:21:29"},"nodeType":"YulExpressionStatement","src":"4136:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4177:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4188:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4173:3:29"},"nodeType":"YulFunctionCall","src":"4173:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4193:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4166:6:29"},"nodeType":"YulFunctionCall","src":"4166:30:29"},"nodeType":"YulExpressionStatement","src":"4166:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4216:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4227:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4212:3:29"},"nodeType":"YulFunctionCall","src":"4212:18:29"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"4232:34:29","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4205:6:29"},"nodeType":"YulFunctionCall","src":"4205:62:29"},"nodeType":"YulExpressionStatement","src":"4205:62:29"},{"nodeType":"YulAssignment","src":"4276:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4288:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4299:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4284:3:29"},"nodeType":"YulFunctionCall","src":"4284:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4276:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4103:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4117:4:29","type":""}],"src":"3952:356:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806391d148541161005b57806391d148541461010e578063a217fddf14610121578063d547741f14610129578063f87422541461013c57600080fd5b806301ffc9a71461008d578063248a9ca3146100b55780632f2ff15d146100e657806336568abe146100fb575b600080fd5b6100a061009b366004610599565b610163565b60405190151581526020015b60405180910390f35b6100d86100c33660046105c3565b60009081526020819052604090206001015490565b6040519081526020016100ac565b6100f96100f43660046105dc565b61019a565b005b6100f96101093660046105dc565b6101c4565b6100a061011c3660046105dc565b610247565b6100d8600081565b6100f96101373660046105dc565b610270565b6100d87f339759585899103d2ace64958e37e18ccb0504652c81d4a1b8aa80fe2126ab9581565b60006001600160e01b03198216637965db0b60e01b148061019457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101b581610295565b6101bf83836102a2565b505050565b6001600160a01b03811633146102395760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102438282610326565b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461028b81610295565b6101bf8383610326565b61029f813361038b565b50565b6102ac8282610247565b610243576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556102e23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6103308282610247565b15610243576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6103958282610247565b610243576103a2816103e4565b6103ad8360206103f6565b6040516020016103be92919061063c565b60408051601f198184030181529082905262461bcd60e51b8252610230916004016106b1565b60606101946001600160a01b03831660145b606060006104058360026106fa565b610410906002610711565b67ffffffffffffffff81111561042857610428610724565b6040519080825280601f01601f191660200182016040528015610452576020820181803683370190505b509050600360fc1b8160008151811061046d5761046d61073a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061049c5761049c61073a565b60200101906001600160f81b031916908160001a90535060006104c08460026106fa565b6104cb906001610711565b90505b6001811115610543576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104ff576104ff61073a565b1a60f81b8282815181106105155761051561073a565b60200101906001600160f81b031916908160001a90535060049490941c9361053c81610750565b90506104ce565b5083156105925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610230565b9392505050565b6000602082840312156105ab57600080fd5b81356001600160e01b03198116811461059257600080fd5b6000602082840312156105d557600080fd5b5035919050565b600080604083850312156105ef57600080fd5b8235915060208301356001600160a01b038116811461060d57600080fd5b809150509250929050565b60005b8381101561063357818101518382015260200161061b565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610674816017850160208801610618565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516106a5816028840160208801610618565b01602801949350505050565b60208152600082518060208401526106d0816040850160208701610618565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610194576101946106e4565b80820180821115610194576101946106e4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161075f5761075f6106e4565b50600019019056fea2646970667358221220a2ddb009a4ff281130eeec45ff2b91aa251ef6a5fe49553db4d44e28c5dce8ac64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xF8742254 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xD8 PUSH32 0x339759585899103D2ACE64958E37E18CCB0504652C81D4A1B8AA80FE2126AB95 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x194 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1B5 DUP2 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x1BF DUP4 DUP4 PUSH2 0x2A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x243 DUP3 DUP3 PUSH2 0x326 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x28B DUP2 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x1BF DUP4 DUP4 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x29F DUP2 CALLER PUSH2 0x38B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC DUP3 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x243 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2E2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x330 DUP3 DUP3 PUSH2 0x247 JUMP JUMPDEST ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x395 DUP3 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x243 JUMPI PUSH2 0x3A2 DUP2 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x3AD DUP4 PUSH1 0x20 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BE SWAP3 SWAP2 SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x230 SWAP2 PUSH1 0x4 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x194 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x405 DUP4 PUSH1 0x2 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x410 SWAP1 PUSH1 0x2 PUSH2 0x711 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x428 JUMPI PUSH2 0x428 PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46D JUMPI PUSH2 0x46D PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x4C0 DUP5 PUSH1 0x2 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x4CB SWAP1 PUSH1 0x1 PUSH2 0x711 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x73A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x515 JUMPI PUSH2 0x515 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x53C DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CE JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x230 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x633 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x61B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x674 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x618 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x6A5 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x618 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6D0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x618 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x194 JUMPI PUSH2 0x194 PUSH2 0x6E4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x194 JUMPI PUSH2 0x194 PUSH2 0x6E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x75F JUMPI PUSH2 0x75F PUSH2 0x6E4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xDD 0xB0 MULMOD LOG4 SELFDESTRUCT 0x28 GT ADDRESS 0xEE 0xEC GASLIMIT SELFDESTRUCT 0x2B SWAP2 0xAA 0x25 0x1E 0xF6 0xA5 INVALID 0x49 SSTORE RETURNDATASIZE 0xB4 0xD4 0x4E 0x28 0xC5 0xDC 0xE8 0xAC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"130:355:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:29;;463:22;445:41;;433:2;418:18;2622:202:0;;;;;;;;4394:129;;;;;;:::i;:::-;4468:7;4494:12;;;;;;;;;;:22;;;;4394:129;;;;828:25:29;;;816:2;801:18;4394:129:0;682:177:29;4819:145:0;;;;;;:::i;:::-;;:::i;:::-;;5928:214;;;;;;:::i;:::-;;:::i;2911:145::-;;;;;;:::i;:::-;;:::i;2043:49::-;;2088:4;2043:49;;5244:147;;;;;;:::i;:::-;;:::i;278:70:17:-;;320:28;278:70;;2622:202:0;2707:4;-1:-1:-1;;;;;;2730:47:0;;-1:-1:-1;;;2730:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:13;;;2781:36:0;2723:94;2622:202;-1:-1:-1;;2622:202:0:o;4819:145::-;4468:7;4494:12;;;;;;;;;;:22;;;2521:16;2532:4;2521:10;:16::i;:::-;4932:25:::1;4943:4;4949:7;4932:10;:25::i;:::-;4819:145:::0;;;:::o;5928:214::-;-1:-1:-1;;;;;6023:23:0;;719:10:11;6023:23:0;6015:83;;;;-1:-1:-1;;;6015:83:0;;1425:2:29;6015:83:0;;;1407:21:29;1464:2;1444:18;;;1437:30;1503:34;1483:18;;;1476:62;-1:-1:-1;;;1554:18:29;;;1547:45;1609:19;;6015:83:0;;;;;;;;;6109:26;6121:4;6127:7;6109:11;:26::i;:::-;5928:214;;:::o;2911:145::-;2997:4;3020:12;;;;;;;;;;;-1:-1:-1;;;;;3020:29:0;;;;;;;;;;;;;;;2911:145::o;5244:147::-;4468:7;4494:12;;;;;;;;;;:22;;;2521:16;2532:4;2521:10;:16::i;:::-;5358:26:::1;5370:4;5376:7;5358:11;:26::i;3350:103::-:0;3416:30;3427:4;719:10:11;3416::0;:30::i;:::-;3350:103;:::o;7477:233::-;7560:22;7568:4;7574:7;7560;:22::i;:::-;7555:149;;7598:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7598:29:0;;;;;;;;;:36;;-1:-1:-1;;7598:36:0;7630:4;7598:36;;;7680:12;719:10:11;;640:96;7680:12:0;-1:-1:-1;;;;;7653:40:0;7671:7;-1:-1:-1;;;;;7653:40:0;7665:4;7653:40;;;;;;;;;;7477:233;;:::o;7881:234::-;7964:22;7972:4;7978:7;7964;:22::i;:::-;7960:149;;;8034:5;8002:12;;;;;;;;;;;-1:-1:-1;;;;;8002:29:0;;;;;;;;;;:37;;-1:-1:-1;;8002:37:0;;;8058:40;719:10:11;;8002:12:0;;8058:40;;8034:5;8058:40;7881:234;;:::o;3734:479::-;3822:22;3830:4;3836:7;3822;:22::i;:::-;3817:390;;4005:28;4025:7;4005:19;:28::i;:::-;4104:38;4132:4;4139:2;4104:19;:38::i;:::-;3912:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3912:252:0;;;;;;;;;;-1:-1:-1;;;3860:336:0;;;;;;;:::i;2407:149:12:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:12;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:12;;1918:47;;-1:-1:-1;;;1975:6:12;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:12;;;;;;;;;-1:-1:-1;;;2000:6:12;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:12;;;;;;;;-1:-1:-1;2030:9:12;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:12;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:12;;;;;;;;-1:-1:-1;2141:1:12;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:12;;2162:55;;;;-1:-1:-1;;;2162:55:12;;4154:2:29;2162:55:12;;;4136:21:29;;;4173:18;;;4166:30;4232:34;4212:18;;;4205:62;4284:18;;2162:55:12;3952:356:29;2162:55:12;2241:6;1818:437;-1:-1:-1;;;1818:437:12:o;14:286:29:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:29;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:29;;497:180;-1:-1:-1;497:180:29:o;864:354::-;932:6;940;993:2;981:9;972:7;968:23;964:32;961:52;;;1009:1;1006;999:12;961:52;1032:23;;;-1:-1:-1;1105:2:29;1090:18;;1077:32;-1:-1:-1;;;;;1138:31:29;;1128:42;;1118:70;;1184:1;1181;1174:12;1118:70;1207:5;1197:15;;;864:354;;;;;:::o;1639:250::-;1724:1;1734:113;1748:6;1745:1;1742:13;1734:113;;;1824:11;;;1818:18;1805:11;;;1798:39;1770:2;1763:10;1734:113;;;-1:-1:-1;;1881:1:29;1863:16;;1856:27;1639:250::o;1894:812::-;2305:25;2300:3;2293:38;2275:3;2360:6;2354:13;2376:75;2444:6;2439:2;2434:3;2430:12;2423:4;2415:6;2411:17;2376:75;:::i;:::-;-1:-1:-1;;;2510:2:29;2470:16;;;2502:11;;;2495:40;2560:13;;2582:76;2560:13;2644:2;2636:11;;2629:4;2617:17;;2582:76;:::i;:::-;2678:17;2697:2;2674:26;;1894:812;-1:-1:-1;;;;1894:812:29:o;2711:396::-;2860:2;2849:9;2842:21;2823:4;2892:6;2886:13;2935:6;2930:2;2919:9;2915:18;2908:34;2951:79;3023:6;3018:2;3007:9;3003:18;2998:2;2990:6;2986:15;2951:79;:::i;:::-;3091:2;3070:15;-1:-1:-1;;3066:29:29;3051:45;;;;3098:2;3047:54;;2711:396;-1:-1:-1;;2711:396:29:o;3112:127::-;3173:10;3168:3;3164:20;3161:1;3154:31;3204:4;3201:1;3194:15;3228:4;3225:1;3218:15;3244:168;3317:9;;;3348;;3365:15;;;3359:22;;3345:37;3335:71;;3386:18;;:::i;3417:125::-;3482:9;;;3503:10;;;3500:36;;;3516:18;;:::i;3547:127::-;3608:10;3603:3;3599:20;3596:1;3589:31;3639:4;3636:1;3629:15;3663:4;3660:1;3653:15;3679:127;3740:10;3735:3;3731:20;3728:1;3721:31;3771:4;3768:1;3761:15;3795:4;3792:1;3785:15;3811:136;3850:3;3878:5;3868:39;;3887:18;;:::i;:::-;-1:-1:-1;;;3923:18:29;;3811:136::o"},"gasEstimates":{"creation":{"codeDepositCost":"389800","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_ADMIN_ROLE()":"217","MAINTAINER_ROLE()":"261","getRoleAdmin(bytes32)":"2470","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"2621","renounceRole(bytes32,address)":"29032","revokeRole(bytes32,address)":"infinite","supportsInterface(bytes4)":"427"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MAINTAINER_ROLE()":"f8742254","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maintainer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAINTAINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/AccessController.sol\":\"AccessController\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8d29c5ce9b0d56701c1bf9dce816baa3d8665cea300abdd65e6f16314efcebc6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"src/core/AccessController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\\\";\\n\\ncontract AccessController is AccessControl {\\n  //----------------------------------------\\n  // Roles\\n  //----------------------------------------\\n  bytes32 public constant MAINTAINER_ROLE = keccak256(\\\"MAINTAINER_ROLE\\\");\\n\\n  constructor(address maintainer) {\\n    _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n    _setupRole(MAINTAINER_ROLE, maintainer);\\n  }\\n}\",\"keccak256\":\"0xadcfeacfcdffdcc9742babe2bc920858fddb1e07359b491ae3caaedb9ede112b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"src/core/AccessController.sol:AccessController","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"src/core/AccessController.sol:AccessController","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"src/core/AccessController.sol:AccessController","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/core/ImplementationManager.sol":{"ImplementationManager":{"abi":[{"inputs":[{"internalType":"address","name":"_accessController","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"IMPLEMENTATION_NOT_FOUND","type":"error"},{"inputs":[],"name":"NOT_MAINTAINER","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"interfaceName","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"InterfaceImplementationChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"},{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"changeImplementationAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"}],"name":"getImplementationAddress","outputs":[{"internalType":"address","name":"implementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"interfacesImplemented","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"changeImplementationAddress(bytes32,address)":{"params":{"implementationAddress":"address of the deployed contract that implements the interface.","interfaceName":"bytes32 encoding of the interface name that is either changed or registered."}},"getImplementationAddress(bytes32)":{"params":{"interfaceName":"queried interface."},"returns":{"implementationAddress":"Address of the deployed contract that implements the interface."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_4033":{"entryPoint":null,"id":4033,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":143,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:29","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:29"},"nodeType":"YulFunctionCall","src":"143:12:29"},"nodeType":"YulExpressionStatement","src":"143:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:29"},"nodeType":"YulFunctionCall","src":"112:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:29"},"nodeType":"YulFunctionCall","src":"108:32:29"},"nodeType":"YulIf","src":"105:52:29"},{"nodeType":"YulVariableDeclaration","src":"166:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:29"},"nodeType":"YulFunctionCall","src":"179:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:29"},"nodeType":"YulFunctionCall","src":"260:12:29"},"nodeType":"YulExpressionStatement","src":"260:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:29"},"nodeType":"YulFunctionCall","src":"239:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:29"},"nodeType":"YulFunctionCall","src":"235:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:29"},"nodeType":"YulFunctionCall","src":"224:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:29"},"nodeType":"YulFunctionCall","src":"214:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:29"},"nodeType":"YulFunctionCall","src":"207:50:29"},"nodeType":"YulIf","src":"204:70:29"},{"nodeType":"YulAssignment","src":"283:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:29"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:29","type":""}],"src":"14:290:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161041538038061041583398101604081905261002f9161008f565b6f20b1b1b2b9b9a1b7b73a3937b63632b960811b60009081526020527f5542d27f97c119ca499c404ca78083b3b2fa2b515dc902c5208a81c22feaac3d80546001600160a01b0319166001600160a01b03929092169190911790556100bf565b6000602082840312156100a157600080fd5b81516001600160a01b03811681146100b857600080fd5b9392505050565b610347806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806331f9665e14610046578063aafd5e401461005b578063cc48f4db1461008a575b600080fd5b61005961005436600461027a565b6100b3565b005b61006e6100693660046102b6565b61023f565b6040516001600160a01b03909116815260200160405180910390f35b61006e6100983660046102b6565b6000602081905290815260409020546001600160a01b031681565b6f20b1b1b2b9b9a1b7b73a3937b63632b960811b600090815260209081527f5542d27f97c119ca499c404ca78083b3b2fa2b515dc902c5208a81c22feaac3d5460408051633e1d089560e21b815290516001600160a01b039092169283926391d1485492849263f8742254926004808401938290030181865afa15801561013e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016291906102cf565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c891906102e8565b6101e5576040516337ab45b760e01b815260040160405180910390fd5b60008381526020819052604080822080546001600160a01b0319166001600160a01b0386169081179091559051909185917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a3505050565b6000818152602081905260409020546001600160a01b031680610275576040516320a03dc760e01b815260040160405180910390fd5b919050565b6000806040838503121561028d57600080fd5b8235915060208301356001600160a01b03811681146102ab57600080fd5b809150509250929050565b6000602082840312156102c857600080fd5b5035919050565b6000602082840312156102e157600080fd5b5051919050565b6000602082840312156102fa57600080fd5b8151801515811461030a57600080fd5b939250505056fea264697066735822122037ef7081e81e7eee1b79c1ccecf3f4ba53a2273c879363b1b6e29104be47252664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x415 CODESIZE SUB DUP1 PUSH2 0x415 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x8F JUMP JUMPDEST PUSH16 0x20B1B1B2B9B9A1B7B73A3937B63632B9 PUSH1 0x81 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x5542D27F97C119CA499C404CA78083B3B2FA2B515DC902C5208A81C22FEAAC3D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x347 DUP1 PUSH2 0xCE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31F9665E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAAFD5E40 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xCC48F4DB EQ PUSH2 0x8A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH16 0x20B1B1B2B9B9A1B7B73A3937B63632B9 PUSH1 0x81 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x5542D27F97C119CA499C404CA78083B3B2FA2B515DC902C5208A81C22FEAAC3D SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3E1D0895 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP4 SWAP3 PUSH4 0x91D14854 SWAP3 DUP5 SWAP3 PUSH4 0xF8742254 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37AB45B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP6 SWAP2 PUSH32 0xB29AA13E555039289E0513962835B00FCC6E4A265AE8F99E68E5B90D5406FE48 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20A03DC7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xEF PUSH17 0x81E81E7EEE1B79C1CCECF3F4BA53A2273C DUP8 SWAP4 PUSH4 0xB1B6E291 DIV 0xBE SELFBALANCE 0x25 0x26 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"367:1909:18:-:0;;;1343:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1390:21:18;:68;;;;;;:88;;-1:-1:-1;;;;;;1390:88:18;-1:-1:-1;;;;;1390:88:18;;;;;;;;;;367:1909;;14:290:29;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:29;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:29:o;:::-;367:1909:18;;;;;;"},"deployedBytecode":{"functionDebugData":{"@changeImplementationAddress_4056":{"entryPoint":179,"id":4056,"parameterSlots":2,"returnSlots":0},"@getImplementationAddress_4084":{"entryPoint":575,"id":4084,"parameterSlots":1,"returnSlots":1},"@interfacesImplemented_3985":{"entryPoint":null,"id":3985,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":634,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1513:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"101:267:29","statements":[{"body":{"nodeType":"YulBlock","src":"147:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"149:6:29"},"nodeType":"YulFunctionCall","src":"149:12:29"},"nodeType":"YulExpressionStatement","src":"149:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"122:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"131:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"118:3:29"},"nodeType":"YulFunctionCall","src":"118:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"143:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"114:3:29"},"nodeType":"YulFunctionCall","src":"114:32:29"},"nodeType":"YulIf","src":"111:52:29"},{"nodeType":"YulAssignment","src":"172:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"182:12:29"},"nodeType":"YulFunctionCall","src":"182:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"172:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"214:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"244:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"240:3:29"},"nodeType":"YulFunctionCall","src":"240:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"227:12:29"},"nodeType":"YulFunctionCall","src":"227:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"218:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"322:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"331:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"334:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"324:6:29"},"nodeType":"YulFunctionCall","src":"324:12:29"},"nodeType":"YulExpressionStatement","src":"324:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"281:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"307:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"303:3:29"},"nodeType":"YulFunctionCall","src":"303:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"299:3:29"},"nodeType":"YulFunctionCall","src":"299:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:29"},"nodeType":"YulFunctionCall","src":"288:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"278:2:29"},"nodeType":"YulFunctionCall","src":"278:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"271:6:29"},"nodeType":"YulFunctionCall","src":"271:50:29"},"nodeType":"YulIf","src":"268:70:29"},{"nodeType":"YulAssignment","src":"347:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"357:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"347:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"70:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"82:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"90:6:29","type":""}],"src":"14:354:29"},{"body":{"nodeType":"YulBlock","src":"443:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"489:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"498:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"501:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"491:6:29"},"nodeType":"YulFunctionCall","src":"491:12:29"},"nodeType":"YulExpressionStatement","src":"491:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"464:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"473:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"460:3:29"},"nodeType":"YulFunctionCall","src":"460:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"485:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"456:3:29"},"nodeType":"YulFunctionCall","src":"456:32:29"},"nodeType":"YulIf","src":"453:52:29"},{"nodeType":"YulAssignment","src":"514:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"537:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"524:12:29"},"nodeType":"YulFunctionCall","src":"524:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"514:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"409:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"420:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"432:6:29","type":""}],"src":"373:180:29"},{"body":{"nodeType":"YulBlock","src":"659:102:29","statements":[{"nodeType":"YulAssignment","src":"669:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"681:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"692:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"677:3:29"},"nodeType":"YulFunctionCall","src":"677:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"669:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"711:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"726:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"742:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"738:3:29"},"nodeType":"YulFunctionCall","src":"738:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"751:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"734:3:29"},"nodeType":"YulFunctionCall","src":"734:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"722:3:29"},"nodeType":"YulFunctionCall","src":"722:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"704:6:29"},"nodeType":"YulFunctionCall","src":"704:51:29"},"nodeType":"YulExpressionStatement","src":"704:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"628:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"639:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"650:4:29","type":""}],"src":"558:203:29"},{"body":{"nodeType":"YulBlock","src":"847:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"893:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"905:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"895:6:29"},"nodeType":"YulFunctionCall","src":"895:12:29"},"nodeType":"YulExpressionStatement","src":"895:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"868:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"877:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"864:3:29"},"nodeType":"YulFunctionCall","src":"864:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"889:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"860:3:29"},"nodeType":"YulFunctionCall","src":"860:32:29"},"nodeType":"YulIf","src":"857:52:29"},{"nodeType":"YulAssignment","src":"918:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"928:5:29"},"nodeType":"YulFunctionCall","src":"928:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"918:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"813:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"824:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"836:6:29","type":""}],"src":"766:184:29"},{"body":{"nodeType":"YulBlock","src":"1084:145:29","statements":[{"nodeType":"YulAssignment","src":"1094:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1106:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1117:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:29"},"nodeType":"YulFunctionCall","src":"1102:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1094:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1147:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1129:6:29"},"nodeType":"YulFunctionCall","src":"1129:25:29"},"nodeType":"YulExpressionStatement","src":"1129:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:29"},"nodeType":"YulFunctionCall","src":"1170:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1194:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1210:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1215:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1206:3:29"},"nodeType":"YulFunctionCall","src":"1206:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1219:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1202:3:29"},"nodeType":"YulFunctionCall","src":"1202:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1190:3:29"},"nodeType":"YulFunctionCall","src":"1190:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1163:6:29"},"nodeType":"YulFunctionCall","src":"1163:60:29"},"nodeType":"YulExpressionStatement","src":"1163:60:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1045:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1056:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1064:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1075:4:29","type":""}],"src":"955:274:29"},{"body":{"nodeType":"YulBlock","src":"1312:199:29","statements":[{"body":{"nodeType":"YulBlock","src":"1358:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1367:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1370:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1360:6:29"},"nodeType":"YulFunctionCall","src":"1360:12:29"},"nodeType":"YulExpressionStatement","src":"1360:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1333:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1329:3:29"},"nodeType":"YulFunctionCall","src":"1329:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1354:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1325:3:29"},"nodeType":"YulFunctionCall","src":"1325:32:29"},"nodeType":"YulIf","src":"1322:52:29"},{"nodeType":"YulVariableDeclaration","src":"1383:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1396:5:29"},"nodeType":"YulFunctionCall","src":"1396:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1387:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1465:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1474:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1477:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1467:6:29"},"nodeType":"YulFunctionCall","src":"1467:12:29"},"nodeType":"YulExpressionStatement","src":"1467:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1434:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1455:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1448:6:29"},"nodeType":"YulFunctionCall","src":"1448:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1441:6:29"},"nodeType":"YulFunctionCall","src":"1441:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1431:2:29"},"nodeType":"YulFunctionCall","src":"1431:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1424:6:29"},"nodeType":"YulFunctionCall","src":"1424:40:29"},"nodeType":"YulIf","src":"1421:60:29"},{"nodeType":"YulAssignment","src":"1490:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1500:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1490:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1278:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1289:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1301:6:29","type":""}],"src":"1234:277:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806331f9665e14610046578063aafd5e401461005b578063cc48f4db1461008a575b600080fd5b61005961005436600461027a565b6100b3565b005b61006e6100693660046102b6565b61023f565b6040516001600160a01b03909116815260200160405180910390f35b61006e6100983660046102b6565b6000602081905290815260409020546001600160a01b031681565b6f20b1b1b2b9b9a1b7b73a3937b63632b960811b600090815260209081527f5542d27f97c119ca499c404ca78083b3b2fa2b515dc902c5208a81c22feaac3d5460408051633e1d089560e21b815290516001600160a01b039092169283926391d1485492849263f8742254926004808401938290030181865afa15801561013e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016291906102cf565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c891906102e8565b6101e5576040516337ab45b760e01b815260040160405180910390fd5b60008381526020819052604080822080546001600160a01b0319166001600160a01b0386169081179091559051909185917fb29aa13e555039289e0513962835b00fcc6e4a265ae8f99e68e5b90d5406fe489190a3505050565b6000818152602081905260409020546001600160a01b031680610275576040516320a03dc760e01b815260040160405180910390fd5b919050565b6000806040838503121561028d57600080fd5b8235915060208301356001600160a01b03811681146102ab57600080fd5b809150509250929050565b6000602082840312156102c857600080fd5b5035919050565b6000602082840312156102e157600080fd5b5051919050565b6000602082840312156102fa57600080fd5b8151801515811461030a57600080fd5b939250505056fea264697066735822122037ef7081e81e7eee1b79c1ccecf3f4ba53a2273c879363b1b6e29104be47252664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31F9665E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAAFD5E40 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xCC48F4DB EQ PUSH2 0x8A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH16 0x20B1B1B2B9B9A1B7B73A3937B63632B9 PUSH1 0x81 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x5542D27F97C119CA499C404CA78083B3B2FA2B515DC902C5208A81C22FEAAC3D SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3E1D0895 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP4 SWAP3 PUSH4 0x91D14854 SWAP3 DUP5 SWAP3 PUSH4 0xF8742254 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37AB45B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP6 SWAP2 PUSH32 0xB29AA13E555039289E0513962835B00FCC6E4A265AE8F99E68E5B90D5406FE48 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x20A03DC7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xEF PUSH17 0x81E81E7EEE1B79C1CCECF3F4BA53A2273C DUP8 SWAP4 PUSH4 0xB1B6E291 DIV 0xBE SELFBALANCE 0x25 0x26 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"367:1909:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:287;;;;;;:::i;:::-;;:::i;:::-;;1976:297;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;722:32:29;;;704:51;;692:2;677:18;1976:297:18;;;;;;;532:56;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;532:56:18;;;1644:287;-1:-1:-1;;;966:34:18;1021:68;;;;;;;;;;1127:34;;-1:-1:-1;;;1127:34:18;;;;-1:-1:-1;;;;;1021:68:18;;;;;;1102:24;;1021:68;;1127:32;;:34;;;;;;;;;;1021:68;1127:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1102:72;;-1:-1:-1;;;;;;1102:72:18;;;;;;;;;;1129:25:29;;;;1163:10:18;1170:18:29;;;1163:60;1102:18;;:72:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1098:108;;1183:23;;-1:-1:-1;;;1183:23:18;;;;;;;;;;;1098:108;1786:21:::1;:36:::0;;;::::1;::::0;;;;;;;:60;;-1:-1:-1;;;;;;1786:60:18::1;-1:-1:-1::0;;;;;1786:60:18;::::1;::::0;;::::1;::::0;;;1858:68;;1786:60;;:36;;1858:68:::1;::::0;1786:21;1858:68:::1;958:262:::0;1644:287;;:::o;1976:297::-;2081:29;2144:36;;;;;;;;;;;-1:-1:-1;;;;;2144:36:18;;2186:82;;2235:33;;-1:-1:-1;;;2235:33:18;;;;;;;;;;;2186:82;1976:297;;;:::o;14:354:29:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;182:23;;;-1:-1:-1;255:2:29;240:18;;227:32;-1:-1:-1;;;;;288:31:29;;278:42;;268:70;;334:1;331;324:12;268:70;357:5;347:15;;;14:354;;;;;:::o;373:180::-;432:6;485:2;473:9;464:7;460:23;456:32;453:52;;;501:1;498;491:12;453:52;-1:-1:-1;524:23:29;;373:180;-1:-1:-1;373:180:29:o;766:184::-;836:6;889:2;877:9;868:7;864:23;860:32;857:52;;;905:1;902;895:12;857:52;-1:-1:-1;928:16:29;;766:184;-1:-1:-1;766:184:29:o;1234:277::-;1301:6;1354:2;1342:9;1333:7;1329:23;1325:32;1322:52;;;1370:1;1367;1360:12;1322:52;1402:9;1396:16;1455:5;1448:13;1441:21;1434:5;1431:32;1421:60;;1477:1;1474;1467:12;1421:60;1500:5;1234:277;-1:-1:-1;;;1234:277:29:o"},"gasEstimates":{"creation":{"codeDepositCost":"167800","executionCost":"infinite","totalCost":"infinite"},"external":{"changeImplementationAddress(bytes32,address)":"infinite","getImplementationAddress(bytes32)":"2502","interfacesImplemented(bytes32)":"2490"}},"methodIdentifiers":{"changeImplementationAddress(bytes32,address)":"31f9665e","getImplementationAddress(bytes32)":"aafd5e40","interfacesImplemented(bytes32)":"cc48f4db"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accessController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IMPLEMENTATION_NOT_FOUND\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_MAINTAINER\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"InterfaceImplementationChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"changeImplementationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"}],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"interfacesImplemented\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"params\":{\"implementationAddress\":\"address of the deployed contract that implements the interface.\",\"interfaceName\":\"bytes32 encoding of the interface name that is either changed or registered.\"}},\"getImplementationAddress(bytes32)\":{\"params\":{\"interfaceName\":\"queried interface.\"},\"returns\":{\"implementationAddress\":\"Address of the deployed contract that implements the interface.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"notice\":\"Updates the address of the contract that implements `interfaceName`.\"},\"getImplementationAddress(bytes32)\":{\"notice\":\"Gets the address of the contract that implements the given `interfaceName`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/ImplementationManager.sol\":\"ImplementationManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"src/core/ImplementationManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {IAccessController} from \\\"../interfaces/IAccessController.sol\\\";\\nimport {IImplementationManager} from \\\"../interfaces/IImplementationManager.sol\\\";\\n\\nimport {ImplementationInterfaceNames} from \\\"../libraries/helpers/ImplementationInterfaceNames.sol\\\";\\nimport {Errors} from \\\"../libraries/helpers/Errors.sol\\\";\\n\\ncontract ImplementationManager is IImplementationManager{\\n\\n  //----------------------------------------\\n  // Storage\\n  //----------------------------------------\\n\\n  mapping(bytes32 => address) public interfacesImplemented;\\n\\n  //----------------------------------------\\n  // Events\\n  //----------------------------------------\\n\\n  event InterfaceImplementationChanged(\\n      bytes32 indexed interfaceName,\\n      address indexed newImplementationAddress\\n  );\\n\\n  //----------------------------------------\\n  // Modifiers\\n  //----------------------------------------\\n\\n  modifier onlyMaintainer() {\\n      IAccessController accessController = IAccessController(interfacesImplemented[ImplementationInterfaceNames.AccessController]);\\n      if(!accessController.hasRole(accessController.MAINTAINER_ROLE(), msg.sender)) revert Errors.NOT_MAINTAINER();\\n      _;\\n  }\\n\\n  //----------------------------------------\\n  // Initialization function\\n  //----------------------------------------\\n  constructor(address _accessController) {\\n      interfacesImplemented[ImplementationInterfaceNames.AccessController] = _accessController;\\n  }\\n\\n  //----------------------------------------\\n  // Externals functions\\n  //----------------------------------------\\n\\n  /// @inheritdoc IImplementationManager\\n  function changeImplementationAddress(\\n    bytes32 interfaceName,\\n    address implementationAddress\\n  ) external override onlyMaintainer {\\n    interfacesImplemented[interfaceName] = implementationAddress;\\n\\n    emit InterfaceImplementationChanged(interfaceName, implementationAddress);\\n  }\\n\\n  /// @inheritdoc IImplementationManager\\n  function getImplementationAddress(bytes32 interfaceName)\\n    external\\n    view\\n    override\\n    returns (address implementationAddress)\\n  {\\n    implementationAddress = interfacesImplemented[interfaceName];\\n    if(implementationAddress == address(0x0)) revert Errors.IMPLEMENTATION_NOT_FOUND();\\n  }\\n\\n}\",\"keccak256\":\"0xf0b38c71e3f324e571befca3183f354d4d11285e9a056fc9f52d0743abf54b3a\",\"license\":\"MIT\"},\"src/interfaces/IAccessController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {IAccessControl} from \\\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\\\";\\n\\ninterface IAccessController is IAccessControl {\\n  function MAINTAINER_ROLE() external view returns (bytes32);\\n  function MANAGER_ROLE() external view returns (bytes32);\\n\\n}\",\"keccak256\":\"0xd0b3c763ebdc8a64694959d9b799e401b1b791d1f6a4edb62764900a22b570c3\",\"license\":\"MIT\"},\"src/interfaces/IImplementationManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IImplementationManager{\\n    /**\\n     * @notice Updates the address of the contract that implements `interfaceName`.\\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\\n     * @param implementationAddress address of the deployed contract that implements the interface.\\n     */\\n    function changeImplementationAddress(\\n        bytes32 interfaceName,\\n        address implementationAddress\\n    ) external;\\n\\n  /**\\n   * @notice Gets the address of the contract that implements the given `interfaceName`.\\n   * @param interfaceName queried interface.\\n   * @return implementationAddress Address of the deployed contract that implements the interface.\\n   */\\n  function getImplementationAddress(bytes32 interfaceName)\\n    external\\n    view\\n    returns (address implementationAddress);\\n\\n}\",\"keccak256\":\"0x77bef3e7ed09382acfe4011fdc7371857e6bd0b44b83c1534380cd5b9b29702e\",\"license\":\"MIT\"},\"src/libraries/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Errors library\\n * @notice Defines the error messages emitted by the different contracts of the protocol\\n */\\nlibrary Errors {\\n    error BE_ADDRESS_0(); // 'Address must be address(0)'\\n    error NOT_ADDRESS_0(); // 'Address must not be address(0)'\\n    error RAFFLE_CLOSE(); // 'Current timestamps greater or equal than the close time'\\n    error RAFFLE_STILL_OPEN(); // 'Current timestamps lesser or equal than the close time'\\n    error CANT_BE_ZERO(); // 'Value can't must be higher than 0'\\n    error MAX_TICKET_SUPPLY_EXCEEDED(); // 'Maximum amount of ticket sold for the raffle has been reached'\\n    error NOT_ENOUGH_BALANCE(); // 'Balance lower than required'\\n    error MSG_SENDER_NOT_WINNER(); // 'msg.sender is not winner address'\\n    error NOT_CREATOR(); // 'msg.sender is not the creator of the raffle'\\n    error TICKET_NOT_DRAWN(); // 'ticket must be drawn'\\n    error TICKET_ALREADY_DRAWN(); // 'ticket has already be drawn'\\n    error NOT_MAINTAINER(); // 'Caller is not the maintainer'\\n    error IMPLEMENTATION_NOT_FOUND(); // 'Implementation interfaces is not registered'\\n}\\n\\n \",\"keccak256\":\"0x6cc7ca88848c2452afbf0b57160efdf8289cad985bcf369efe599c2bcc3cadd3\",\"license\":\"MIT\"},\"src/libraries/helpers/ImplementationInterfaceNames.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nlibrary ImplementationInterfaceNames {\\n  bytes32 public constant AccessController = 'AccessController';\\n}\\n\",\"keccak256\":\"0xa88dbe80d962115ad66d007f530ddf6713a9d612f77259293681404bca55810a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3985,"contract":"src/core/ImplementationManager.sol:ImplementationManager","label":"interfacesImplemented","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"}}},"userdoc":{"kind":"user","methods":{"changeImplementationAddress(bytes32,address)":{"notice":"Updates the address of the contract that implements `interfaceName`."},"getImplementationAddress(bytes32)":{"notice":"Gets the address of the contract that implements the given `interfaceName`."}},"version":1}}},"src/interfaces/IAccessController.sol":{"IAccessController":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"MAINTAINER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"MAINTAINER_ROLE()":"f8742254","MANAGER_ROLE()":"ec87621c","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAINTAINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAccessController.sol\":\"IAccessController\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"src/interfaces/IAccessController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {IAccessControl} from \\\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\\\";\\n\\ninterface IAccessController is IAccessControl {\\n  function MAINTAINER_ROLE() external view returns (bytes32);\\n  function MANAGER_ROLE() external view returns (bytes32);\\n\\n}\",\"keccak256\":\"0xd0b3c763ebdc8a64694959d9b799e401b1b791d1f6a4edb62764900a22b570c3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/interfaces/IImplementationManager.sol":{"IImplementationManager":{"abi":[{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"},{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"changeImplementationAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"}],"name":"getImplementationAddress","outputs":[{"internalType":"address","name":"implementationAddress","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"changeImplementationAddress(bytes32,address)":{"params":{"implementationAddress":"address of the deployed contract that implements the interface.","interfaceName":"bytes32 encoding of the interface name that is either changed or registered."}},"getImplementationAddress(bytes32)":{"params":{"interfaceName":"queried interface."},"returns":{"implementationAddress":"Address of the deployed contract that implements the interface."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"changeImplementationAddress(bytes32,address)":"31f9665e","getImplementationAddress(bytes32)":"aafd5e40"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"changeImplementationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"}],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"params\":{\"implementationAddress\":\"address of the deployed contract that implements the interface.\",\"interfaceName\":\"bytes32 encoding of the interface name that is either changed or registered.\"}},\"getImplementationAddress(bytes32)\":{\"params\":{\"interfaceName\":\"queried interface.\"},\"returns\":{\"implementationAddress\":\"Address of the deployed contract that implements the interface.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"notice\":\"Updates the address of the contract that implements `interfaceName`.\"},\"getImplementationAddress(bytes32)\":{\"notice\":\"Gets the address of the contract that implements the given `interfaceName`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IImplementationManager.sol\":\"IImplementationManager\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IImplementationManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IImplementationManager{\\n    /**\\n     * @notice Updates the address of the contract that implements `interfaceName`.\\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\\n     * @param implementationAddress address of the deployed contract that implements the interface.\\n     */\\n    function changeImplementationAddress(\\n        bytes32 interfaceName,\\n        address implementationAddress\\n    ) external;\\n\\n  /**\\n   * @notice Gets the address of the contract that implements the given `interfaceName`.\\n   * @param interfaceName queried interface.\\n   * @return implementationAddress Address of the deployed contract that implements the interface.\\n   */\\n  function getImplementationAddress(bytes32 interfaceName)\\n    external\\n    view\\n    returns (address implementationAddress);\\n\\n}\",\"keccak256\":\"0x77bef3e7ed09382acfe4011fdc7371857e6bd0b44b83c1534380cd5b9b29702e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"changeImplementationAddress(bytes32,address)":{"notice":"Updates the address of the contract that implements `interfaceName`."},"getImplementationAddress(bytes32)":{"notice":"Gets the address of the contract that implements the given `interfaceName`."}},"version":1}}},"src/interfaces/IRaffle.sol":{"IRaffle":{"abi":[{"inputs":[],"name":"claimPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimTicketSalesAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"drawnTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"nbOfTickets","type":"uint256"}],"name":"purchaseTickets","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"claimPrice()":{"details":"Ticket number must be draw and raffle close to new participants"},"claimTicketSalesAmount()":{"details":"The functions should send to the creator his part after fees"},"purchaseTickets(uint256)":{"details":"Only accessible if raffle still open to particpants","params":{"nbOfTickets":"number of tickets purchased"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"claimPrice()":"15d655c9","claimTicketSalesAmount()":"636ed74c","drawnTicket()":"ccf1125c","purchaseTickets(uint256)":"a1277600"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTicketSalesAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawnTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTickets\",\"type\":\"uint256\"}],\"name\":\"purchaseTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimPrice()\":{\"details\":\"Ticket number must be draw and raffle close to new participants\"},\"claimTicketSalesAmount()\":{\"details\":\"The functions should send to the creator his part after fees\"},\"purchaseTickets(uint256)\":{\"details\":\"Only accessible if raffle still open to particpants\",\"params\":{\"nbOfTickets\":\"number of tickets purchased\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimPrice()\":{\"notice\":\"Allows the winner to claim his price\"},\"claimTicketSalesAmount()\":{\"notice\":\"Allows the creator to claim the amount related to the ticket sales\"},\"drawnTicket()\":{\"notice\":\"Allows to drawn a ticket randommly\"},\"purchaseTickets(uint256)\":{\"notice\":\"Allows users to purchase tickets\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRaffle.sol\":\"IRaffle\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IRaffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IRaffle {\\n\\n    /**\\n     * @notice Allows users to purchase tickets\\n     * @dev Only accessible if raffle still open to particpants\\n     * @param nbOfTickets number of tickets purchased\\n     */\\n    function purchaseTickets(uint256 nbOfTickets) external;\\n\\n    /**\\n     * @notice Allows the winner to claim his price\\n     * @dev Ticket number must be draw and raffle close to new participants\\n     */\\n    function claimPrice() external;\\n    \\n    /**\\n     * @notice Allows the creator to claim the amount related to the ticket sales\\n     * @dev The functions should send to the creator his part after fees\\n     */\\n    function claimTicketSalesAmount() external;\\n    \\n    /**\\n     * @notice Allows to drawn a ticket randommly\\n     */\\n    function drawnTicket() external;\\n}\",\"keccak256\":\"0xbc7dcc7df434d185b76c666609157e15f0f9c237925a70cce85f8715a4ee2376\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"claimPrice()":{"notice":"Allows the winner to claim his price"},"claimTicketSalesAmount()":{"notice":"Allows the creator to claim the amount related to the ticket sales"},"drawnTicket()":{"notice":"Allows to drawn a ticket randommly"},"purchaseTickets(uint256)":{"notice":"Allows users to purchase tickets"}},"version":1}}},"src/libraries/helpers/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"BE_ADDRESS_0","type":"error"},{"inputs":[],"name":"CANT_BE_ZERO","type":"error"},{"inputs":[],"name":"IMPLEMENTATION_NOT_FOUND","type":"error"},{"inputs":[],"name":"MAX_TICKET_SUPPLY_EXCEEDED","type":"error"},{"inputs":[],"name":"MSG_SENDER_NOT_WINNER","type":"error"},{"inputs":[],"name":"NOT_ADDRESS_0","type":"error"},{"inputs":[],"name":"NOT_CREATOR","type":"error"},{"inputs":[],"name":"NOT_ENOUGH_BALANCE","type":"error"},{"inputs":[],"name":"NOT_MAINTAINER","type":"error"},{"inputs":[],"name":"RAFFLE_CLOSE","type":"error"},{"inputs":[],"name":"RAFFLE_STILL_OPEN","type":"error"},{"inputs":[],"name":"TICKET_ALREADY_DRAWN","type":"error"},{"inputs":[],"name":"TICKET_NOT_DRAWN","type":"error"}],"devdoc":{"kind":"dev","methods":{},"title":"Errors library","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209083dc1e6026b564d19705a266d5dc126b5adbfccef41669f970cd9b83cc1f8764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DUP4 0xDC 0x1E PUSH1 0x26 0xB5 PUSH5 0xD19705A266 0xD5 0xDC SLT PUSH12 0x5ADBFCCEF41669F970CD9B83 0xCC 0x1F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"179:973:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:973:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209083dc1e6026b564d19705a266d5dc126b5adbfccef41669f970cd9b83cc1f8764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DUP4 0xDC 0x1E PUSH1 0x26 0xB5 PUSH5 0xD19705A266 0xD5 0xDC SLT PUSH12 0x5ADBFCCEF41669F970CD9B83 0xCC 0x1F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"179:973:22:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BE_ADDRESS_0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CANT_BE_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IMPLEMENTATION_NOT_FOUND\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MAX_TICKET_SUPPLY_EXCEEDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MSG_SENDER_NOT_WINNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ADDRESS_0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_CREATOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_MAINTAINER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RAFFLE_CLOSE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RAFFLE_STILL_OPEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TICKET_ALREADY_DRAWN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TICKET_NOT_DRAWN\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the error messages emitted by the different contracts of the protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/helpers/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Errors library\\n * @notice Defines the error messages emitted by the different contracts of the protocol\\n */\\nlibrary Errors {\\n    error BE_ADDRESS_0(); // 'Address must be address(0)'\\n    error NOT_ADDRESS_0(); // 'Address must not be address(0)'\\n    error RAFFLE_CLOSE(); // 'Current timestamps greater or equal than the close time'\\n    error RAFFLE_STILL_OPEN(); // 'Current timestamps lesser or equal than the close time'\\n    error CANT_BE_ZERO(); // 'Value can't must be higher than 0'\\n    error MAX_TICKET_SUPPLY_EXCEEDED(); // 'Maximum amount of ticket sold for the raffle has been reached'\\n    error NOT_ENOUGH_BALANCE(); // 'Balance lower than required'\\n    error MSG_SENDER_NOT_WINNER(); // 'msg.sender is not winner address'\\n    error NOT_CREATOR(); // 'msg.sender is not the creator of the raffle'\\n    error TICKET_NOT_DRAWN(); // 'ticket must be drawn'\\n    error TICKET_ALREADY_DRAWN(); // 'ticket has already be drawn'\\n    error NOT_MAINTAINER(); // 'Caller is not the maintainer'\\n    error IMPLEMENTATION_NOT_FOUND(); // 'Implementation interfaces is not registered'\\n}\\n\\n \",\"keccak256\":\"0x6cc7ca88848c2452afbf0b57160efdf8289cad985bcf369efe599c2bcc3cadd3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Defines the error messages emitted by the different contracts of the protocol","version":1}}},"src/libraries/helpers/ImplementationInterfaceNames.sol":{"ImplementationInterfaceNames":{"abi":[{"inputs":[],"name":"AccessController","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6099610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063d4fc8823146038575b600080fd5b60516f20b1b1b2b9b9a1b7b73a3937b63632b960811b81565b60405190815260200160405180910390f3fea2646970667358221220ac6f6510a92d14995f9f750c29677bcc272b7c21a5d6fc0c27970a792e05967764736f6c63430008110033","opcodes":"PUSH1 0x99 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD4FC8823 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x51 PUSH16 0x20B1B1B2B9B9A1B7B73A3937B63632B9 PUSH1 0x81 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH16 0x6510A92D14995F9F750C29677BCC272B PUSH29 0x21A5D6FC0C27970A792E05967764736F6C634300081100330000000000 ","sourceMap":"57:105:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:105:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@AccessController_4177":{"entryPoint":null,"id":4177,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:201:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"123:76:29","statements":[{"nodeType":"YulAssignment","src":"133:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"145:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"156:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"141:3:29"},"nodeType":"YulFunctionCall","src":"141:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"133:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"175:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"186:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"168:6:29"},"nodeType":"YulFunctionCall","src":"168:25:29"},"nodeType":"YulExpressionStatement","src":"168:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"92:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"103:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"114:4:29","type":""}],"src":"14:185:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063d4fc8823146038575b600080fd5b60516f20b1b1b2b9b9a1b7b73a3937b63632b960811b81565b60405190815260200160405180910390f3fea2646970667358221220ac6f6510a92d14995f9f750c29677bcc272b7c21a5d6fc0c27970a792e05967764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD4FC8823 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x51 PUSH16 0x20B1B1B2B9B9A1B7B73A3937B63632B9 PUSH1 0x81 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH16 0x6510A92D14995F9F750C29677BCC272B PUSH29 0x21A5D6FC0C27970A792E05967764736F6C634300081100330000000000 ","sourceMap":"57:105:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;98:61;;-1:-1:-1;;;98:61:23;;;;;168:25:29;;;156:2;141:18;98:61:23;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"30600","executionCost":"115","totalCost":"30715"},"external":{"AccessController()":"151"}},"methodIdentifiers":{"AccessController()":"d4fc8823"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessController\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/helpers/ImplementationInterfaceNames.sol\":\"ImplementationInterfaceNames\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/helpers/ImplementationInterfaceNames.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nlibrary ImplementationInterfaceNames {\\n  bytes32 public constant AccessController = 'AccessController';\\n}\\n\",\"keccak256\":\"0xa88dbe80d962115ad66d007f530ddf6713a9d612f77259293681404bca55810a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/mocks/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint8","name":"_decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_4204":{"entryPoint":null,"id":4204,"parameterSlots":3,"returnSlots":0},"@_602":{"entryPoint":null,"id":602,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory":{"entryPoint":313,"id":null,"parameterSlots":2,"returnSlots":3},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":506,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":589,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":446,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":116,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4294:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:29"},"nodeType":"YulFunctionCall","src":"66:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:29"},"nodeType":"YulFunctionCall","src":"56:31:29"},"nodeType":"YulExpressionStatement","src":"56:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:29"},"nodeType":"YulFunctionCall","src":"96:15:29"},"nodeType":"YulExpressionStatement","src":"96:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:29"},"nodeType":"YulFunctionCall","src":"120:15:29"},"nodeType":"YulExpressionStatement","src":"120:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:29"},{"body":{"nodeType":"YulBlock","src":"210:776:29","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:29"},"nodeType":"YulFunctionCall","src":"261:12:29"},"nodeType":"YulExpressionStatement","src":"261:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:29"},"nodeType":"YulFunctionCall","src":"234:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:29"},"nodeType":"YulFunctionCall","src":"223:35:29"},"nodeType":"YulIf","src":"220:55:29"},{"nodeType":"YulVariableDeclaration","src":"284:23:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:29"},"nodeType":"YulFunctionCall","src":"294:13:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:29"},"nodeType":"YulFunctionCall","src":"330:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:29"},"nodeType":"YulFunctionCall","src":"326:18:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:29"},"nodeType":"YulFunctionCall","src":"369:18:29"},"nodeType":"YulExpressionStatement","src":"369:18:29"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:29"},"nodeType":"YulFunctionCall","src":"356:10:29"},"nodeType":"YulIf","src":"353:36:29"},{"nodeType":"YulVariableDeclaration","src":"398:17:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:29"},"nodeType":"YulFunctionCall","src":"408:7:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:29"},"nodeType":"YulFunctionCall","src":"438:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:29"},"nodeType":"YulFunctionCall","src":"498:13:29"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:29"},"nodeType":"YulFunctionCall","src":"494:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:29"},"nodeType":"YulFunctionCall","src":"490:31:29"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:29"},"nodeType":"YulFunctionCall","src":"486:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:29"},"nodeType":"YulFunctionCall","src":"474:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:29"},"nodeType":"YulFunctionCall","src":"588:18:29"},"nodeType":"YulExpressionStatement","src":"588:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:29"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:29"},"nodeType":"YulFunctionCall","src":"542:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:29"},"nodeType":"YulFunctionCall","src":"562:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:29"},"nodeType":"YulFunctionCall","src":"539:46:29"},"nodeType":"YulIf","src":"536:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:29"},"nodeType":"YulFunctionCall","src":"617:22:29"},"nodeType":"YulExpressionStatement","src":"617:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:29"},"nodeType":"YulFunctionCall","src":"648:18:29"},"nodeType":"YulExpressionStatement","src":"648:18:29"},{"nodeType":"YulVariableDeclaration","src":"675:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:29","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:29"},"nodeType":"YulFunctionCall","src":"737:12:29"},"nodeType":"YulExpressionStatement","src":"737:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:29"},"nodeType":"YulFunctionCall","src":"708:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:29"},"nodeType":"YulFunctionCall","src":"704:24:29"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:29"},"nodeType":"YulFunctionCall","src":"701:33:29"},"nodeType":"YulIf","src":"698:53:29"},{"nodeType":"YulVariableDeclaration","src":"760:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:29"},"nodeType":"YulFunctionCall","src":"850:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:29"},"nodeType":"YulFunctionCall","src":"846:23:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:29"},"nodeType":"YulFunctionCall","src":"881:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:29"},"nodeType":"YulFunctionCall","src":"877:23:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:29"},"nodeType":"YulFunctionCall","src":"871:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:29"},"nodeType":"YulFunctionCall","src":"839:63:29"},"nodeType":"YulExpressionStatement","src":"839:63:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:29"},"nodeType":"YulFunctionCall","src":"787:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:29","statements":[{"nodeType":"YulAssignment","src":"799:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:29"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:29"},"nodeType":"YulFunctionCall","src":"804:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:29","statements":[]},"src":"779:133:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:29"},"nodeType":"YulFunctionCall","src":"932:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:29"},"nodeType":"YulFunctionCall","src":"928:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:29"},"nodeType":"YulFunctionCall","src":"921:35:29"},"nodeType":"YulExpressionStatement","src":"921:35:29"},{"nodeType":"YulAssignment","src":"965:15:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:29"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:29","type":""}],"src":"146:840:29"},{"body":{"nodeType":"YulBlock","src":"1124:579:29","statements":[{"body":{"nodeType":"YulBlock","src":"1170:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1179:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1182:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1172:6:29"},"nodeType":"YulFunctionCall","src":"1172:12:29"},"nodeType":"YulExpressionStatement","src":"1172:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1154:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1141:3:29"},"nodeType":"YulFunctionCall","src":"1141:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1166:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1137:3:29"},"nodeType":"YulFunctionCall","src":"1137:32:29"},"nodeType":"YulIf","src":"1134:52:29"},{"nodeType":"YulVariableDeclaration","src":"1195:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1209:5:29"},"nodeType":"YulFunctionCall","src":"1209:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1199:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1234:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1252:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1256:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1248:3:29"},"nodeType":"YulFunctionCall","src":"1248:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1260:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1244:3:29"},"nodeType":"YulFunctionCall","src":"1244:18:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1238:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1289:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1298:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1301:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1291:6:29"},"nodeType":"YulFunctionCall","src":"1291:12:29"},"nodeType":"YulExpressionStatement","src":"1291:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1277:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1285:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1274:2:29"},"nodeType":"YulFunctionCall","src":"1274:14:29"},"nodeType":"YulIf","src":"1271:34:29"},{"nodeType":"YulAssignment","src":"1314:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1368:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:29"},"nodeType":"YulFunctionCall","src":"1353:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1324:28:29"},"nodeType":"YulFunctionCall","src":"1324:61:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1314:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1394:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:29"},"nodeType":"YulFunctionCall","src":"1416:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1410:5:29"},"nodeType":"YulFunctionCall","src":"1410:25:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1398:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:29"},"nodeType":"YulFunctionCall","src":"1466:12:29"},"nodeType":"YulExpressionStatement","src":"1466:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1450:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1460:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1447:2:29"},"nodeType":"YulFunctionCall","src":"1447:16:29"},"nodeType":"YulIf","src":"1444:36:29"},{"nodeType":"YulAssignment","src":"1489:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1532:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1543:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:29"},"nodeType":"YulFunctionCall","src":"1528:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1554:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1499:28:29"},"nodeType":"YulFunctionCall","src":"1499:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1489:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1571:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1594:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1605:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1590:3:29"},"nodeType":"YulFunctionCall","src":"1590:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1584:5:29"},"nodeType":"YulFunctionCall","src":"1584:25:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1575:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1657:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1666:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1659:6:29"},"nodeType":"YulFunctionCall","src":"1659:12:29"},"nodeType":"YulExpressionStatement","src":"1659:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1631:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1642:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1649:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1638:3:29"},"nodeType":"YulFunctionCall","src":"1638:16:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1628:2:29"},"nodeType":"YulFunctionCall","src":"1628:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1621:6:29"},"nodeType":"YulFunctionCall","src":"1621:35:29"},"nodeType":"YulIf","src":"1618:55:29"},{"nodeType":"YulAssignment","src":"1682:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1692:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1682:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1074:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1085:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1097:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1105:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1113:6:29","type":""}],"src":"991:712:29"},{"body":{"nodeType":"YulBlock","src":"1763:325:29","statements":[{"nodeType":"YulAssignment","src":"1773:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1787:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1790:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1783:3:29"},"nodeType":"YulFunctionCall","src":"1783:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1773:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1804:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1834:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1840:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1830:3:29"},"nodeType":"YulFunctionCall","src":"1830:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1808:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1881:31:29","statements":[{"nodeType":"YulAssignment","src":"1883:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1897:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1905:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1893:3:29"},"nodeType":"YulFunctionCall","src":"1893:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1883:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1861:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1854:6:29"},"nodeType":"YulFunctionCall","src":"1854:26:29"},"nodeType":"YulIf","src":"1851:61:29"},{"body":{"nodeType":"YulBlock","src":"1971:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1992:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1999:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2004:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1995:3:29"},"nodeType":"YulFunctionCall","src":"1995:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1985:6:29"},"nodeType":"YulFunctionCall","src":"1985:31:29"},"nodeType":"YulExpressionStatement","src":"1985:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2036:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2039:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2029:6:29"},"nodeType":"YulFunctionCall","src":"2029:15:29"},"nodeType":"YulExpressionStatement","src":"2029:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2064:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2067:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2057:6:29"},"nodeType":"YulFunctionCall","src":"2057:15:29"},"nodeType":"YulExpressionStatement","src":"2057:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1927:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1958:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1947:2:29"},"nodeType":"YulFunctionCall","src":"1947:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1924:2:29"},"nodeType":"YulFunctionCall","src":"1924:38:29"},"nodeType":"YulIf","src":"1921:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1743:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1752:6:29","type":""}],"src":"1708:380:29"},{"body":{"nodeType":"YulBlock","src":"2149:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2166:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2169:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2159:6:29"},"nodeType":"YulFunctionCall","src":"2159:14:29"},"nodeType":"YulExpressionStatement","src":"2159:14:29"},{"nodeType":"YulAssignment","src":"2182:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2200:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2203:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2190:9:29"},"nodeType":"YulFunctionCall","src":"2190:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2182:4:29"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2132:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2140:4:29","type":""}],"src":"2093:121:29"},{"body":{"nodeType":"YulBlock","src":"2300:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"2333:425:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2347:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2357:1:29","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2351:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2378:2:29"},{"name":"array","nodeType":"YulIdentifier","src":"2382:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:29"},"nodeType":"YulFunctionCall","src":"2371:17:29"},"nodeType":"YulExpressionStatement","src":"2371:17:29"},{"nodeType":"YulVariableDeclaration","src":"2401:31:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2423:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2427:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2413:9:29"},"nodeType":"YulFunctionCall","src":"2413:19:29"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2405:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2445:57:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2468:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2478:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2485:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2497:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:29"},"nodeType":"YulFunctionCall","src":"2481:19:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2474:3:29"},"nodeType":"YulFunctionCall","src":"2474:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2464:3:29"},"nodeType":"YulFunctionCall","src":"2464:38:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2449:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2539:23:29","statements":[{"nodeType":"YulAssignment","src":"2541:19:29","value":{"name":"data","nodeType":"YulIdentifier","src":"2556:4:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2541:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2521:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2533:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2518:2:29"},"nodeType":"YulFunctionCall","src":"2518:20:29"},"nodeType":"YulIf","src":"2515:47:29"},{"nodeType":"YulVariableDeclaration","src":"2575:41:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2589:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2599:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2606:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2611:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:29"},"nodeType":"YulFunctionCall","src":"2602:12:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2595:3:29"},"nodeType":"YulFunctionCall","src":"2595:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2585:3:29"},"nodeType":"YulFunctionCall","src":"2585:31:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2579:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2629:24:29","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2642:11:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2633:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2727:21:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2736:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2743:2:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2729:6:29"},"nodeType":"YulFunctionCall","src":"2729:17:29"},"nodeType":"YulExpressionStatement","src":"2729:17:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2677:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"2684:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2674:2:29"},"nodeType":"YulFunctionCall","src":"2674:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2688:26:29","statements":[{"nodeType":"YulAssignment","src":"2690:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2703:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2710:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:29"},"nodeType":"YulFunctionCall","src":"2699:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2690:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2670:3:29","statements":[]},"src":"2666:82:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2316:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2321:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2313:2:29"},"nodeType":"YulFunctionCall","src":"2313:11:29"},"nodeType":"YulIf","src":"2310:448:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2272:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2279:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2284:10:29","type":""}],"src":"2219:545:29"},{"body":{"nodeType":"YulBlock","src":"2854:81:29","statements":[{"nodeType":"YulAssignment","src":"2864:65:29","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2879:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2897:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2900:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2893:3:29"},"nodeType":"YulFunctionCall","src":"2893:11:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2910:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2906:3:29"},"nodeType":"YulFunctionCall","src":"2906:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2889:3:29"},"nodeType":"YulFunctionCall","src":"2889:24:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2885:3:29"},"nodeType":"YulFunctionCall","src":"2885:29:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2875:3:29"},"nodeType":"YulFunctionCall","src":"2875:40:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2924:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2917:3:29"},"nodeType":"YulFunctionCall","src":"2917:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2872:2:29"},"nodeType":"YulFunctionCall","src":"2872:57:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2864:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2831:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2837:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2845:4:29","type":""}],"src":"2769:166:29"},{"body":{"nodeType":"YulBlock","src":"3036:1256:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3046:24:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3066:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3060:5:29"},"nodeType":"YulFunctionCall","src":"3060:10:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3050:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3113:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3115:16:29"},"nodeType":"YulFunctionCall","src":"3115:18:29"},"nodeType":"YulExpressionStatement","src":"3115:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3085:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3101:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3105:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3097:3:29"},"nodeType":"YulFunctionCall","src":"3097:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"3109:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3093:3:29"},"nodeType":"YulFunctionCall","src":"3093:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3082:2:29"},"nodeType":"YulFunctionCall","src":"3082:30:29"},"nodeType":"YulIf","src":"3079:56:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3188:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3226:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3220:5:29"},"nodeType":"YulFunctionCall","src":"3220:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3194:25:29"},"nodeType":"YulFunctionCall","src":"3194:38:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3234:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3144:43:29"},"nodeType":"YulFunctionCall","src":"3144:97:29"},"nodeType":"YulExpressionStatement","src":"3144:97:29"},{"nodeType":"YulVariableDeclaration","src":"3250:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3267:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3254:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3277:23:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3296:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3281:11:29","type":""}]},{"nodeType":"YulAssignment","src":"3309:24:29","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3322:11:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3309:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3379:656:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3393:35:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3412:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3424:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3420:3:29"},"nodeType":"YulFunctionCall","src":"3420:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3408:3:29"},"nodeType":"YulFunctionCall","src":"3408:20:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3397:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3441:49:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3485:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3455:29:29"},"nodeType":"YulFunctionCall","src":"3455:35:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3445:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3503:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3512:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3507:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3590:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3615:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3633:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3638:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3629:3:29"},"nodeType":"YulFunctionCall","src":"3629:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3623:5:29"},"nodeType":"YulFunctionCall","src":"3623:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3608:6:29"},"nodeType":"YulFunctionCall","src":"3608:42:29"},"nodeType":"YulExpressionStatement","src":"3608:42:29"},{"nodeType":"YulAssignment","src":"3667:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3681:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3689:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:29"},"nodeType":"YulFunctionCall","src":"3677:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3667:6:29"}]},{"nodeType":"YulAssignment","src":"3708:40:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3725:9:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3736:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:29"},"nodeType":"YulFunctionCall","src":"3721:27:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3708:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3537:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3540:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3534:2:29"},"nodeType":"YulFunctionCall","src":"3534:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3549:28:29","statements":[{"nodeType":"YulAssignment","src":"3551:24:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3560:1:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3563:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:29"},"nodeType":"YulFunctionCall","src":"3556:19:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3551:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3530:3:29","statements":[]},"src":"3526:236:29"},{"body":{"nodeType":"YulBlock","src":"3810:166:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3828:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3855:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3860:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:29"},"nodeType":"YulFunctionCall","src":"3851:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3845:5:29"},"nodeType":"YulFunctionCall","src":"3845:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3832:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3895:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3907:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:1:29","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3937:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3930:3:29"},"nodeType":"YulFunctionCall","src":"3930:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3946:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3926:3:29"},"nodeType":"YulFunctionCall","src":"3926:24:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3956:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3952:3:29"},"nodeType":"YulFunctionCall","src":"3952:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3922:3:29"},"nodeType":"YulFunctionCall","src":"3922:37:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3918:3:29"},"nodeType":"YulFunctionCall","src":"3918:42:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3903:3:29"},"nodeType":"YulFunctionCall","src":"3903:58:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3888:6:29"},"nodeType":"YulFunctionCall","src":"3888:74:29"},"nodeType":"YulExpressionStatement","src":"3888:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3781:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3790:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3778:2:29"},"nodeType":"YulFunctionCall","src":"3778:19:29"},"nodeType":"YulIf","src":"3775:201:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3996:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:29","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4013:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4006:3:29"},"nodeType":"YulFunctionCall","src":"4006:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"4022:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4002:3:29"},"nodeType":"YulFunctionCall","src":"4002:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3989:6:29"},"nodeType":"YulFunctionCall","src":"3989:36:29"},"nodeType":"YulExpressionStatement","src":"3989:36:29"}]},"nodeType":"YulCase","src":"3372:663:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3377:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4052:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4066:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4079:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4070:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4115:67:29","statements":[{"nodeType":"YulAssignment","src":"4133:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4152:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4157:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:29"},"nodeType":"YulFunctionCall","src":"4148:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4142:5:29"},"nodeType":"YulFunctionCall","src":"4142:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4133:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4096:6:29"},"nodeType":"YulIf","src":"4093:89:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4202:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4261:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"4268:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4208:52:29"},"nodeType":"YulFunctionCall","src":"4208:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4195:6:29"},"nodeType":"YulFunctionCall","src":"4195:81:29"},"nodeType":"YulExpressionStatement","src":"4195:81:29"}]},"nodeType":"YulCase","src":"4044:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3352:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3360:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:29"},"nodeType":"YulFunctionCall","src":"3349:14:29"},"nodeType":"YulSwitch","src":"3342:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3021:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"3027:3:29","type":""}],"src":"2940:1352:29"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000dd138038062000dd1833981016040819052620000349162000139565b828260036200004483826200024d565b5060046200005382826200024d565b50506005805460ff191660ff93909316929092179091555062000319915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009c57600080fd5b81516001600160401b0380821115620000b957620000b962000074565b604051601f8301601f19908116603f01168101908282118183101715620000e457620000e462000074565b816040528381526020925086838588010111156200010157600080fd5b600091505b8382101562000125578582018301518183018401529082019062000106565b600093810190920192909252949350505050565b6000806000606084860312156200014f57600080fd5b83516001600160401b03808211156200016757600080fd5b62000175878388016200008a565b945060208601519150808211156200018c57600080fd5b506200019b868287016200008a565b925050604084015160ff81168114620001b357600080fd5b809150509250925092565b600181811c90821680620001d357607f821691505b602082108103620001f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024857600081815260208120601f850160051c81016020861015620002235750805b601f850160051c820191505b8181101562000244578281556001016200022f565b5050505b505050565b81516001600160401b0381111562000269576200026962000074565b62000281816200027a8454620001be565b84620001fa565b602080601f831160018114620002b95760008415620002a05750858301515b600019600386901b1c1916600185901b17855562000244565b600085815260208120601f198616915b82811015620002ea57888601518255948401946001909101908401620002c9565b5085821015620003095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610aa880620003296000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101a8578063a457c2d7146101bb578063a9059cbb146101ce578063dd62ed3e146101e157600080fd5b806340c10f191461016257806370a082311461017757806395d89b41146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101f4565b6040516100e991906108f2565b60405180910390f35b61010561010036600461095c565b610286565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610986565b6102a0565b60055460405160ff90911681526020016100e9565b61010561015d36600461095c565b6102c4565b61017561017036600461095c565b6102e6565b005b6101196101853660046109c2565b6001600160a01b031660009081526020819052604090205490565b6100dc6102f4565b6101756101b636600461095c565b610303565b6101056101c936600461095c565b61030d565b6101056101dc36600461095c565b61038d565b6101196101ef3660046109e4565b61039b565b60606003805461020390610a17565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610a17565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856103c6565b60019150505b92915050565b6000336102ae8582856104eb565b6102b9858585610565565b506001949350505050565b6000336102948185856102d7838361039b565b6102e19190610a51565b6103c6565b6102f08282610709565b5050565b60606004805461020390610a17565b6102f082826107c8565b6000338161031b828661039b565b9050838110156103805760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b982868684036103c6565b600033610294818585610565565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610377565b6001600160a01b0382166104895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610377565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104f7848461039b565b9050600019811461055f57818110156105525760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610377565b61055f84848484036103c6565b50505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610377565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610377565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610377565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361055f565b6001600160a01b03821661075f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610377565b80600260008282546107719190610a51565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610377565b6001600160a01b0382166000908152602081905260409020548181101561089c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610377565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104de565b600060208083528351808285015260005b8181101561091f57858101830151858201604001528201610903565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095757600080fd5b919050565b6000806040838503121561096f57600080fd5b61097883610940565b946020939093013593505050565b60008060006060848603121561099b57600080fd5b6109a484610940565b92506109b260208501610940565b9150604084013590509250925092565b6000602082840312156109d457600080fd5b6109dd82610940565b9392505050565b600080604083850312156109f757600080fd5b610a0083610940565b9150610a0e60208401610940565b90509250929050565b600181811c90821680610a2b57607f821691505b602082108103610a4b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea26469706673582212207e55e648709aac154da3492755639834648ff15e5830963554bf744044954d0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDD1 CODESIZE SUB DUP1 PUSH3 0xDD1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x139 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x24D JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x24D JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x319 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xB9 JUMPI PUSH3 0xB9 PUSH3 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xE4 JUMPI PUSH3 0xE4 PUSH3 0x74 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x125 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x106 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x175 DUP8 DUP4 DUP9 ADD PUSH3 0x8A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x19B DUP7 DUP3 DUP8 ADD PUSH3 0x8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1D3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x223 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x244 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x22F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x269 JUMPI PUSH3 0x269 PUSH3 0x74 JUMP JUMPDEST PUSH3 0x281 DUP2 PUSH3 0x27A DUP5 SLOAD PUSH3 0x1BE JUMP JUMPDEST DUP5 PUSH3 0x1FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2B9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2A0 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x244 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2EA JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2C9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x309 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAA8 DUP1 PUSH3 0x329 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22F SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x251 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP6 DUP3 DUP6 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x2B9 DUP6 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x2D7 DUP4 DUP4 PUSH2 0x39B JUMP JUMPDEST PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x709 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x31B DUP3 DUP7 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP5 DUP5 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x55F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST PUSH2 0x55F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x91F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x903 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x978 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A4 DUP5 PUSH2 0x940 JUMP JUMPDEST SWAP3 POP PUSH2 0x9B2 PUSH1 0x20 DUP6 ADD PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x940 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA00 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E PUSH1 0x20 DUP5 ADD PUSH2 0x940 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x55E648709AAC154DA3492755639834648FF15E5830963554BF744044954D00 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"140:487:24:-:0;;;200:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;295:5;302:7;2046:5:3;:13;295:5:24;2046::3;:13;:::i;:::-;-1:-1:-1;2069:7:3;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;317:9:24::1;:21:::0;;-1:-1:-1;;317:21:24::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;140:487:24;;-1:-1:-1;;140:487:24;14:127:29;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:29;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:29;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:29:o;991:712::-;1097:6;1105;1113;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1209:16;;-1:-1:-1;;;;;1274:14:29;;;1271:34;;;1301:1;1298;1291:12;1271:34;1324:61;1377:7;1368:6;1357:9;1353:22;1324:61;:::i;:::-;1314:71;;1431:2;1420:9;1416:18;1410:25;1394:41;;1460:2;1450:8;1447:16;1444:36;;;1476:1;1473;1466:12;1444:36;;1499:63;1554:7;1543:8;1532:9;1528:24;1499:63;:::i;:::-;1489:73;;;1605:2;1594:9;1590:18;1584:25;1649:4;1642:5;1638:16;1631:5;1628:27;1618:55;;1669:1;1666;1659:12;1618:55;1692:5;1682:15;;;991:712;;;;;:::o;1708:380::-;1787:1;1783:12;;;;1830;;;1851:61;;1905:4;1897:6;1893:17;1883:27;;1851:61;1958:2;1950:6;1947:14;1927:18;1924:38;1921:161;;2004:10;1999:3;1995:20;1992:1;1985:31;2039:4;2036:1;2029:15;2067:4;2064:1;2057:15;1921:161;;1708:380;;;:::o;2219:545::-;2321:2;2316:3;2313:11;2310:448;;;2357:1;2382:5;2378:2;2371:17;2427:4;2423:2;2413:19;2497:2;2485:10;2481:19;2478:1;2474:27;2468:4;2464:38;2533:4;2521:10;2518:20;2515:47;;;-1:-1:-1;2556:4:29;2515:47;2611:2;2606:3;2602:12;2599:1;2595:20;2589:4;2585:31;2575:41;;2666:82;2684:2;2677:5;2674:13;2666:82;;;2729:17;;;2710:1;2699:13;2666:82;;;2670:3;;;2310:448;2219:545;;;:::o;2940:1352::-;3060:10;;-1:-1:-1;;;;;3082:30:29;;3079:56;;;3115:18;;:::i;:::-;3144:97;3234:6;3194:38;3226:4;3220:11;3194:38;:::i;:::-;3188:4;3144:97;:::i;:::-;3296:4;;3360:2;3349:14;;3377:1;3372:663;;;;4079:1;4096:6;4093:89;;;-1:-1:-1;4148:19:29;;;4142:26;4093:89;-1:-1:-1;;2897:1:29;2893:11;;;2889:24;2885:29;2875:40;2921:1;2917:11;;;2872:57;4195:81;;3342:944;;3372:663;2166:1;2159:14;;;2203:4;2190:18;;-1:-1:-1;;3408:20:29;;;3526:236;3540:7;3537:1;3534:14;3526:236;;;3629:19;;;3623:26;3608:42;;3721:27;;;;3689:1;3677:14;;;;3556:19;;3526:236;;;3530:3;3790:6;3781:7;3778:19;3775:201;;;3851:19;;;3845:26;-1:-1:-1;;3934:1:29;3930:14;;;3946:3;3926:24;3922:37;3918:42;3903:58;3888:74;;3775:201;-1:-1:-1;;;;;4022:1:29;4006:14;;;4002:22;3989:36;;-1:-1:-1;2940:1352:29:o;:::-;140:487:24;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1143":{"entryPoint":null,"id":1143,"parameterSlots":3,"returnSlots":0},"@_approve_1078":{"entryPoint":966,"id":1078,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1132":{"entryPoint":null,"id":1132,"parameterSlots":3,"returnSlots":0},"@_burn_1033":{"entryPoint":1992,"id":1033,"parameterSlots":2,"returnSlots":0},"@_mint_961":{"entryPoint":1801,"id":961,"parameterSlots":2,"returnSlots":0},"@_msgSender_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1121":{"entryPoint":1259,"id":1121,"parameterSlots":3,"returnSlots":0},"@_transfer_904":{"entryPoint":1381,"id":904,"parameterSlots":3,"returnSlots":0},"@allowance_699":{"entryPoint":923,"id":699,"parameterSlots":2,"returnSlots":1},"@approve_724":{"entryPoint":646,"id":724,"parameterSlots":2,"returnSlots":1},"@balanceOf_656":{"entryPoint":null,"id":656,"parameterSlots":1,"returnSlots":1},"@burn_4230":{"entryPoint":771,"id":4230,"parameterSlots":2,"returnSlots":0},"@decimals_4239":{"entryPoint":null,"id":4239,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_827":{"entryPoint":781,"id":827,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_786":{"entryPoint":708,"id":786,"parameterSlots":2,"returnSlots":1},"@mint_4217":{"entryPoint":742,"id":4217,"parameterSlots":2,"returnSlots":0},"@name_612":{"entryPoint":500,"id":612,"parameterSlots":0,"returnSlots":1},"@symbol_622":{"entryPoint":756,"id":622,"parameterSlots":0,"returnSlots":1},"@totalSupply_642":{"entryPoint":null,"id":642,"parameterSlots":0,"returnSlots":1},"@transferFrom_757":{"entryPoint":672,"id":757,"parameterSlots":3,"returnSlots":1},"@transfer_681":{"entryPoint":909,"id":681,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2368,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2532,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2438,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2396,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2641,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2583,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6919:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:29","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:29"},"nodeType":"YulFunctionCall","src":"166:21:29"},"nodeType":"YulExpressionStatement","src":"166:21:29"},{"nodeType":"YulVariableDeclaration","src":"196:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:29"},"nodeType":"YulFunctionCall","src":"210:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:29"},"nodeType":"YulFunctionCall","src":"239:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:29"},"nodeType":"YulFunctionCall","src":"232:34:29"},"nodeType":"YulExpressionStatement","src":"232:34:29"},{"nodeType":"YulVariableDeclaration","src":"275:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:29"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:29"},"nodeType":"YulFunctionCall","src":"369:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:29"},"nodeType":"YulFunctionCall","src":"365:26:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:29"},"nodeType":"YulFunctionCall","src":"403:14:29"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:23:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:29"},"nodeType":"YulFunctionCall","src":"393:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:29"},"nodeType":"YulFunctionCall","src":"358:66:29"},"nodeType":"YulExpressionStatement","src":"358:66:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:29"},"nodeType":"YulFunctionCall","src":"302:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:29","statements":[{"nodeType":"YulAssignment","src":"318:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:29"},"nodeType":"YulFunctionCall","src":"323:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:29","statements":[]},"src":"294:140:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:29"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:29"},"nodeType":"YulFunctionCall","src":"454:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:29"},"nodeType":"YulFunctionCall","src":"450:31:29"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:29"},"nodeType":"YulFunctionCall","src":"443:42:29"},"nodeType":"YulExpressionStatement","src":"443:42:29"},{"nodeType":"YulAssignment","src":"494:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:29"},"nodeType":"YulFunctionCall","src":"525:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:29"},"nodeType":"YulFunctionCall","src":"542:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:29"},"nodeType":"YulFunctionCall","src":"521:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:29"},"nodeType":"YulFunctionCall","src":"506:45:29"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:29"},"nodeType":"YulFunctionCall","src":"502:54:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:29","type":""}],"src":"14:548:29"},{"body":{"nodeType":"YulBlock","src":"616:124:29","statements":[{"nodeType":"YulAssignment","src":"626:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:29"},"nodeType":"YulFunctionCall","src":"635:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:29"}]},{"body":{"nodeType":"YulBlock","src":"718:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:29"},"nodeType":"YulFunctionCall","src":"720:12:29"},"nodeType":"YulExpressionStatement","src":"720:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:29"},"nodeType":"YulFunctionCall","src":"699:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:29"},"nodeType":"YulFunctionCall","src":"695:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:29"},"nodeType":"YulFunctionCall","src":"684:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:29"},"nodeType":"YulFunctionCall","src":"674:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:29"},"nodeType":"YulFunctionCall","src":"667:50:29"},"nodeType":"YulIf","src":"664:70:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:29","type":""}],"src":"567:173:29"},{"body":{"nodeType":"YulBlock","src":"832:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:29"},"nodeType":"YulFunctionCall","src":"880:12:29"},"nodeType":"YulExpressionStatement","src":"880:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:29"},"nodeType":"YulFunctionCall","src":"849:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:29"},"nodeType":"YulFunctionCall","src":"845:32:29"},"nodeType":"YulIf","src":"842:52:29"},{"nodeType":"YulAssignment","src":"903:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:29"},"nodeType":"YulFunctionCall","src":"913:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:29"}]},{"nodeType":"YulAssignment","src":"951:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:29"},"nodeType":"YulFunctionCall","src":"974:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:29"},"nodeType":"YulFunctionCall","src":"961:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:29","type":""}],"src":"745:254:29"},{"body":{"nodeType":"YulBlock","src":"1099:92:29","statements":[{"nodeType":"YulAssignment","src":"1109:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:29"},"nodeType":"YulFunctionCall","src":"1117:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:29"},"nodeType":"YulFunctionCall","src":"1169:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:29"},"nodeType":"YulFunctionCall","src":"1162:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:29"},"nodeType":"YulFunctionCall","src":"1144:41:29"},"nodeType":"YulExpressionStatement","src":"1144:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:29","type":""}],"src":"1004:187:29"},{"body":{"nodeType":"YulBlock","src":"1297:76:29","statements":[{"nodeType":"YulAssignment","src":"1307:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:29"},"nodeType":"YulFunctionCall","src":"1315:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:29"},"nodeType":"YulFunctionCall","src":"1342:25:29"},"nodeType":"YulExpressionStatement","src":"1342:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:29","type":""}],"src":"1196:177:29"},{"body":{"nodeType":"YulBlock","src":"1482:224:29","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:29"},"nodeType":"YulFunctionCall","src":"1530:12:29"},"nodeType":"YulExpressionStatement","src":"1530:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:29"},"nodeType":"YulFunctionCall","src":"1499:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:29"},"nodeType":"YulFunctionCall","src":"1495:32:29"},"nodeType":"YulIf","src":"1492:52:29"},{"nodeType":"YulAssignment","src":"1553:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:29"},"nodeType":"YulFunctionCall","src":"1563:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:29"}]},{"nodeType":"YulAssignment","src":"1601:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:29"},"nodeType":"YulFunctionCall","src":"1630:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:29"},"nodeType":"YulFunctionCall","src":"1611:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:29"}]},{"nodeType":"YulAssignment","src":"1658:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:29"},"nodeType":"YulFunctionCall","src":"1681:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:29"},"nodeType":"YulFunctionCall","src":"1668:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:29","type":""}],"src":"1378:328:29"},{"body":{"nodeType":"YulBlock","src":"1808:87:29","statements":[{"nodeType":"YulAssignment","src":"1818:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:29"},"nodeType":"YulFunctionCall","src":"1826:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:29"},"nodeType":"YulFunctionCall","src":"1871:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:29"},"nodeType":"YulFunctionCall","src":"1853:36:29"},"nodeType":"YulExpressionStatement","src":"1853:36:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:29","type":""}],"src":"1711:184:29"},{"body":{"nodeType":"YulBlock","src":"1970:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:29"},"nodeType":"YulFunctionCall","src":"2018:12:29"},"nodeType":"YulExpressionStatement","src":"2018:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:29"},"nodeType":"YulFunctionCall","src":"1987:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:29"},"nodeType":"YulFunctionCall","src":"1983:32:29"},"nodeType":"YulIf","src":"1980:52:29"},{"nodeType":"YulAssignment","src":"2041:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:29"},"nodeType":"YulFunctionCall","src":"2051:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:29","type":""}],"src":"1900:186:29"},{"body":{"nodeType":"YulBlock","src":"2178:173:29","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:29"},"nodeType":"YulFunctionCall","src":"2226:12:29"},"nodeType":"YulExpressionStatement","src":"2226:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:29"},"nodeType":"YulFunctionCall","src":"2195:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:29"},"nodeType":"YulFunctionCall","src":"2191:32:29"},"nodeType":"YulIf","src":"2188:52:29"},{"nodeType":"YulAssignment","src":"2249:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:29"},"nodeType":"YulFunctionCall","src":"2259:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:29"}]},{"nodeType":"YulAssignment","src":"2297:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:29"},"nodeType":"YulFunctionCall","src":"2326:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:29"},"nodeType":"YulFunctionCall","src":"2307:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:29","type":""}],"src":"2091:260:29"},{"body":{"nodeType":"YulBlock","src":"2411:325:29","statements":[{"nodeType":"YulAssignment","src":"2421:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:29"},"nodeType":"YulFunctionCall","src":"2431:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:29"},"nodeType":"YulFunctionCall","src":"2478:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:29","statements":[{"nodeType":"YulAssignment","src":"2531:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:29"},"nodeType":"YulFunctionCall","src":"2541:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:29"},"nodeType":"YulFunctionCall","src":"2502:26:29"},"nodeType":"YulIf","src":"2499:61:29"},{"body":{"nodeType":"YulBlock","src":"2619:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:29"},"nodeType":"YulFunctionCall","src":"2643:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:29"},"nodeType":"YulFunctionCall","src":"2633:31:29"},"nodeType":"YulExpressionStatement","src":"2633:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:29"},"nodeType":"YulFunctionCall","src":"2677:15:29"},"nodeType":"YulExpressionStatement","src":"2677:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:29"},"nodeType":"YulFunctionCall","src":"2705:15:29"},"nodeType":"YulExpressionStatement","src":"2705:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:29"},"nodeType":"YulFunctionCall","src":"2595:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:29"},"nodeType":"YulFunctionCall","src":"2572:38:29"},"nodeType":"YulIf","src":"2569:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:29","type":""}],"src":"2356:380:29"},{"body":{"nodeType":"YulBlock","src":"2789:174:29","statements":[{"nodeType":"YulAssignment","src":"2799:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:29"},"nodeType":"YulFunctionCall","src":"2806:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:29"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:29"},"nodeType":"YulFunctionCall","src":"2870:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:29"},"nodeType":"YulFunctionCall","src":"2860:31:29"},"nodeType":"YulExpressionStatement","src":"2860:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:29"},"nodeType":"YulFunctionCall","src":"2904:15:29"},"nodeType":"YulExpressionStatement","src":"2904:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:29"},"nodeType":"YulFunctionCall","src":"2932:15:29"},"nodeType":"YulExpressionStatement","src":"2932:15:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:29"},"nodeType":"YulFunctionCall","src":"2827:10:29"},"nodeType":"YulIf","src":"2824:133:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:29","type":""}],"src":"2741:222:29"},{"body":{"nodeType":"YulBlock","src":"3142:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:29"},"nodeType":"YulFunctionCall","src":"3152:21:29"},"nodeType":"YulExpressionStatement","src":"3152:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:29"},"nodeType":"YulFunctionCall","src":"3189:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:29"},"nodeType":"YulFunctionCall","src":"3182:30:29"},"nodeType":"YulExpressionStatement","src":"3182:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:29"},"nodeType":"YulFunctionCall","src":"3228:18:29"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:29","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:29"},"nodeType":"YulFunctionCall","src":"3221:62:29"},"nodeType":"YulExpressionStatement","src":"3221:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:29"},"nodeType":"YulFunctionCall","src":"3299:18:29"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:29","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:29"},"nodeType":"YulFunctionCall","src":"3292:35:29"},"nodeType":"YulExpressionStatement","src":"3292:35:29"},{"nodeType":"YulAssignment","src":"3336:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:29"},"nodeType":"YulFunctionCall","src":"3344:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:29","type":""}],"src":"2968:401:29"},{"body":{"nodeType":"YulBlock","src":"3548:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:29"},"nodeType":"YulFunctionCall","src":"3558:21:29"},"nodeType":"YulExpressionStatement","src":"3558:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:29"},"nodeType":"YulFunctionCall","src":"3595:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:29"},"nodeType":"YulFunctionCall","src":"3588:30:29"},"nodeType":"YulExpressionStatement","src":"3588:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:29"},"nodeType":"YulFunctionCall","src":"3634:18:29"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:29","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:29"},"nodeType":"YulFunctionCall","src":"3627:62:29"},"nodeType":"YulExpressionStatement","src":"3627:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:29"},"nodeType":"YulFunctionCall","src":"3705:18:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:29"},"nodeType":"YulFunctionCall","src":"3698:34:29"},"nodeType":"YulExpressionStatement","src":"3698:34:29"},{"nodeType":"YulAssignment","src":"3741:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:29"},"nodeType":"YulFunctionCall","src":"3749:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:29","type":""}],"src":"3374:400:29"},{"body":{"nodeType":"YulBlock","src":"3953:224:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:29"},"nodeType":"YulFunctionCall","src":"3963:21:29"},"nodeType":"YulExpressionStatement","src":"3963:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:29"},"nodeType":"YulFunctionCall","src":"4000:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:29","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:29"},"nodeType":"YulFunctionCall","src":"3993:30:29"},"nodeType":"YulExpressionStatement","src":"3993:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:29"},"nodeType":"YulFunctionCall","src":"4039:18:29"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:29","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:29"},"nodeType":"YulFunctionCall","src":"4032:62:29"},"nodeType":"YulExpressionStatement","src":"4032:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:29"},"nodeType":"YulFunctionCall","src":"4110:18:29"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:29","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:29"},"nodeType":"YulFunctionCall","src":"4103:32:29"},"nodeType":"YulExpressionStatement","src":"4103:32:29"},{"nodeType":"YulAssignment","src":"4144:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:29"},"nodeType":"YulFunctionCall","src":"4152:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:29","type":""}],"src":"3779:398:29"},{"body":{"nodeType":"YulBlock","src":"4356:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:29"},"nodeType":"YulFunctionCall","src":"4366:21:29"},"nodeType":"YulExpressionStatement","src":"4366:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:29"},"nodeType":"YulFunctionCall","src":"4403:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:29"},"nodeType":"YulFunctionCall","src":"4396:30:29"},"nodeType":"YulExpressionStatement","src":"4396:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:29"},"nodeType":"YulFunctionCall","src":"4442:18:29"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:29","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:29"},"nodeType":"YulFunctionCall","src":"4435:59:29"},"nodeType":"YulExpressionStatement","src":"4435:59:29"},{"nodeType":"YulAssignment","src":"4503:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:29"},"nodeType":"YulFunctionCall","src":"4511:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:29","type":""}],"src":"4182:353:29"},{"body":{"nodeType":"YulBlock","src":"4714:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:29"},"nodeType":"YulFunctionCall","src":"4724:21:29"},"nodeType":"YulExpressionStatement","src":"4724:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:29"},"nodeType":"YulFunctionCall","src":"4761:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:29"},"nodeType":"YulFunctionCall","src":"4754:30:29"},"nodeType":"YulExpressionStatement","src":"4754:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:29"},"nodeType":"YulFunctionCall","src":"4800:18:29"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:29","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:29"},"nodeType":"YulFunctionCall","src":"4793:62:29"},"nodeType":"YulExpressionStatement","src":"4793:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:29"},"nodeType":"YulFunctionCall","src":"4871:18:29"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:29","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:29"},"nodeType":"YulFunctionCall","src":"4864:35:29"},"nodeType":"YulExpressionStatement","src":"4864:35:29"},{"nodeType":"YulAssignment","src":"4908:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:29"},"nodeType":"YulFunctionCall","src":"4916:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:29","type":""}],"src":"4540:401:29"},{"body":{"nodeType":"YulBlock","src":"5120:225:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:29"},"nodeType":"YulFunctionCall","src":"5130:21:29"},"nodeType":"YulExpressionStatement","src":"5130:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:29"},"nodeType":"YulFunctionCall","src":"5167:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:29","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:29"},"nodeType":"YulFunctionCall","src":"5160:30:29"},"nodeType":"YulExpressionStatement","src":"5160:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:29"},"nodeType":"YulFunctionCall","src":"5206:18:29"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:29","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:29"},"nodeType":"YulFunctionCall","src":"5199:62:29"},"nodeType":"YulExpressionStatement","src":"5199:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:29"},"nodeType":"YulFunctionCall","src":"5277:18:29"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:29","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:29"},"nodeType":"YulFunctionCall","src":"5270:33:29"},"nodeType":"YulExpressionStatement","src":"5270:33:29"},{"nodeType":"YulAssignment","src":"5312:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:29"},"nodeType":"YulFunctionCall","src":"5320:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:29","type":""}],"src":"4946:399:29"},{"body":{"nodeType":"YulBlock","src":"5524:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:29"},"nodeType":"YulFunctionCall","src":"5534:21:29"},"nodeType":"YulExpressionStatement","src":"5534:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:29"},"nodeType":"YulFunctionCall","src":"5571:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:29"},"nodeType":"YulFunctionCall","src":"5564:30:29"},"nodeType":"YulExpressionStatement","src":"5564:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:29"},"nodeType":"YulFunctionCall","src":"5610:18:29"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:29","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:29"},"nodeType":"YulFunctionCall","src":"5603:62:29"},"nodeType":"YulExpressionStatement","src":"5603:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:29"},"nodeType":"YulFunctionCall","src":"5681:18:29"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:29","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:29"},"nodeType":"YulFunctionCall","src":"5674:36:29"},"nodeType":"YulExpressionStatement","src":"5674:36:29"},{"nodeType":"YulAssignment","src":"5719:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:29"},"nodeType":"YulFunctionCall","src":"5727:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:29","type":""}],"src":"5350:402:29"},{"body":{"nodeType":"YulBlock","src":"5931:181:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5959:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5941:6:29"},"nodeType":"YulFunctionCall","src":"5941:21:29"},"nodeType":"YulExpressionStatement","src":"5941:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5993:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:29"},"nodeType":"YulFunctionCall","src":"5978:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5998:2:29","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5971:6:29"},"nodeType":"YulFunctionCall","src":"5971:30:29"},"nodeType":"YulExpressionStatement","src":"5971:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6021:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6032:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:29"},"nodeType":"YulFunctionCall","src":"6017:18:29"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"6037:33:29","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6010:6:29"},"nodeType":"YulFunctionCall","src":"6010:61:29"},"nodeType":"YulExpressionStatement","src":"6010:61:29"},{"nodeType":"YulAssignment","src":"6080:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6092:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6088:3:29"},"nodeType":"YulFunctionCall","src":"6088:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6080:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5908:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5922:4:29","type":""}],"src":"5757:355:29"},{"body":{"nodeType":"YulBlock","src":"6291:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6308:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6319:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6301:6:29"},"nodeType":"YulFunctionCall","src":"6301:21:29"},"nodeType":"YulExpressionStatement","src":"6301:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6342:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6353:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:29"},"nodeType":"YulFunctionCall","src":"6338:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6358:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6331:6:29"},"nodeType":"YulFunctionCall","src":"6331:30:29"},"nodeType":"YulExpressionStatement","src":"6331:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6392:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:29"},"nodeType":"YulFunctionCall","src":"6377:18:29"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"6397:34:29","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6370:6:29"},"nodeType":"YulFunctionCall","src":"6370:62:29"},"nodeType":"YulExpressionStatement","src":"6370:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6452:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6463:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6448:3:29"},"nodeType":"YulFunctionCall","src":"6448:18:29"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"6468:3:29","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6441:6:29"},"nodeType":"YulFunctionCall","src":"6441:31:29"},"nodeType":"YulExpressionStatement","src":"6441:31:29"},{"nodeType":"YulAssignment","src":"6481:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6493:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6504:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6489:3:29"},"nodeType":"YulFunctionCall","src":"6489:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6481:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6282:4:29","type":""}],"src":"6117:397:29"},{"body":{"nodeType":"YulBlock","src":"6693:224:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6710:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6721:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6703:6:29"},"nodeType":"YulFunctionCall","src":"6703:21:29"},"nodeType":"YulExpressionStatement","src":"6703:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6744:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6755:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6740:3:29"},"nodeType":"YulFunctionCall","src":"6740:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6760:2:29","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6733:6:29"},"nodeType":"YulFunctionCall","src":"6733:30:29"},"nodeType":"YulExpressionStatement","src":"6733:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6783:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6794:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:29"},"nodeType":"YulFunctionCall","src":"6779:18:29"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"6799:34:29","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6772:6:29"},"nodeType":"YulFunctionCall","src":"6772:62:29"},"nodeType":"YulExpressionStatement","src":"6772:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6854:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6865:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:29"},"nodeType":"YulFunctionCall","src":"6850:18:29"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"6870:4:29","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6843:6:29"},"nodeType":"YulFunctionCall","src":"6843:32:29"},"nodeType":"YulExpressionStatement","src":"6843:32:29"},{"nodeType":"YulAssignment","src":"6884:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6896:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6907:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6892:3:29"},"nodeType":"YulFunctionCall","src":"6892:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6884:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6670:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6684:4:29","type":""}],"src":"6519:398:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101a8578063a457c2d7146101bb578063a9059cbb146101ce578063dd62ed3e146101e157600080fd5b806340c10f191461016257806370a082311461017757806395d89b41146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101f4565b6040516100e991906108f2565b60405180910390f35b61010561010036600461095c565b610286565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610986565b6102a0565b60055460405160ff90911681526020016100e9565b61010561015d36600461095c565b6102c4565b61017561017036600461095c565b6102e6565b005b6101196101853660046109c2565b6001600160a01b031660009081526020819052604090205490565b6100dc6102f4565b6101756101b636600461095c565b610303565b6101056101c936600461095c565b61030d565b6101056101dc36600461095c565b61038d565b6101196101ef3660046109e4565b61039b565b60606003805461020390610a17565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610a17565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856103c6565b60019150505b92915050565b6000336102ae8582856104eb565b6102b9858585610565565b506001949350505050565b6000336102948185856102d7838361039b565b6102e19190610a51565b6103c6565b6102f08282610709565b5050565b60606004805461020390610a17565b6102f082826107c8565b6000338161031b828661039b565b9050838110156103805760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b982868684036103c6565b600033610294818585610565565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610377565b6001600160a01b0382166104895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610377565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104f7848461039b565b9050600019811461055f57818110156105525760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610377565b61055f84848484036103c6565b50505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610377565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610377565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610377565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361055f565b6001600160a01b03821661075f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610377565b80600260008282546107719190610a51565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610377565b6001600160a01b0382166000908152602081905260409020548181101561089c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610377565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104de565b600060208083528351808285015260005b8181101561091f57858101830151858201604001528201610903565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095757600080fd5b919050565b6000806040838503121561096f57600080fd5b61097883610940565b946020939093013593505050565b60008060006060848603121561099b57600080fd5b6109a484610940565b92506109b260208501610940565b9150604084013590509250925092565b6000602082840312156109d457600080fd5b6109dd82610940565b9392505050565b600080604083850312156109f757600080fd5b610a0083610940565b9150610a0e60208401610940565b90509250929050565b600181811c90821680610a2b57607f821691505b602082108103610a4b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea26469706673582212207e55e648709aac154da3492755639834648ff15e5830963554bf744044954d0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22F SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x251 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP6 DUP3 DUP6 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x2B9 DUP6 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x2D7 DUP4 DUP4 PUSH2 0x39B JUMP JUMPDEST PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x709 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x31B DUP3 DUP7 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP5 DUP5 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x55F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST PUSH2 0x55F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x91F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x903 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x978 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A4 DUP5 PUSH2 0x940 JUMP JUMPDEST SWAP3 POP PUSH2 0x9B2 PUSH1 0x20 DUP6 ADD PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x940 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA00 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E PUSH1 0x20 DUP5 ADD PUSH2 0x940 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x55E648709AAC154DA3492755639834648FF15E5830963554BF744044954D00 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"140:487:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:29;;1162:22;1144:41;;1132:2;1117:18;4444:197:3;1004:187:29;3255:106:3;3342:12;;3255:106;;;1342:25:29;;;1330:2;1315:18;3255:106:3;1196:177:29;5203:256:3;;;;;;:::i;:::-;;:::i;529:96:24:-;611:9;;529:96;;611:9;;;;1853:36:29;;1841:2;1826:18;529:96:24;1711:184:29;5854:234:3;;;;;;:::i;:::-;;:::i;347:87:24:-;;;;;;:::i;:::-;;:::i;:::-;;3419:125:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:3;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;438:87:24:-;;;;;;:::i;:::-;;:::i;6575:427:3:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:11;4581:32:3;719:10:11;4597:7:3;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:11;5356:38:3;5372:4;719:10:11;5387:6:3;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:3;;5203:256;-1:-1:-1;;;;5203:256:3:o;5854:234::-;5942:4;719:10:11;5996:64:3;719:10:11;6012:7:3;6049:10;6021:25;719:10:11;6012:7:3;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;347:87:24:-;407:22;413:7;422:6;407:5;:22::i;:::-;347:87;;:::o;2369:102:3:-;2425:13;2457:7;2450:14;;;;;:::i;438:87:24:-;498:22;504:7;513:6;498:5;:22::i;6575:427:3:-;6668:4;719:10:11;6668:4:3;6749:25;719:10:11;6766:7:3;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:3;;3170:2:29;6784:85:3;;;3152:21:29;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:29;;;3292:35;3344:19;;6784:85:3;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:11;3873:28:3;719:10:11;3890:2:3;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:3;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:3;;10550:68;;;;-1:-1:-1;;;10550:68:3;;3576:2:29;10550:68:3;;;3558:21:29;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:29;;;3698:34;3749:19;;10550:68:3;3374:400:29;10550:68:3;-1:-1:-1;;;;;10636:21:3;;10628:68;;;;-1:-1:-1;;;10628:68:3;;3981:2:29;10628:68:3;;;3963:21:29;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:29;;;4103:32;4152:19;;10628:68:3;3779:398:29;10628:68:3;-1:-1:-1;;;;;10707:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:29;;;10758:32:3;;1315:18:29;10758:32:3;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:3;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:3;;4384:2:29;11297:68:3;;;4366:21:29;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:3;4182:353:29;11297:68:3;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:3;;7544:68;;;;-1:-1:-1;;;7544:68:3;;4742:2:29;7544:68:3;;;4724:21:29;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:29;;;4864:35;4916:19;;7544:68:3;4540:401:29;7544:68:3;-1:-1:-1;;;;;7630:16:3;;7622:64;;;;-1:-1:-1;;;7622:64:3;;5148:2:29;7622:64:3;;;5130:21:29;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:29;;;5270:33;5320:19;;7622:64:3;4946:399:29;7622:64:3;-1:-1:-1;;;;;7768:15:3;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:3;;5552:2:29;7793:72:3;;;5534:21:29;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:29;;;5674:36;5727:19;;7793:72:3;5350:402:29;7793:72:3;-1:-1:-1;;;;;7899:15:3;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:29;;;8114:13:3;;8163:26;;1315:18:29;8163:26:3;;;;;;;8200:37;9375:659;8520:535;-1:-1:-1;;;;;8603:21:3;;8595:65;;;;-1:-1:-1;;;8595:65:3;;5959:2:29;8595:65:3;;;5941:21:29;5998:2;5978:18;;;5971:30;6037:33;6017:18;;;6010:61;6088:18;;8595:65:3;5757:355:29;8595:65:3;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:29;;;8952:37:3;;1315:18:29;8952:37:3;;;;;;;347:87:24;;:::o;9375:659:3:-;-1:-1:-1;;;;;9458:21:3;;9450:67;;;;-1:-1:-1;;;9450:67:3;;6319:2:29;9450:67:3;;;6301:21:29;6358:2;6338:18;;;6331:30;6397:34;6377:18;;;6370:62;-1:-1:-1;;;6448:18:29;;;6441:31;6489:19;;9450:67:3;6117:397:29;9450:67:3;-1:-1:-1;;;;;9613:18:3;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:3;;6721:2:29;9641:71:3;;;6703:21:29;6760:2;6740:18;;;6733:30;6799:34;6779:18;;;6772:62;-1:-1:-1;;;6850:18:29;;;6843:32;6892:19;;9641:71:3;6519:398:29;9641:71:3;-1:-1:-1;;;;;9746:18:3;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1342:25:29;;;9746:9:3;;:18;9931:37;;1315:18:29;9931:37:3;1196:177:29;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:29;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:29:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:29:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"545600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24629","balanceOf(address)":"2585","burn(address,uint256)":"50887","decimals()":"2378","decreaseAllowance(address,uint256)":"26995","increaseAllowance(address,uint256)":"infinite","mint(address,uint256)":"50828","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51116","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/mocks/MockERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {ERC20} from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MockERC20 is ERC20 {\\n\\n  uint8 private decimals_;\\n  constructor(\\n    string memory _name,\\n    string memory _symbol,\\n    uint8 _decimals\\n  ) ERC20(_name, _symbol) {\\n    decimals_ = _decimals;\\n  }\\n\\n  function mint(address account, uint256 amount) public {\\n    _mint(account, amount);\\n  }\\n\\n  function burn(address account, uint256 amount) public {\\n    _burn(account, amount);\\n  }\\n\\n  function decimals() public view virtual override returns (uint8) {\\n        return decimals_;\\n  }\\n}\",\"keccak256\":\"0x61f73a92da575eb7685d8e5a0f239daadf185fa7011af67f79379161c2cd7d46\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":573,"contract":"src/mocks/MockERC20.sol:MockERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":579,"contract":"src/mocks/MockERC20.sol:MockERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":581,"contract":"src/mocks/MockERC20.sol:MockERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":583,"contract":"src/mocks/MockERC20.sol:MockERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":585,"contract":"src/mocks/MockERC20.sol:MockERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4186,"contract":"src/mocks/MockERC20.sol:MockERC20","label":"decimals_","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/mocks/MockERC721.sol":{"MockERC721":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1310":{"entryPoint":null,"id":1310,"parameterSlots":2,"returnSlots":0},"@_4258":{"entryPoint":null,"id":4258,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":291,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":457,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":397,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":94,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:29"},"nodeType":"YulFunctionCall","src":"66:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:29"},"nodeType":"YulFunctionCall","src":"56:31:29"},"nodeType":"YulExpressionStatement","src":"56:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:29"},"nodeType":"YulFunctionCall","src":"96:15:29"},"nodeType":"YulExpressionStatement","src":"96:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:29"},"nodeType":"YulFunctionCall","src":"120:15:29"},"nodeType":"YulExpressionStatement","src":"120:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:29"},{"body":{"nodeType":"YulBlock","src":"210:776:29","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:29"},"nodeType":"YulFunctionCall","src":"261:12:29"},"nodeType":"YulExpressionStatement","src":"261:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:29"},"nodeType":"YulFunctionCall","src":"234:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:29"},"nodeType":"YulFunctionCall","src":"223:35:29"},"nodeType":"YulIf","src":"220:55:29"},{"nodeType":"YulVariableDeclaration","src":"284:23:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:29"},"nodeType":"YulFunctionCall","src":"294:13:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:29"},"nodeType":"YulFunctionCall","src":"330:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:29"},"nodeType":"YulFunctionCall","src":"326:18:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:29"},"nodeType":"YulFunctionCall","src":"369:18:29"},"nodeType":"YulExpressionStatement","src":"369:18:29"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:29"},"nodeType":"YulFunctionCall","src":"356:10:29"},"nodeType":"YulIf","src":"353:36:29"},{"nodeType":"YulVariableDeclaration","src":"398:17:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:29"},"nodeType":"YulFunctionCall","src":"408:7:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:29"},"nodeType":"YulFunctionCall","src":"438:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:29"},"nodeType":"YulFunctionCall","src":"498:13:29"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:29"},"nodeType":"YulFunctionCall","src":"494:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:29"},"nodeType":"YulFunctionCall","src":"490:31:29"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:29"},"nodeType":"YulFunctionCall","src":"486:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:29"},"nodeType":"YulFunctionCall","src":"474:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:29"},"nodeType":"YulFunctionCall","src":"588:18:29"},"nodeType":"YulExpressionStatement","src":"588:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:29"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:29"},"nodeType":"YulFunctionCall","src":"542:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:29"},"nodeType":"YulFunctionCall","src":"562:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:29"},"nodeType":"YulFunctionCall","src":"539:46:29"},"nodeType":"YulIf","src":"536:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:29"},"nodeType":"YulFunctionCall","src":"617:22:29"},"nodeType":"YulExpressionStatement","src":"617:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:29"},"nodeType":"YulFunctionCall","src":"648:18:29"},"nodeType":"YulExpressionStatement","src":"648:18:29"},{"nodeType":"YulVariableDeclaration","src":"675:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:29","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:29"},"nodeType":"YulFunctionCall","src":"737:12:29"},"nodeType":"YulExpressionStatement","src":"737:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:29"},"nodeType":"YulFunctionCall","src":"708:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:29"},"nodeType":"YulFunctionCall","src":"704:24:29"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:29"},"nodeType":"YulFunctionCall","src":"701:33:29"},"nodeType":"YulIf","src":"698:53:29"},{"nodeType":"YulVariableDeclaration","src":"760:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:29"},"nodeType":"YulFunctionCall","src":"850:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:29"},"nodeType":"YulFunctionCall","src":"846:23:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:29"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:29"},"nodeType":"YulFunctionCall","src":"881:14:29"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:29"},"nodeType":"YulFunctionCall","src":"877:23:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:29"},"nodeType":"YulFunctionCall","src":"871:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:29"},"nodeType":"YulFunctionCall","src":"839:63:29"},"nodeType":"YulExpressionStatement","src":"839:63:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:29"},"nodeType":"YulFunctionCall","src":"787:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:29","statements":[{"nodeType":"YulAssignment","src":"799:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:29"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:29"},"nodeType":"YulFunctionCall","src":"804:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:29","statements":[]},"src":"779:133:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:29"},"nodeType":"YulFunctionCall","src":"932:15:29"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:29"},"nodeType":"YulFunctionCall","src":"928:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:29"},"nodeType":"YulFunctionCall","src":"921:35:29"},"nodeType":"YulExpressionStatement","src":"921:35:29"},{"nodeType":"YulAssignment","src":"965:15:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:29"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:29","type":""}],"src":"146:840:29"},{"body":{"nodeType":"YulBlock","src":"1109:444:29","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:29"},"nodeType":"YulFunctionCall","src":"1157:12:29"},"nodeType":"YulExpressionStatement","src":"1157:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:29"},"nodeType":"YulFunctionCall","src":"1126:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:29"},"nodeType":"YulFunctionCall","src":"1122:32:29"},"nodeType":"YulIf","src":"1119:52:29"},{"nodeType":"YulVariableDeclaration","src":"1180:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:29"},"nodeType":"YulFunctionCall","src":"1194:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:29"},"nodeType":"YulFunctionCall","src":"1233:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:29"},"nodeType":"YulFunctionCall","src":"1229:18:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:29"},"nodeType":"YulFunctionCall","src":"1276:12:29"},"nodeType":"YulExpressionStatement","src":"1276:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:29"},"nodeType":"YulFunctionCall","src":"1259:14:29"},"nodeType":"YulIf","src":"1256:34:29"},{"nodeType":"YulAssignment","src":"1299:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:29"},"nodeType":"YulFunctionCall","src":"1338:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:29"},"nodeType":"YulFunctionCall","src":"1309:61:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:29"},"nodeType":"YulFunctionCall","src":"1401:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:29"},"nodeType":"YulFunctionCall","src":"1395:25:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:29"},"nodeType":"YulFunctionCall","src":"1451:12:29"},"nodeType":"YulExpressionStatement","src":"1451:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:29"},"nodeType":"YulFunctionCall","src":"1432:16:29"},"nodeType":"YulIf","src":"1429:36:29"},{"nodeType":"YulAssignment","src":"1474:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:29"},"nodeType":"YulFunctionCall","src":"1513:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:29"},"nodeType":"YulFunctionCall","src":"1484:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:29","type":""}],"src":"991:562:29"},{"body":{"nodeType":"YulBlock","src":"1613:325:29","statements":[{"nodeType":"YulAssignment","src":"1623:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:29"},"nodeType":"YulFunctionCall","src":"1633:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:29"},"nodeType":"YulFunctionCall","src":"1680:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:29","statements":[{"nodeType":"YulAssignment","src":"1733:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:29"},"nodeType":"YulFunctionCall","src":"1743:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:29"},"nodeType":"YulFunctionCall","src":"1704:26:29"},"nodeType":"YulIf","src":"1701:61:29"},{"body":{"nodeType":"YulBlock","src":"1821:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:29"},"nodeType":"YulFunctionCall","src":"1845:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:29"},"nodeType":"YulFunctionCall","src":"1835:31:29"},"nodeType":"YulExpressionStatement","src":"1835:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:29"},"nodeType":"YulFunctionCall","src":"1879:15:29"},"nodeType":"YulExpressionStatement","src":"1879:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:29"},"nodeType":"YulFunctionCall","src":"1907:15:29"},"nodeType":"YulExpressionStatement","src":"1907:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:29"},"nodeType":"YulFunctionCall","src":"1797:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:29"},"nodeType":"YulFunctionCall","src":"1774:38:29"},"nodeType":"YulIf","src":"1771:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:29","type":""}],"src":"1558:380:29"},{"body":{"nodeType":"YulBlock","src":"1999:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:29"},"nodeType":"YulFunctionCall","src":"2009:14:29"},"nodeType":"YulExpressionStatement","src":"2009:14:29"},{"nodeType":"YulAssignment","src":"2032:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:29"},"nodeType":"YulFunctionCall","src":"2040:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:29"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:29","type":""}],"src":"1943:121:29"},{"body":{"nodeType":"YulBlock","src":"2150:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:29","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:29"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:29"},"nodeType":"YulFunctionCall","src":"2221:17:29"},"nodeType":"YulExpressionStatement","src":"2221:17:29"},{"nodeType":"YulVariableDeclaration","src":"2251:31:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:29"},"nodeType":"YulFunctionCall","src":"2263:19:29"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:29"},"nodeType":"YulFunctionCall","src":"2331:19:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:29"},"nodeType":"YulFunctionCall","src":"2324:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:29"},"nodeType":"YulFunctionCall","src":"2314:38:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:29","statements":[{"nodeType":"YulAssignment","src":"2391:19:29","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:29"},"nodeType":"YulFunctionCall","src":"2368:20:29"},"nodeType":"YulIf","src":"2365:47:29"},{"nodeType":"YulVariableDeclaration","src":"2425:41:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:29"},"nodeType":"YulFunctionCall","src":"2452:12:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:29"},"nodeType":"YulFunctionCall","src":"2445:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:29"},"nodeType":"YulFunctionCall","src":"2435:31:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:29","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:29"},"nodeType":"YulFunctionCall","src":"2579:17:29"},"nodeType":"YulExpressionStatement","src":"2579:17:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:29"},"nodeType":"YulFunctionCall","src":"2524:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:29","statements":[{"nodeType":"YulAssignment","src":"2540:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:29"},"nodeType":"YulFunctionCall","src":"2549:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:29","statements":[]},"src":"2516:82:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:29"},"nodeType":"YulFunctionCall","src":"2163:11:29"},"nodeType":"YulIf","src":"2160:448:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:29","type":""}],"src":"2069:545:29"},{"body":{"nodeType":"YulBlock","src":"2704:81:29","statements":[{"nodeType":"YulAssignment","src":"2714:65:29","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:29"},"nodeType":"YulFunctionCall","src":"2743:11:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:29"},"nodeType":"YulFunctionCall","src":"2756:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:29"},"nodeType":"YulFunctionCall","src":"2739:24:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:29"},"nodeType":"YulFunctionCall","src":"2735:29:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:29"},"nodeType":"YulFunctionCall","src":"2725:40:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:29"},"nodeType":"YulFunctionCall","src":"2767:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:29"},"nodeType":"YulFunctionCall","src":"2722:57:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:29","type":""}],"src":"2619:166:29"},{"body":{"nodeType":"YulBlock","src":"2886:1256:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:29"},"nodeType":"YulFunctionCall","src":"2910:10:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:29"},"nodeType":"YulFunctionCall","src":"2965:18:29"},"nodeType":"YulExpressionStatement","src":"2965:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:29"},"nodeType":"YulFunctionCall","src":"2947:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:29"},"nodeType":"YulFunctionCall","src":"2943:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:29"},"nodeType":"YulFunctionCall","src":"2932:30:29"},"nodeType":"YulIf","src":"2929:56:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:29"},"nodeType":"YulFunctionCall","src":"3070:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:29"},"nodeType":"YulFunctionCall","src":"3044:38:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:29"},"nodeType":"YulFunctionCall","src":"2994:97:29"},"nodeType":"YulExpressionStatement","src":"2994:97:29"},{"nodeType":"YulVariableDeclaration","src":"3100:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:29","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:29","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:29"},"nodeType":"YulFunctionCall","src":"3270:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:29"},"nodeType":"YulFunctionCall","src":"3258:20:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:29"},"nodeType":"YulFunctionCall","src":"3305:35:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:29"},"nodeType":"YulFunctionCall","src":"3479:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:29"},"nodeType":"YulFunctionCall","src":"3473:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:29"},"nodeType":"YulFunctionCall","src":"3458:42:29"},"nodeType":"YulExpressionStatement","src":"3458:42:29"},{"nodeType":"YulAssignment","src":"3517:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:29"},"nodeType":"YulFunctionCall","src":"3527:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:29"}]},{"nodeType":"YulAssignment","src":"3558:40:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:29"},"nodeType":"YulFunctionCall","src":"3571:27:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:29"},"nodeType":"YulFunctionCall","src":"3384:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:29","statements":[{"nodeType":"YulAssignment","src":"3401:24:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:29"},"nodeType":"YulFunctionCall","src":"3406:19:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:29","statements":[]},"src":"3376:236:29"},{"body":{"nodeType":"YulBlock","src":"3660:166:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:29"},"nodeType":"YulFunctionCall","src":"3701:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:29"},"nodeType":"YulFunctionCall","src":"3695:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:29","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:29"},"nodeType":"YulFunctionCall","src":"3780:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:29"},"nodeType":"YulFunctionCall","src":"3776:24:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:29"},"nodeType":"YulFunctionCall","src":"3802:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:29"},"nodeType":"YulFunctionCall","src":"3772:37:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:29"},"nodeType":"YulFunctionCall","src":"3768:42:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:29"},"nodeType":"YulFunctionCall","src":"3753:58:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:29"},"nodeType":"YulFunctionCall","src":"3738:74:29"},"nodeType":"YulExpressionStatement","src":"3738:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:29"},"nodeType":"YulFunctionCall","src":"3628:19:29"},"nodeType":"YulIf","src":"3625:201:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:29","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:29"},"nodeType":"YulFunctionCall","src":"3856:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:29"},"nodeType":"YulFunctionCall","src":"3852:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:29"},"nodeType":"YulFunctionCall","src":"3839:36:29"},"nodeType":"YulExpressionStatement","src":"3839:36:29"}]},"nodeType":"YulCase","src":"3222:663:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:29","statements":[{"nodeType":"YulAssignment","src":"3983:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:29"},"nodeType":"YulFunctionCall","src":"3998:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:29"},"nodeType":"YulFunctionCall","src":"3992:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:29"},"nodeType":"YulIf","src":"3943:89:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:29"},"nodeType":"YulFunctionCall","src":"4058:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:29"},"nodeType":"YulFunctionCall","src":"4045:81:29"},"nodeType":"YulExpressionStatement","src":"4045:81:29"}]},"nodeType":"YulCase","src":"3894:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:29"},"nodeType":"YulFunctionCall","src":"3199:14:29"},"nodeType":"YulSwitch","src":"3192:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:29","type":""}],"src":"2790:1352:29"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620016bf380380620016bf833981016040819052620000349162000123565b818160006200004483826200021c565b5060016200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113c780620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806340c10f191461017f57806342842e0e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610f17565b61022d565b60405190151581526020015b60405180910390f35b61011f61027f565b60405161010e9190610f84565b61013f61013a366004610f97565b610311565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610fcc565b610338565b005b61016a61017a366004610ff6565b610452565b61016a61018d366004610fcc565b610483565b61016a6101a0366004610ff6565b610491565b61013f6101b3366004610f97565b6104ac565b6101cb6101c6366004611032565b61050c565b60405190815260200161010e565b61011f610592565b61016a6101ef36600461104d565b6105a1565b61016a61020236600461109f565b6105ac565b61011f610215366004610f97565b6105e4565b61010261022836600461117b565b610658565b60006001600160e01b031982166380ac58cd60e01b148061025e57506001600160e01b03198216635b5e139f60e01b145b8061027957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028e906111ae565b80601f01602080910402602001604051908101604052809291908181526020018280546102ba906111ae565b80156103075780601f106102dc57610100808354040283529160200191610307565b820191906000526020600020905b8154815290600101906020018083116102ea57829003601f168201915b5050505050905090565b600061031c82610686565b506000908152600460205260409020546001600160a01b031690565b6000610343826104ac565b9050806001600160a01b0316836001600160a01b0316036103b55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103d157506103d18133610658565b6104435760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103ac565b61044d83836106e8565b505050565b61045c3382610756565b6104785760405162461bcd60e51b81526004016103ac906111e8565b61044d8383836107b5565b61048d8282610926565b5050565b61044d838383604051806020016040528060008152506105ac565b6000818152600260205260408120546001600160a01b0316806102795760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103ac565b60006001600160a01b0382166105765760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103ac565b506001600160a01b031660009081526003602052604090205490565b60606001805461028e906111ae565b61048d338383610940565b6105b63383610756565b6105d25760405162461bcd60e51b81526004016103ac906111e8565b6105de84848484610a0e565b50505050565b60606105ef82610686565b600061060660408051602081019091526000815290565b905060008151116106265760405180602001604052806000815250610651565b8061063084610a41565b604051602001610641929190611235565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166106e55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103ac565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061071d826104ac565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610762836104ac565b9050806001600160a01b0316846001600160a01b0316148061078957506107898185610658565b806107ad5750836001600160a01b03166107a284610311565b6001600160a01b0316145b949350505050565b826001600160a01b03166107c8826104ac565b6001600160a01b0316146107ee5760405162461bcd60e51b81526004016103ac90611264565b6001600160a01b0382166108505760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103ac565b61085d8383836001610ad4565b826001600160a01b0316610870826104ac565b6001600160a01b0316146108965760405162461bcd60e51b81526004016103ac90611264565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61048d828260405180602001604052806000815250610b5c565b816001600160a01b0316836001600160a01b0316036109a15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103ac565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a198484846107b5565b610a2584848484610b8f565b6105de5760405162461bcd60e51b81526004016103ac906112a9565b60606000610a4e83610c90565b600101905060008167ffffffffffffffff811115610a6e57610a6e611089565b6040519080825280601f01601f191660200182016040528015610a98576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610aa257509392505050565b60018111156105de576001600160a01b03841615610b1a576001600160a01b03841660009081526003602052604081208054839290610b14908490611311565b90915550505b6001600160a01b038316156105de576001600160a01b03831660009081526003602052604081208054839290610b51908490611324565b909155505050505050565b610b668383610d68565b610b736000848484610b8f565b61044d5760405162461bcd60e51b81526004016103ac906112a9565b60006001600160a01b0384163b15610c8557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610bd3903390899088908890600401611337565b6020604051808303816000875af1925050508015610c0e575060408051601f3d908101601f19168201909252610c0b91810190611374565b60015b610c6b573d808015610c3c576040519150601f19603f3d011682016040523d82523d6000602084013e610c41565b606091505b508051600003610c635760405162461bcd60e51b81526004016103ac906112a9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107ad565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ccf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610cfb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d1957662386f26fc10000830492506010015b6305f5e1008310610d31576305f5e100830492506008015b6127108310610d4557612710830492506004015b60648310610d57576064830492506002015b600a83106102795760010192915050565b6001600160a01b038216610dbe5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103ac565b6000818152600260205260409020546001600160a01b031615610e235760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103ac565b610e31600083836001610ad4565b6000818152600260205260409020546001600160a01b031615610e965760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103ac565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146106e557600080fd5b600060208284031215610f2957600080fd5b813561065181610f01565b60005b83811015610f4f578181015183820152602001610f37565b50506000910152565b60008151808452610f70816020860160208601610f34565b601f01601f19169290920160200192915050565b6020815260006106516020830184610f58565b600060208284031215610fa957600080fd5b5035919050565b80356001600160a01b0381168114610fc757600080fd5b919050565b60008060408385031215610fdf57600080fd5b610fe883610fb0565b946020939093013593505050565b60008060006060848603121561100b57600080fd5b61101484610fb0565b925061102260208501610fb0565b9150604084013590509250925092565b60006020828403121561104457600080fd5b61065182610fb0565b6000806040838503121561106057600080fd5b61106983610fb0565b91506020830135801515811461107e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156110b557600080fd5b6110be85610fb0565b93506110cc60208601610fb0565b925060408501359150606085013567ffffffffffffffff808211156110f057600080fd5b818701915087601f83011261110457600080fd5b81358181111561111657611116611089565b604051601f8201601f19908116603f0116810190838211818310171561113e5761113e611089565b816040528281528a602084870101111561115757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561118e57600080fd5b61119783610fb0565b91506111a560208401610fb0565b90509250929050565b600181811c908216806111c257607f821691505b6020821081036111e257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611247818460208801610f34565b83519083019061125b818360208801610f34565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610279576102796112fb565b80820180821115610279576102796112fb565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061136a90830184610f58565b9695505050505050565b60006020828403121561138657600080fd5b815161065181610f0156fea2646970667358221220a285010912a7166b848ce798239af943183d92edb4c79c2bd0a844ecc58bf18b64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16BF CODESIZE SUB DUP1 PUSH3 0x16BF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x123 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH3 0x44 DUP4 DUP3 PUSH3 0x21C JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x53 DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP POP POP POP PUSH3 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x183 DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x13C7 DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x11F PUSH2 0x592 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x25E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x279 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x11AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BA SWAP1 PUSH2 0x11AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x307 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x307 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C DUP3 PUSH2 0x686 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343 DUP3 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3D1 JUMPI POP PUSH2 0x3D1 DUP2 CALLER PUSH2 0x658 JUMP JUMPDEST PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x44D DUP4 DUP4 PUSH2 0x6E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x45C CALLER DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x44D DUP4 DUP4 DUP4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x48D DUP3 DUP3 PUSH2 0x926 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x44D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x48D CALLER DUP4 DUP4 PUSH2 0x940 JUMP JUMPDEST PUSH2 0x5B6 CALLER DUP4 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x5DE DUP5 DUP5 DUP5 DUP5 PUSH2 0xA0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5EF DUP3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x651 JUMP JUMPDEST DUP1 PUSH2 0x630 DUP5 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x641 SWAP3 SWAP2 SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x71D DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x762 DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x789 JUMPI POP PUSH2 0x789 DUP2 DUP6 PUSH2 0x658 JUMP JUMPDEST DUP1 PUSH2 0x7AD JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A2 DUP5 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C8 DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x85D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD4 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x870 DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x48D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB5C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA19 DUP5 DUP5 DUP5 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0xA25 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA4E DUP4 PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA6E PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xAA2 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xB1A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB14 SWAP1 DUP5 SWAP1 PUSH2 0x1311 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB51 SWAP1 DUP5 SWAP1 PUSH2 0x1324 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB66 DUP4 DUP4 PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xB73 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBD3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC0E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC0B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC6B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x7AD JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCCF JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCFB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD19 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD31 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD45 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD57 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x279 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0xE31 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x651 DUP2 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF4F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF37 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF70 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x651 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1014 DUP5 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1022 PUSH1 0x20 DUP6 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x651 DUP3 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1069 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x107E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BE DUP6 PUSH2 0xFB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x10CC PUSH1 0x20 DUP7 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x1116 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x113E JUMPI PUSH2 0x113E PUSH2 0x1089 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1197 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A5 PUSH1 0x20 DUP5 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1247 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF34 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x125B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF34 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x279 JUMPI PUSH2 0x279 PUSH2 0x12FB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x279 JUMPI PUSH2 0x279 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x136A SWAP1 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x651 DUP2 PUSH2 0xF01 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP6 ADD MULMOD SLT 0xA7 AND PUSH12 0x848CE798239AF943183D92ED 0xB4 0xC7 SWAP13 0x2B 0xD0 0xA8 DIFFICULTY 0xEC 0xC5 DUP12 CALL DUP12 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"143:218:25:-:0;;;178:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;253:5;260:7;1456:5:6;:13;253:5:25;1456::6;:13;:::i;:::-;-1:-1:-1;1479:7:6;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;178:93:25;;143:218;;14:127:29;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:29;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:29;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:29:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:29;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:29;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:29;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:29;;;3992:26;3943:89;-1:-1:-1;;2747:1:29;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:29;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:29;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:29;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:29:o;:::-;143:218:25;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2191":{"entryPoint":null,"id":2191,"parameterSlots":4,"returnSlots":0},"@_approve_2024":{"entryPoint":1768,"id":2024,"parameterSlots":2,"returnSlots":0},"@_baseURI_1461":{"entryPoint":null,"id":1461,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2178":{"entryPoint":2772,"id":2178,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2132":{"entryPoint":2959,"id":2132,"parameterSlots":4,"returnSlots":1},"@_exists_1693":{"entryPoint":null,"id":1693,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1727":{"entryPoint":1878,"id":1727,"parameterSlots":2,"returnSlots":1},"@_mint_1848":{"entryPoint":3432,"id":1848,"parameterSlots":2,"returnSlots":0},"@_msgSender_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1675":{"entryPoint":null,"id":1675,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2070":{"entryPoint":1670,"id":2070,"parameterSlots":1,"returnSlots":0},"@_safeMint_1742":{"entryPoint":2342,"id":1742,"parameterSlots":2,"returnSlots":0},"@_safeMint_1771":{"entryPoint":2908,"id":1771,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1662":{"entryPoint":2574,"id":1662,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2056":{"entryPoint":2368,"id":2056,"parameterSlots":3,"returnSlots":0},"@_transfer_2000":{"entryPoint":1973,"id":2000,"parameterSlots":3,"returnSlots":0},"@approve_1504":{"entryPoint":824,"id":1504,"parameterSlots":2,"returnSlots":0},"@balanceOf_1365":{"entryPoint":1292,"id":1365,"parameterSlots":1,"returnSlots":1},"@getApproved_1522":{"entryPoint":785,"id":1522,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1557":{"entryPoint":1624,"id":1557,"parameterSlots":2,"returnSlots":1},"@isContract_2371":{"entryPoint":null,"id":2371,"parameterSlots":1,"returnSlots":1},"@log10_3673":{"entryPoint":3216,"id":3673,"parameterSlots":1,"returnSlots":1},"@mint_4271":{"entryPoint":1155,"id":4271,"parameterSlots":2,"returnSlots":0},"@name_1403":{"entryPoint":639,"id":1403,"parameterSlots":0,"returnSlots":1},"@ownerOf_1393":{"entryPoint":1196,"id":1393,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1603":{"entryPoint":1169,"id":1603,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1633":{"entryPoint":1452,"id":1633,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1539":{"entryPoint":1441,"id":1539,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1341":{"entryPoint":557,"id":1341,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2957":{"entryPoint":null,"id":2957,"parameterSlots":1,"returnSlots":1},"@symbol_1413":{"entryPoint":1426,"id":1413,"parameterSlots":0,"returnSlots":1},"@toString_2764":{"entryPoint":2625,"id":2764,"parameterSlots":1,"returnSlots":1},"@tokenURI_1452":{"entryPoint":1508,"id":1452,"parameterSlots":1,"returnSlots":1},"@transferFrom_1584":{"entryPoint":1106,"id":1584,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":4016,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4475,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4086,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4255,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4173,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4044,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4661,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4919,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3972,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4777,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4708,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4900,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4881,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3892,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4526,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4859,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4233,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3841,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11245:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:29","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:29"},"nodeType":"YulFunctionCall","src":"125:12:29"},"nodeType":"YulExpressionStatement","src":"125:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:29"},"nodeType":"YulFunctionCall","src":"99:20:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:29"},"nodeType":"YulFunctionCall","src":"88:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:29"},"nodeType":"YulFunctionCall","src":"78:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:29"},"nodeType":"YulFunctionCall","src":"71:51:29"},"nodeType":"YulIf","src":"68:71:29"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:29","type":""}],"src":"14:131:29"},{"body":{"nodeType":"YulBlock","src":"219:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:29"},"nodeType":"YulFunctionCall","src":"267:12:29"},"nodeType":"YulExpressionStatement","src":"267:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:29"},"nodeType":"YulFunctionCall","src":"236:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:29"},"nodeType":"YulFunctionCall","src":"232:32:29"},"nodeType":"YulIf","src":"229:52:29"},{"nodeType":"YulVariableDeclaration","src":"290:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:29"},"nodeType":"YulFunctionCall","src":"303:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:29"},"nodeType":"YulFunctionCall","src":"335:30:29"},"nodeType":"YulExpressionStatement","src":"335:30:29"},{"nodeType":"YulAssignment","src":"374:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:29","type":""}],"src":"150:245:29"},{"body":{"nodeType":"YulBlock","src":"495:92:29","statements":[{"nodeType":"YulAssignment","src":"505:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:29"},"nodeType":"YulFunctionCall","src":"513:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:29"},"nodeType":"YulFunctionCall","src":"565:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:29"},"nodeType":"YulFunctionCall","src":"558:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:29"},"nodeType":"YulFunctionCall","src":"540:41:29"},"nodeType":"YulExpressionStatement","src":"540:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:29","type":""}],"src":"400:187:29"},{"body":{"nodeType":"YulBlock","src":"658:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:29"},"nodeType":"YulFunctionCall","src":"758:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:29"},"nodeType":"YulFunctionCall","src":"777:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:29"},"nodeType":"YulFunctionCall","src":"771:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:29"},"nodeType":"YulFunctionCall","src":"751:39:29"},"nodeType":"YulExpressionStatement","src":"751:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:29"},"nodeType":"YulFunctionCall","src":"695:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:29","statements":[{"nodeType":"YulAssignment","src":"711:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:29"},"nodeType":"YulFunctionCall","src":"716:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:29","statements":[]},"src":"687:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:29"},"nodeType":"YulFunctionCall","src":"816:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:29"},"nodeType":"YulFunctionCall","src":"809:27:29"},"nodeType":"YulExpressionStatement","src":"809:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:29","type":""}],"src":"592:250:29"},{"body":{"nodeType":"YulBlock","src":"897:221:29","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:29"},"nodeType":"YulFunctionCall","src":"921:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:29"},"nodeType":"YulFunctionCall","src":"942:19:29"},"nodeType":"YulExpressionStatement","src":"942:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:29"},"nodeType":"YulFunctionCall","src":"1005:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:29"},"nodeType":"YulFunctionCall","src":"1023:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:29"},"nodeType":"YulFunctionCall","src":"970:76:29"},"nodeType":"YulExpressionStatement","src":"970:76:29"},{"nodeType":"YulAssignment","src":"1055:57:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:29"},"nodeType":"YulFunctionCall","src":"1079:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:29"},"nodeType":"YulFunctionCall","src":"1096:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:29"},"nodeType":"YulFunctionCall","src":"1075:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:29"},"nodeType":"YulFunctionCall","src":"1066:39:29"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:29"},"nodeType":"YulFunctionCall","src":"1062:50:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:29"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:29","type":""}],"src":"847:271:29"},{"body":{"nodeType":"YulBlock","src":"1244:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:29"},"nodeType":"YulFunctionCall","src":"1254:21:29"},"nodeType":"YulExpressionStatement","src":"1254:21:29"},{"nodeType":"YulAssignment","src":"1284:53:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:29"},"nodeType":"YulFunctionCall","src":"1318:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:29"},"nodeType":"YulFunctionCall","src":"1292:45:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:29","type":""}],"src":"1123:220:29"},{"body":{"nodeType":"YulBlock","src":"1418:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:29"},"nodeType":"YulFunctionCall","src":"1466:12:29"},"nodeType":"YulExpressionStatement","src":"1466:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:29"},"nodeType":"YulFunctionCall","src":"1435:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:29"},"nodeType":"YulFunctionCall","src":"1431:32:29"},"nodeType":"YulIf","src":"1428:52:29"},{"nodeType":"YulAssignment","src":"1489:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:29"},"nodeType":"YulFunctionCall","src":"1499:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:29","type":""}],"src":"1348:180:29"},{"body":{"nodeType":"YulBlock","src":"1634:102:29","statements":[{"nodeType":"YulAssignment","src":"1644:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:29"},"nodeType":"YulFunctionCall","src":"1652:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:29"},"nodeType":"YulFunctionCall","src":"1713:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:29"},"nodeType":"YulFunctionCall","src":"1709:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:29"},"nodeType":"YulFunctionCall","src":"1697:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:29"},"nodeType":"YulFunctionCall","src":"1679:51:29"},"nodeType":"YulExpressionStatement","src":"1679:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:29","type":""}],"src":"1533:203:29"},{"body":{"nodeType":"YulBlock","src":"1790:124:29","statements":[{"nodeType":"YulAssignment","src":"1800:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:29"},"nodeType":"YulFunctionCall","src":"1809:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:29"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:29"},"nodeType":"YulFunctionCall","src":"1894:12:29"},"nodeType":"YulExpressionStatement","src":"1894:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:29"},"nodeType":"YulFunctionCall","src":"1873:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:29"},"nodeType":"YulFunctionCall","src":"1869:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:29"},"nodeType":"YulFunctionCall","src":"1858:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:29"},"nodeType":"YulFunctionCall","src":"1848:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:29"},"nodeType":"YulFunctionCall","src":"1841:50:29"},"nodeType":"YulIf","src":"1838:70:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:29","type":""}],"src":"1741:173:29"},{"body":{"nodeType":"YulBlock","src":"2006:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:29"},"nodeType":"YulFunctionCall","src":"2054:12:29"},"nodeType":"YulExpressionStatement","src":"2054:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:29"},"nodeType":"YulFunctionCall","src":"2023:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:29"},"nodeType":"YulFunctionCall","src":"2019:32:29"},"nodeType":"YulIf","src":"2016:52:29"},{"nodeType":"YulAssignment","src":"2077:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:29"},"nodeType":"YulFunctionCall","src":"2087:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:29"}]},{"nodeType":"YulAssignment","src":"2125:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:29"},"nodeType":"YulFunctionCall","src":"2148:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:29"},"nodeType":"YulFunctionCall","src":"2135:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:29","type":""}],"src":"1919:254:29"},{"body":{"nodeType":"YulBlock","src":"2282:224:29","statements":[{"body":{"nodeType":"YulBlock","src":"2328:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2340:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:29"},"nodeType":"YulFunctionCall","src":"2330:12:29"},"nodeType":"YulExpressionStatement","src":"2330:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2299:3:29"},"nodeType":"YulFunctionCall","src":"2299:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2295:3:29"},"nodeType":"YulFunctionCall","src":"2295:32:29"},"nodeType":"YulIf","src":"2292:52:29"},{"nodeType":"YulAssignment","src":"2353:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2363:18:29"},"nodeType":"YulFunctionCall","src":"2363:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2353:6:29"}]},{"nodeType":"YulAssignment","src":"2401:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:29"},"nodeType":"YulFunctionCall","src":"2430:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2411:18:29"},"nodeType":"YulFunctionCall","src":"2411:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2401:6:29"}]},{"nodeType":"YulAssignment","src":"2458:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2496:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:29"},"nodeType":"YulFunctionCall","src":"2481:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2468:12:29"},"nodeType":"YulFunctionCall","src":"2468:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2458:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2243:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2255:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2263:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2271:6:29","type":""}],"src":"2178:328:29"},{"body":{"nodeType":"YulBlock","src":"2581:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"2627:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2636:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2629:6:29"},"nodeType":"YulFunctionCall","src":"2629:12:29"},"nodeType":"YulExpressionStatement","src":"2629:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2602:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2598:3:29"},"nodeType":"YulFunctionCall","src":"2598:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2623:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2594:3:29"},"nodeType":"YulFunctionCall","src":"2594:32:29"},"nodeType":"YulIf","src":"2591:52:29"},{"nodeType":"YulAssignment","src":"2652:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2662:18:29"},"nodeType":"YulFunctionCall","src":"2662:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2652:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2547:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2558:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2570:6:29","type":""}],"src":"2511:186:29"},{"body":{"nodeType":"YulBlock","src":"2803:76:29","statements":[{"nodeType":"YulAssignment","src":"2813:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2825:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2836:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2821:3:29"},"nodeType":"YulFunctionCall","src":"2821:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2813:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2866:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:29"},"nodeType":"YulFunctionCall","src":"2848:25:29"},"nodeType":"YulExpressionStatement","src":"2848:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2772:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2783:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2794:4:29","type":""}],"src":"2702:177:29"},{"body":{"nodeType":"YulBlock","src":"2968:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"3014:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3016:6:29"},"nodeType":"YulFunctionCall","src":"3016:12:29"},"nodeType":"YulExpressionStatement","src":"3016:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2989:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2985:3:29"},"nodeType":"YulFunctionCall","src":"2985:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2981:3:29"},"nodeType":"YulFunctionCall","src":"2981:32:29"},"nodeType":"YulIf","src":"2978:52:29"},{"nodeType":"YulAssignment","src":"3039:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3049:18:29"},"nodeType":"YulFunctionCall","src":"3049:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3039:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3087:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:29"},"nodeType":"YulFunctionCall","src":"3113:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3100:12:29"},"nodeType":"YulFunctionCall","src":"3100:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3185:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3187:6:29"},"nodeType":"YulFunctionCall","src":"3187:12:29"},"nodeType":"YulExpressionStatement","src":"3187:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3154:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3168:6:29"},"nodeType":"YulFunctionCall","src":"3168:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3161:6:29"},"nodeType":"YulFunctionCall","src":"3161:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3151:2:29"},"nodeType":"YulFunctionCall","src":"3151:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3144:6:29"},"nodeType":"YulFunctionCall","src":"3144:40:29"},"nodeType":"YulIf","src":"3141:60:29"},{"nodeType":"YulAssignment","src":"3210:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3220:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3210:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2926:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2937:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2949:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2957:6:29","type":""}],"src":"2884:347:29"},{"body":{"nodeType":"YulBlock","src":"3268:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3285:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3297:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3288:3:29"},"nodeType":"YulFunctionCall","src":"3288:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:29"},"nodeType":"YulFunctionCall","src":"3278:31:29"},"nodeType":"YulExpressionStatement","src":"3278:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:29"},"nodeType":"YulFunctionCall","src":"3318:15:29"},"nodeType":"YulExpressionStatement","src":"3318:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3349:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3352:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:29"},"nodeType":"YulFunctionCall","src":"3342:15:29"},"nodeType":"YulExpressionStatement","src":"3342:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3236:127:29"},{"body":{"nodeType":"YulBlock","src":"3498:1008:29","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:29"},"nodeType":"YulFunctionCall","src":"3547:12:29"},"nodeType":"YulExpressionStatement","src":"3547:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3519:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3528:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3515:3:29"},"nodeType":"YulFunctionCall","src":"3515:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3540:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3511:3:29"},"nodeType":"YulFunctionCall","src":"3511:33:29"},"nodeType":"YulIf","src":"3508:53:29"},{"nodeType":"YulAssignment","src":"3570:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3580:18:29"},"nodeType":"YulFunctionCall","src":"3580:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3570:6:29"}]},{"nodeType":"YulAssignment","src":"3618:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:29"},"nodeType":"YulFunctionCall","src":"3647:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3628:18:29"},"nodeType":"YulFunctionCall","src":"3628:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3618:6:29"}]},{"nodeType":"YulAssignment","src":"3675:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3702:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3713:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:29"},"nodeType":"YulFunctionCall","src":"3698:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3685:12:29"},"nodeType":"YulFunctionCall","src":"3685:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3675:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3726:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3757:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3753:3:29"},"nodeType":"YulFunctionCall","src":"3753:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3740:12:29"},"nodeType":"YulFunctionCall","src":"3740:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3730:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3781:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3791:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3785:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3836:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3848:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3838:6:29"},"nodeType":"YulFunctionCall","src":"3838:12:29"},"nodeType":"YulExpressionStatement","src":"3838:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3824:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3832:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3821:2:29"},"nodeType":"YulFunctionCall","src":"3821:14:29"},"nodeType":"YulIf","src":"3818:34:29"},{"nodeType":"YulVariableDeclaration","src":"3861:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3886:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:29"},"nodeType":"YulFunctionCall","src":"3871:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3865:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3941:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3943:6:29"},"nodeType":"YulFunctionCall","src":"3943:12:29"},"nodeType":"YulExpressionStatement","src":"3943:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3920:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3916:3:29"},"nodeType":"YulFunctionCall","src":"3916:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3931:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3912:3:29"},"nodeType":"YulFunctionCall","src":"3912:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3905:6:29"},"nodeType":"YulFunctionCall","src":"3905:35:29"},"nodeType":"YulIf","src":"3902:55:29"},{"nodeType":"YulVariableDeclaration","src":"3966:26:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3989:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3976:12:29"},"nodeType":"YulFunctionCall","src":"3976:16:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3970:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4015:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4017:16:29"},"nodeType":"YulFunctionCall","src":"4017:18:29"},"nodeType":"YulExpressionStatement","src":"4017:18:29"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4007:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4011:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4004:2:29"},"nodeType":"YulFunctionCall","src":"4004:10:29"},"nodeType":"YulIf","src":"4001:36:29"},{"nodeType":"YulVariableDeclaration","src":"4046:17:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4060:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4056:3:29"},"nodeType":"YulFunctionCall","src":"4056:7:29"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4050:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4072:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4086:5:29"},"nodeType":"YulFunctionCall","src":"4086:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4076:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4104:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4126:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4150:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4154:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4146:3:29"},"nodeType":"YulFunctionCall","src":"4146:13:29"},{"name":"_4","nodeType":"YulIdentifier","src":"4161:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4142:3:29"},"nodeType":"YulFunctionCall","src":"4142:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:29"},"nodeType":"YulFunctionCall","src":"4138:31:29"},{"name":"_4","nodeType":"YulIdentifier","src":"4171:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4134:3:29"},"nodeType":"YulFunctionCall","src":"4134:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:29"},"nodeType":"YulFunctionCall","src":"4122:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4108:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4234:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4236:16:29"},"nodeType":"YulFunctionCall","src":"4236:18:29"},"nodeType":"YulExpressionStatement","src":"4236:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4193:10:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4205:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4190:2:29"},"nodeType":"YulFunctionCall","src":"4190:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4213:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4225:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4210:2:29"},"nodeType":"YulFunctionCall","src":"4210:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4187:2:29"},"nodeType":"YulFunctionCall","src":"4187:46:29"},"nodeType":"YulIf","src":"4184:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4276:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:29"},"nodeType":"YulFunctionCall","src":"4265:22:29"},"nodeType":"YulExpressionStatement","src":"4265:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4303:6:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4311:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:29"},"nodeType":"YulFunctionCall","src":"4296:18:29"},"nodeType":"YulExpressionStatement","src":"4296:18:29"},{"body":{"nodeType":"YulBlock","src":"4360:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4362:6:29"},"nodeType":"YulFunctionCall","src":"4362:12:29"},"nodeType":"YulExpressionStatement","src":"4362:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4337:2:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4341:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:29"},"nodeType":"YulFunctionCall","src":"4333:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:29"},"nodeType":"YulFunctionCall","src":"4329:20:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4351:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4326:2:29"},"nodeType":"YulFunctionCall","src":"4326:33:29"},"nodeType":"YulIf","src":"4323:53:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4402:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4398:3:29"},"nodeType":"YulFunctionCall","src":"4398:15:29"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4419:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:29"},"nodeType":"YulFunctionCall","src":"4415:11:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4428:2:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4385:12:29"},"nodeType":"YulFunctionCall","src":"4385:46:29"},"nodeType":"YulExpressionStatement","src":"4385:46:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4455:6:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4463:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:29"},"nodeType":"YulFunctionCall","src":"4451:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"4468:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:29"},"nodeType":"YulFunctionCall","src":"4447:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:29"},"nodeType":"YulFunctionCall","src":"4440:35:29"},"nodeType":"YulExpressionStatement","src":"4440:35:29"},{"nodeType":"YulAssignment","src":"4484:16:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4494:6:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4484:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3440:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3451:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3463:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3471:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3479:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3487:6:29","type":""}],"src":"3368:1138:29"},{"body":{"nodeType":"YulBlock","src":"4598:173:29","statements":[{"body":{"nodeType":"YulBlock","src":"4644:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4653:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4656:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4646:6:29"},"nodeType":"YulFunctionCall","src":"4646:12:29"},"nodeType":"YulExpressionStatement","src":"4646:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4619:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4615:3:29"},"nodeType":"YulFunctionCall","src":"4615:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4611:3:29"},"nodeType":"YulFunctionCall","src":"4611:32:29"},"nodeType":"YulIf","src":"4608:52:29"},{"nodeType":"YulAssignment","src":"4669:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4679:18:29"},"nodeType":"YulFunctionCall","src":"4679:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4669:6:29"}]},{"nodeType":"YulAssignment","src":"4717:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:29"},"nodeType":"YulFunctionCall","src":"4746:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4727:18:29"},"nodeType":"YulFunctionCall","src":"4727:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4717:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4556:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4567:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4579:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4587:6:29","type":""}],"src":"4511:260:29"},{"body":{"nodeType":"YulBlock","src":"4831:325:29","statements":[{"nodeType":"YulAssignment","src":"4841:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4855:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4858:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4851:3:29"},"nodeType":"YulFunctionCall","src":"4851:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4841:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4872:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4902:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"4908:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4898:3:29"},"nodeType":"YulFunctionCall","src":"4898:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4876:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4949:31:29","statements":[{"nodeType":"YulAssignment","src":"4951:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4965:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4973:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4961:3:29"},"nodeType":"YulFunctionCall","src":"4961:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4951:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4929:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4922:6:29"},"nodeType":"YulFunctionCall","src":"4922:26:29"},"nodeType":"YulIf","src":"4919:61:29"},{"body":{"nodeType":"YulBlock","src":"5039:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5060:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5067:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5072:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5063:3:29"},"nodeType":"YulFunctionCall","src":"5063:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:29"},"nodeType":"YulFunctionCall","src":"5053:31:29"},"nodeType":"YulExpressionStatement","src":"5053:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5104:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5107:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5097:6:29"},"nodeType":"YulFunctionCall","src":"5097:15:29"},"nodeType":"YulExpressionStatement","src":"5097:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5135:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:29"},"nodeType":"YulFunctionCall","src":"5125:15:29"},"nodeType":"YulExpressionStatement","src":"5125:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4995:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5018:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5026:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5015:2:29"},"nodeType":"YulFunctionCall","src":"5015:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4992:2:29"},"nodeType":"YulFunctionCall","src":"4992:38:29"},"nodeType":"YulIf","src":"4989:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4811:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4820:6:29","type":""}],"src":"4776:380:29"},{"body":{"nodeType":"YulBlock","src":"5335:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5352:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5363:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5345:6:29"},"nodeType":"YulFunctionCall","src":"5345:21:29"},"nodeType":"YulExpressionStatement","src":"5345:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5382:3:29"},"nodeType":"YulFunctionCall","src":"5382:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5402:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5375:6:29"},"nodeType":"YulFunctionCall","src":"5375:30:29"},"nodeType":"YulExpressionStatement","src":"5375:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:29"},"nodeType":"YulFunctionCall","src":"5421:18:29"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5441:34:29","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:29"},"nodeType":"YulFunctionCall","src":"5414:62:29"},"nodeType":"YulExpressionStatement","src":"5414:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5496:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:29"},"nodeType":"YulFunctionCall","src":"5492:18:29"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5512:3:29","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5485:6:29"},"nodeType":"YulFunctionCall","src":"5485:31:29"},"nodeType":"YulExpressionStatement","src":"5485:31:29"},{"nodeType":"YulAssignment","src":"5525:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5548:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:29"},"nodeType":"YulFunctionCall","src":"5533:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5525:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5312:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5326:4:29","type":""}],"src":"5161:397:29"},{"body":{"nodeType":"YulBlock","src":"5737:251:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5765:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5747:6:29"},"nodeType":"YulFunctionCall","src":"5747:21:29"},"nodeType":"YulExpressionStatement","src":"5747:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:29"},"nodeType":"YulFunctionCall","src":"5784:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5804:2:29","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:29"},"nodeType":"YulFunctionCall","src":"5777:30:29"},"nodeType":"YulExpressionStatement","src":"5777:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5827:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5838:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5823:3:29"},"nodeType":"YulFunctionCall","src":"5823:18:29"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"5843:34:29","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5816:6:29"},"nodeType":"YulFunctionCall","src":"5816:62:29"},"nodeType":"YulExpressionStatement","src":"5816:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5909:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5894:3:29"},"nodeType":"YulFunctionCall","src":"5894:18:29"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"5914:31:29","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5887:6:29"},"nodeType":"YulFunctionCall","src":"5887:59:29"},"nodeType":"YulExpressionStatement","src":"5887:59:29"},{"nodeType":"YulAssignment","src":"5955:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5967:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5978:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5963:3:29"},"nodeType":"YulFunctionCall","src":"5963:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5955:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5714:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5728:4:29","type":""}],"src":"5563:425:29"},{"body":{"nodeType":"YulBlock","src":"6167:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6195:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6177:6:29"},"nodeType":"YulFunctionCall","src":"6177:21:29"},"nodeType":"YulExpressionStatement","src":"6177:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6218:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6229:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6214:3:29"},"nodeType":"YulFunctionCall","src":"6214:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6234:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6207:6:29"},"nodeType":"YulFunctionCall","src":"6207:30:29"},"nodeType":"YulExpressionStatement","src":"6207:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6257:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6268:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6253:3:29"},"nodeType":"YulFunctionCall","src":"6253:18:29"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"6273:34:29","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6246:6:29"},"nodeType":"YulFunctionCall","src":"6246:62:29"},"nodeType":"YulExpressionStatement","src":"6246:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6328:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:29"},"nodeType":"YulFunctionCall","src":"6324:18:29"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"6344:15:29","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6317:6:29"},"nodeType":"YulFunctionCall","src":"6317:43:29"},"nodeType":"YulExpressionStatement","src":"6317:43:29"},{"nodeType":"YulAssignment","src":"6369:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6392:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:29"},"nodeType":"YulFunctionCall","src":"6377:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6369:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6144:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6158:4:29","type":""}],"src":"5993:409:29"},{"body":{"nodeType":"YulBlock","src":"6581:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6591:6:29"},"nodeType":"YulFunctionCall","src":"6591:21:29"},"nodeType":"YulExpressionStatement","src":"6591:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6643:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6628:3:29"},"nodeType":"YulFunctionCall","src":"6628:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6648:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:29"},"nodeType":"YulFunctionCall","src":"6621:30:29"},"nodeType":"YulExpressionStatement","src":"6621:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6671:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6682:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6667:3:29"},"nodeType":"YulFunctionCall","src":"6667:18:29"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"6687:26:29","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:29"},"nodeType":"YulFunctionCall","src":"6660:54:29"},"nodeType":"YulExpressionStatement","src":"6660:54:29"},{"nodeType":"YulAssignment","src":"6723:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6735:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6746:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:29"},"nodeType":"YulFunctionCall","src":"6731:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6723:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6558:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6572:4:29","type":""}],"src":"6407:348:29"},{"body":{"nodeType":"YulBlock","src":"6934:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6951:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6962:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6944:6:29"},"nodeType":"YulFunctionCall","src":"6944:21:29"},"nodeType":"YulExpressionStatement","src":"6944:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6985:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6981:3:29"},"nodeType":"YulFunctionCall","src":"6981:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7001:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6974:6:29"},"nodeType":"YulFunctionCall","src":"6974:30:29"},"nodeType":"YulExpressionStatement","src":"6974:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7024:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7035:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7020:3:29"},"nodeType":"YulFunctionCall","src":"7020:18:29"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7040:34:29","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7013:6:29"},"nodeType":"YulFunctionCall","src":"7013:62:29"},"nodeType":"YulExpressionStatement","src":"7013:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7095:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7106:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7091:3:29"},"nodeType":"YulFunctionCall","src":"7091:18:29"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7111:11:29","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7084:6:29"},"nodeType":"YulFunctionCall","src":"7084:39:29"},"nodeType":"YulExpressionStatement","src":"7084:39:29"},{"nodeType":"YulAssignment","src":"7132:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7144:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7155:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:29"},"nodeType":"YulFunctionCall","src":"7140:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7132:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6911:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6925:4:29","type":""}],"src":"6760:405:29"},{"body":{"nodeType":"YulBlock","src":"7357:309:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7367:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7387:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7381:5:29"},"nodeType":"YulFunctionCall","src":"7381:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7371:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7442:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7450:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7438:3:29"},"nodeType":"YulFunctionCall","src":"7438:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7457:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7462:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7403:34:29"},"nodeType":"YulFunctionCall","src":"7403:66:29"},"nodeType":"YulExpressionStatement","src":"7403:66:29"},{"nodeType":"YulVariableDeclaration","src":"7478:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7495:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7500:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7491:3:29"},"nodeType":"YulFunctionCall","src":"7491:16:29"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"7482:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7516:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7538:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7532:5:29"},"nodeType":"YulFunctionCall","src":"7532:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7520:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7593:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7601:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:29"},"nodeType":"YulFunctionCall","src":"7589:17:29"},{"name":"end_1","nodeType":"YulIdentifier","src":"7608:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7615:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7554:34:29"},"nodeType":"YulFunctionCall","src":"7554:70:29"},"nodeType":"YulExpressionStatement","src":"7554:70:29"},{"nodeType":"YulAssignment","src":"7633:27:29","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"7644:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7651:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:29"},"nodeType":"YulFunctionCall","src":"7640:20:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7633:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7325:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7330:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7338:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7349:3:29","type":""}],"src":"7170:496:29"},{"body":{"nodeType":"YulBlock","src":"7845:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7862:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7873:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7855:6:29"},"nodeType":"YulFunctionCall","src":"7855:21:29"},"nodeType":"YulExpressionStatement","src":"7855:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7896:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7907:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7892:3:29"},"nodeType":"YulFunctionCall","src":"7892:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7912:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7885:6:29"},"nodeType":"YulFunctionCall","src":"7885:30:29"},"nodeType":"YulExpressionStatement","src":"7885:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7935:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7946:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7931:3:29"},"nodeType":"YulFunctionCall","src":"7931:18:29"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"7951:34:29","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7924:6:29"},"nodeType":"YulFunctionCall","src":"7924:62:29"},"nodeType":"YulExpressionStatement","src":"7924:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:29"},"nodeType":"YulFunctionCall","src":"8002:18:29"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"8022:7:29","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7995:6:29"},"nodeType":"YulFunctionCall","src":"7995:35:29"},"nodeType":"YulExpressionStatement","src":"7995:35:29"},{"nodeType":"YulAssignment","src":"8039:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8051:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8062:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8047:3:29"},"nodeType":"YulFunctionCall","src":"8047:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8039:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7822:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7836:4:29","type":""}],"src":"7671:401:29"},{"body":{"nodeType":"YulBlock","src":"8251:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8268:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8279:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:29"},"nodeType":"YulFunctionCall","src":"8261:21:29"},"nodeType":"YulExpressionStatement","src":"8261:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8302:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8313:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8298:3:29"},"nodeType":"YulFunctionCall","src":"8298:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:29"},"nodeType":"YulFunctionCall","src":"8291:30:29"},"nodeType":"YulExpressionStatement","src":"8291:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8341:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8352:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:29"},"nodeType":"YulFunctionCall","src":"8337:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8357:34:29","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8330:6:29"},"nodeType":"YulFunctionCall","src":"8330:62:29"},"nodeType":"YulExpressionStatement","src":"8330:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8412:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8423:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8408:3:29"},"nodeType":"YulFunctionCall","src":"8408:18:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8428:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8401:6:29"},"nodeType":"YulFunctionCall","src":"8401:34:29"},"nodeType":"YulExpressionStatement","src":"8401:34:29"},{"nodeType":"YulAssignment","src":"8444:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8456:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8467:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8452:3:29"},"nodeType":"YulFunctionCall","src":"8452:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8444:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8228:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8242:4:29","type":""}],"src":"8077:400:29"},{"body":{"nodeType":"YulBlock","src":"8656:175:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8673:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8684:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8666:6:29"},"nodeType":"YulFunctionCall","src":"8666:21:29"},"nodeType":"YulExpressionStatement","src":"8666:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8718:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8703:3:29"},"nodeType":"YulFunctionCall","src":"8703:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8723:2:29","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8696:6:29"},"nodeType":"YulFunctionCall","src":"8696:30:29"},"nodeType":"YulExpressionStatement","src":"8696:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8757:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8742:3:29"},"nodeType":"YulFunctionCall","src":"8742:18:29"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"8762:27:29","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8735:6:29"},"nodeType":"YulFunctionCall","src":"8735:55:29"},"nodeType":"YulExpressionStatement","src":"8735:55:29"},{"nodeType":"YulAssignment","src":"8799:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8811:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8822:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:29"},"nodeType":"YulFunctionCall","src":"8807:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8799:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8633:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8647:4:29","type":""}],"src":"8482:349:29"},{"body":{"nodeType":"YulBlock","src":"9010:240:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9038:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9020:6:29"},"nodeType":"YulFunctionCall","src":"9020:21:29"},"nodeType":"YulExpressionStatement","src":"9020:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9061:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9072:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9057:3:29"},"nodeType":"YulFunctionCall","src":"9057:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"9077:2:29","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9050:6:29"},"nodeType":"YulFunctionCall","src":"9050:30:29"},"nodeType":"YulExpressionStatement","src":"9050:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9100:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9111:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:29"},"nodeType":"YulFunctionCall","src":"9096:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"9116:34:29","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9089:6:29"},"nodeType":"YulFunctionCall","src":"9089:62:29"},"nodeType":"YulExpressionStatement","src":"9089:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9182:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9167:3:29"},"nodeType":"YulFunctionCall","src":"9167:18:29"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"9187:20:29","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9160:6:29"},"nodeType":"YulFunctionCall","src":"9160:48:29"},"nodeType":"YulExpressionStatement","src":"9160:48:29"},{"nodeType":"YulAssignment","src":"9217:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9229:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9240:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9225:3:29"},"nodeType":"YulFunctionCall","src":"9225:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9217:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8987:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9001:4:29","type":""}],"src":"8836:414:29"},{"body":{"nodeType":"YulBlock","src":"9287:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9304:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9311:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9316:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9307:3:29"},"nodeType":"YulFunctionCall","src":"9307:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9297:6:29"},"nodeType":"YulFunctionCall","src":"9297:31:29"},"nodeType":"YulExpressionStatement","src":"9297:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9344:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9347:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9337:6:29"},"nodeType":"YulFunctionCall","src":"9337:15:29"},"nodeType":"YulExpressionStatement","src":"9337:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9368:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9371:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9361:6:29"},"nodeType":"YulFunctionCall","src":"9361:15:29"},"nodeType":"YulExpressionStatement","src":"9361:15:29"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9255:127:29"},{"body":{"nodeType":"YulBlock","src":"9419:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9436:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9443:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9448:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9439:3:29"},"nodeType":"YulFunctionCall","src":"9439:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9429:6:29"},"nodeType":"YulFunctionCall","src":"9429:31:29"},"nodeType":"YulExpressionStatement","src":"9429:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9476:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9479:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9469:6:29"},"nodeType":"YulFunctionCall","src":"9469:15:29"},"nodeType":"YulExpressionStatement","src":"9469:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9500:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9503:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9493:6:29"},"nodeType":"YulFunctionCall","src":"9493:15:29"},"nodeType":"YulExpressionStatement","src":"9493:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9387:127:29"},{"body":{"nodeType":"YulBlock","src":"9568:79:29","statements":[{"nodeType":"YulAssignment","src":"9578:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9590:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"9593:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9586:3:29"},"nodeType":"YulFunctionCall","src":"9586:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9578:4:29"}]},{"body":{"nodeType":"YulBlock","src":"9619:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9621:16:29"},"nodeType":"YulFunctionCall","src":"9621:18:29"},"nodeType":"YulExpressionStatement","src":"9621:18:29"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9610:4:29"},{"name":"x","nodeType":"YulIdentifier","src":"9616:1:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9607:2:29"},"nodeType":"YulFunctionCall","src":"9607:11:29"},"nodeType":"YulIf","src":"9604:37:29"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9550:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"9553:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9559:4:29","type":""}],"src":"9519:128:29"},{"body":{"nodeType":"YulBlock","src":"9700:77:29","statements":[{"nodeType":"YulAssignment","src":"9710:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9721:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"9724:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9717:3:29"},"nodeType":"YulFunctionCall","src":"9717:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9710:3:29"}]},{"body":{"nodeType":"YulBlock","src":"9749:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9751:16:29"},"nodeType":"YulFunctionCall","src":"9751:18:29"},"nodeType":"YulExpressionStatement","src":"9751:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9741:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"9744:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9738:2:29"},"nodeType":"YulFunctionCall","src":"9738:10:29"},"nodeType":"YulIf","src":"9735:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9683:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"9686:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9692:3:29","type":""}],"src":"9652:125:29"},{"body":{"nodeType":"YulBlock","src":"9985:286:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9995:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10013:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10018:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10009:3:29"},"nodeType":"YulFunctionCall","src":"10009:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"10022:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10005:3:29"},"nodeType":"YulFunctionCall","src":"10005:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9999:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10040:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10055:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10063:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10051:3:29"},"nodeType":"YulFunctionCall","src":"10051:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10033:6:29"},"nodeType":"YulFunctionCall","src":"10033:34:29"},"nodeType":"YulExpressionStatement","src":"10033:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10087:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10098:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10083:3:29"},"nodeType":"YulFunctionCall","src":"10083:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10107:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10115:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10103:3:29"},"nodeType":"YulFunctionCall","src":"10103:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10076:6:29"},"nodeType":"YulFunctionCall","src":"10076:43:29"},"nodeType":"YulExpressionStatement","src":"10076:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10139:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10150:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10135:3:29"},"nodeType":"YulFunctionCall","src":"10135:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"10155:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10128:6:29"},"nodeType":"YulFunctionCall","src":"10128:34:29"},"nodeType":"YulExpressionStatement","src":"10128:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10182:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10193:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:29"},"nodeType":"YulFunctionCall","src":"10178:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"10198:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10171:6:29"},"nodeType":"YulFunctionCall","src":"10171:31:29"},"nodeType":"YulExpressionStatement","src":"10171:31:29"},{"nodeType":"YulAssignment","src":"10211:54:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10237:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10249:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10260:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10245:3:29"},"nodeType":"YulFunctionCall","src":"10245:19:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10219:17:29"},"nodeType":"YulFunctionCall","src":"10219:46:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10211:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9930:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9941:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9949:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9957:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9965:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9976:4:29","type":""}],"src":"9782:489:29"},{"body":{"nodeType":"YulBlock","src":"10356:169:29","statements":[{"body":{"nodeType":"YulBlock","src":"10402:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10411:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10414:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10404:6:29"},"nodeType":"YulFunctionCall","src":"10404:12:29"},"nodeType":"YulExpressionStatement","src":"10404:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10377:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10386:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10373:3:29"},"nodeType":"YulFunctionCall","src":"10373:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10398:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10369:3:29"},"nodeType":"YulFunctionCall","src":"10369:32:29"},"nodeType":"YulIf","src":"10366:52:29"},{"nodeType":"YulVariableDeclaration","src":"10427:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10446:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10440:5:29"},"nodeType":"YulFunctionCall","src":"10440:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10431:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10489:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"10465:23:29"},"nodeType":"YulFunctionCall","src":"10465:30:29"},"nodeType":"YulExpressionStatement","src":"10465:30:29"},{"nodeType":"YulAssignment","src":"10504:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"10514:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10504:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10322:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10333:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10345:6:29","type":""}],"src":"10276:249:29"},{"body":{"nodeType":"YulBlock","src":"10704:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10721:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10732:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10714:6:29"},"nodeType":"YulFunctionCall","src":"10714:21:29"},"nodeType":"YulExpressionStatement","src":"10714:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10755:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10766:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10751:3:29"},"nodeType":"YulFunctionCall","src":"10751:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"10771:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10744:6:29"},"nodeType":"YulFunctionCall","src":"10744:30:29"},"nodeType":"YulExpressionStatement","src":"10744:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10794:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10805:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:29"},"nodeType":"YulFunctionCall","src":"10790:18:29"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"10810:34:29","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10783:6:29"},"nodeType":"YulFunctionCall","src":"10783:62:29"},"nodeType":"YulExpressionStatement","src":"10783:62:29"},{"nodeType":"YulAssignment","src":"10854:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10866:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10877:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10862:3:29"},"nodeType":"YulFunctionCall","src":"10862:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10854:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10681:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10695:4:29","type":""}],"src":"10530:356:29"},{"body":{"nodeType":"YulBlock","src":"11065:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11082:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11093:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11075:6:29"},"nodeType":"YulFunctionCall","src":"11075:21:29"},"nodeType":"YulExpressionStatement","src":"11075:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11116:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11127:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11112:3:29"},"nodeType":"YulFunctionCall","src":"11112:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"11132:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11105:6:29"},"nodeType":"YulFunctionCall","src":"11105:30:29"},"nodeType":"YulExpressionStatement","src":"11105:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11155:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11166:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11151:3:29"},"nodeType":"YulFunctionCall","src":"11151:18:29"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"11171:30:29","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11144:6:29"},"nodeType":"YulFunctionCall","src":"11144:58:29"},"nodeType":"YulExpressionStatement","src":"11144:58:29"},{"nodeType":"YulAssignment","src":"11211:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11223:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11234:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11219:3:29"},"nodeType":"YulFunctionCall","src":"11219:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11211:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11042:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11056:4:29","type":""}],"src":"10891:352:29"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x11F PUSH2 0x592 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x25E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x279 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x11AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BA SWAP1 PUSH2 0x11AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x307 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x307 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C DUP3 PUSH2 0x686 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343 DUP3 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3D1 JUMPI POP PUSH2 0x3D1 DUP2 CALLER PUSH2 0x658 JUMP JUMPDEST PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x44D DUP4 DUP4 PUSH2 0x6E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x45C CALLER DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x44D DUP4 DUP4 DUP4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x48D DUP3 DUP3 PUSH2 0x926 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x44D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x48D CALLER DUP4 DUP4 PUSH2 0x940 JUMP JUMPDEST PUSH2 0x5B6 CALLER DUP4 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x5DE DUP5 DUP5 DUP5 DUP5 PUSH2 0xA0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5EF DUP3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x651 JUMP JUMPDEST DUP1 PUSH2 0x630 DUP5 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x641 SWAP3 SWAP2 SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x71D DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x762 DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x789 JUMPI POP PUSH2 0x789 DUP2 DUP6 PUSH2 0x658 JUMP JUMPDEST DUP1 PUSH2 0x7AD JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A2 DUP5 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C8 DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x85D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD4 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x870 DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x48D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB5C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA19 DUP5 DUP5 DUP5 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0xA25 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA4E DUP4 PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA6E PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xAA2 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xB1A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB14 SWAP1 DUP5 SWAP1 PUSH2 0x1311 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB51 SWAP1 DUP5 SWAP1 PUSH2 0x1324 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB66 DUP4 DUP4 PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xB73 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBD3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC0E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC0B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC6B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x7AD JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCCF JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCFB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD19 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD31 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD45 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD57 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x279 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0xE31 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x651 DUP2 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF4F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF37 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF70 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x651 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1014 DUP5 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1022 PUSH1 0x20 DUP6 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x651 DUP3 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1069 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x107E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BE DUP6 PUSH2 0xFB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x10CC PUSH1 0x20 DUP7 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x1116 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x113E JUMPI PUSH2 0x113E PUSH2 0x1089 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1197 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A5 PUSH1 0x20 DUP5 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1247 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF34 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x125B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF34 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x279 JUMPI PUSH2 0x279 PUSH2 0x12FB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x279 JUMPI PUSH2 0x279 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x136A SWAP1 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x651 DUP2 PUSH2 0xF01 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP6 ADD MULMOD SLT 0xA7 AND PUSH12 0x848CE798239AF943183D92ED 0xB4 0xC7 SWAP13 0x2B 0xD0 0xA8 DIFFICULTY 0xEC 0xC5 DUP12 CALL DUP12 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"143:218:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:6;;;;;;:::i;:::-;;:::i;:::-;;;565:14:29;;558:22;540:41;;528:2;513:18;1570:300:6;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:29;;;1679:51;;1667:2;1652:18;3935:167:6;1533:203:29;3468:406:6;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;275:83:25:-;;;;;;:::i;:::-;;:::i;4974:149:6:-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:29;;;2836:2;2821:18;1929:204:6;2702:177:29;2633:102:6;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:6;;-1:-1:-1;;;1707:40:6;;:104;;-1:-1:-1;;;;;;;1763:48:6;;-1:-1:-1;;;1763:48:6;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1827:36:6;1688:175;1570:300;-1:-1:-1;;1570:300:6:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:6;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:6;:2;-1:-1:-1;;;;;3605:11:6;;3597:57;;;;-1:-1:-1;;;3597:57:6;;5363:2:29;3597:57:6;;;5345:21:29;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:29;;;5485:31;5533:19;;3597:57:6;;;;;;;;;719:10:11;-1:-1:-1;;;;;3686:21:6;;;;:62;;-1:-1:-1;3711:37:6;3728:5;719:10:11;4388:162:6;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:6;;5765:2:29;3665:170:6;;;5747:21:29;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:6;5563:425:29;3665:170:6;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:11;4804:7:6;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:6;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;275:83:25:-;331:22;341:2;345:7;331:9;:22::i;:::-;275:83;;:::o;4974:149:6:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;;2324:56;;;;-1:-1:-1;;;2324:56:6;;6609:2:29;2324:56:6;;;6591:21:29;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:29;;;6660:54;6731:18;;2324:56:6;6407:348:29;1929:204:6;2001:7;-1:-1:-1;;;;;2028:19:6;;2020:73;;;;-1:-1:-1;;;2020:73:6;;6962:2:29;2020:73:6;;;6944:21:29;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:29;;;7084:39;7140:19;;2020:73:6;6760:405:29;2020:73:6;-1:-1:-1;;;;;;2110:16:6;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:11;4296:8:6;4306;4263:18;:52::i;5189:276::-;5319:41;719:10:11;5352:7:6;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:6;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:6;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:6:o;4388:162::-;-1:-1:-1;;;;;4508:25:6;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;13313:53;;;;-1:-1:-1;;;13313:53:6;;6609:2:29;13313:53:6;;;6591:21:29;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:29;;;6660:54;6731:18;;13313:53:6;6407:348:29;13313:53:6;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:6;-1:-1:-1;;;;;12646:29:6;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:6;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:6;:7;-1:-1:-1;;;;;7570:16:6;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:6;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:6;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:6:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:6;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:6;;11346:81;;;;-1:-1:-1;;;11346:81:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:6;;11437:65;;;;-1:-1:-1;;;11437:65:6;;8279:2:29;11437:65:6;;;8261:21:29;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:29;;;8401:34;8452:19;;11437:65:6;8077:400:29;11437:65:6;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;-1:-1:-1;;;;;11655:31:6;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:6;;11647:81;;;;-1:-1:-1;;;11647:81:6;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:6;;;;;;-1:-1:-1;;;;;12265:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:6;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:6;:5;-1:-1:-1;;;;;12990:17:6;;12982:55;;;;-1:-1:-1;;;12982:55:6;;8684:2:29;12982:55:6;;;8666:21:29;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;12982:55:6;8482:349:29;12982:55:6;-1:-1:-1;;;;;13047:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:6;;;;;;;;;;13108:41;;540::29;;;13108::6;;513:18:29;13108:41:6;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:6;;;;;;;:::i;447:696:12:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:12;-1:-1:-1;604:41:12;-1:-1:-1;765:28:12;;;781:2;765:28;820:280;-1:-1:-1;;851:5:12;-1:-1:-1;;;985:2:12;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:12;820:280;1064:21;-1:-1:-1;1120:6:12;447:696;-1:-1:-1;;;447:696:12:o;15472:396:6:-;15656:1;15644:9;:13;15640:222;;;-1:-1:-1;;;;;15677:18:6;;;15673:85;;-1:-1:-1;;;;;15715:15:6;;;;;;:9;:15;;;;;:28;;15734:9;;15715:15;:28;;15734:9;;15715:28;:::i;:::-;;;;-1:-1:-1;;15673:85:6;-1:-1:-1;;;;;15775:16:6;;;15771:81;;-1:-1:-1;;;;;15811:13:6;;;;;;:9;:13;;;;;:26;;15828:9;;15811:13;:26;;15828:9;;15811:26;:::i;:::-;;;;-1:-1:-1;;15472:396:6;;;;:::o;8324:279::-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;-1:-1:-1;;;8446:150:6;;;;;;;:::i;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:6;;1702:19:10;:23;14090:660:6;;14129:71;;-1:-1:-1;;;14129:71:6;;-1:-1:-1;;;;;14129:36:6;;;;;:71;;719:10:11;;14180:4:6;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:6;;;;;;;;-1:-1:-1;;14129:71:6;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:6;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:6;-1:-1:-1;;;14250:51:6;;-1:-1:-1;14243:58:6;;14090:660;-1:-1:-1;14735:4:6;13925:831;;;;;;:::o;9846:916:15:-;9899:7;;-1:-1:-1;;;9974:17:15;;9970:103;;-1:-1:-1;;;10011:17:15;;;-1:-1:-1;10056:2:15;10046:12;9970:103;10099:8;10090:5;:17;10086:103;;10136:8;10127:17;;;-1:-1:-1;10172:2:15;10162:12;10086:103;10215:8;10206:5;:17;10202:103;;10252:8;10243:17;;;-1:-1:-1;10288:2:15;10278:12;10202:103;10331:7;10322:5;:16;10318:100;;10367:7;10358:16;;;-1:-1:-1;10402:1:15;10392:11;10318:100;10444:7;10435:5;:16;10431:100;;10480:7;10471:16;;;-1:-1:-1;10515:1:15;10505:11;10431:100;10557:7;10548:5;:16;10544:100;;10593:7;10584:16;;;-1:-1:-1;10628:1:15;10618:11;10544:100;10670:7;10661:5;:16;10657:66;;10707:1;10697:11;10749:6;9846:916;-1:-1:-1;;9846:916:15:o;8925:920:6:-;-1:-1:-1;;;;;9004:16:6;;8996:61;;;;-1:-1:-1;;;8996:61:6;;10732:2:29;8996:61:6;;;10714:21:29;;;10751:18;;;10744:30;10810:34;10790:18;;;10783:62;10862:18;;8996:61:6;10530:356:29;8996:61:6;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:6;;11093:2:29;9067:58:6;;;11075:21:29;11132:2;11112:18;;;11105:30;11171;11151:18;;;11144:58;11219:18;;9067:58:6;10891:352:29;9067:58:6;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:6;;11093:2:29;9271:58:6;;;11075:21:29;11132:2;11112:18;;;11105:30;11171;11151:18;;;11144:58;11219:18;;9271:58:6;10891:352:29;9271:58:6;-1:-1:-1;;;;;9671:13:6;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:6;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;275:83:25;;:::o;14:131:29:-;-1:-1:-1;;;;;;88:32:29;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:29;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:29;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:29:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:29;;1348:180;-1:-1:-1;1348:180:29:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:29;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:29:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:29;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:29;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:29:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:29;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:29;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:127::-;9448:10;9443:3;9439:20;9436:1;9429:31;9479:4;9476:1;9469:15;9503:4;9500:1;9493:15;9519:128;9586:9;;;9607:11;;;9604:37;;;9621:18;;:::i;9652:125::-;9717:9;;;9738:10;;;9735:36;;;9751:18;;:::i;9782:489::-;-1:-1:-1;;;;;10051:15:29;;;10033:34;;10103:15;;10098:2;10083:18;;10076:43;10150:2;10135:18;;10128:34;;;10198:3;10193:2;10178:18;;10171:31;;;9976:4;;10219:46;;10245:19;;10237:6;10219:46;:::i;:::-;10211:54;9782:489;-1:-1:-1;;;;;;9782:489:29:o;10276:249::-;10345:6;10398:2;10386:9;10377:7;10373:23;10369:32;10366:52;;;10414:1;10411;10404:12;10366:52;10446:9;10440:16;10465:30;10489:5;10465:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1012600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2634","getApproved(uint256)":"4792","isApprovedForAll(address,address)":"infinite","mint(address,uint256)":"infinite","name()":"infinite","ownerOf(uint256)":"2561","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26705","supportsInterface(bytes4)":"534","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256)":"40c10f19","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockERC721.sol\":\"MockERC721\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 /* firstTokenId */,\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n}\\n\",\"keccak256\":\"0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"src/mocks/MockERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {ERC721} from \\\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\\\";\\n\\ncontract MockERC721 is ERC721 {\\n\\n  constructor(\\n    string memory _name,\\n    string memory _symbol\\n  ) ERC721(_name, _symbol) {}\\n\\n  function mint(address to, uint256 tokenId) public {\\n    _safeMint(to, tokenId);\\n  }\\n\\n}\",\"keccak256\":\"0x9f9a499d1abe667c0aa8c560965fa6feca4b42f18d01a53ce5b85425482f2267\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1273,"contract":"src/mocks/MockERC721.sol:MockERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1275,"contract":"src/mocks/MockERC721.sol:MockERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1279,"contract":"src/mocks/MockERC721.sol:MockERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1283,"contract":"src/mocks/MockERC721.sol:MockERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1287,"contract":"src/mocks/MockERC721.sol:MockERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1293,"contract":"src/mocks/MockERC721.sol:MockERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/raffle/Raffle.sol":{"Raffle":{"abi":[{"inputs":[],"name":"CANT_BE_ZERO","type":"error"},{"inputs":[],"name":"MAX_TICKET_SUPPLY_EXCEEDED","type":"error"},{"inputs":[],"name":"MSG_SENDER_NOT_WINNER","type":"error"},{"inputs":[],"name":"NOT_CREATOR","type":"error"},{"inputs":[],"name":"NOT_ENOUGH_BALANCE","type":"error"},{"inputs":[],"name":"RAFFLE_CLOSE","type":"error"},{"inputs":[],"name":"RAFFLE_STILL_OPEN","type":"error"},{"inputs":[],"name":"TICKET_ALREADY_DRAWN","type":"error"},{"inputs":[],"name":"TICKET_NOT_DRAWN","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"raffleContract","type":"address"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountReceived","type":"uint256"}],"name":"CreatorClaimTicketSalesAmount","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"raffleContract","type":"address"},{"components":[{"internalType":"address","name":"creator","type":"address"},{"internalType":"contract IERC20","name":"purchaseCurrency","type":"address"},{"internalType":"contract IERC721","name":"nftContract","type":"address"},{"internalType":"uint256","name":"nftId","type":"uint256"},{"internalType":"uint256","name":"maxTicketSupply","type":"uint256"},{"internalType":"uint256","name":"ticketSupply","type":"uint256"},{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"uint256","name":"winningTicketNumber","type":"uint256"},{"internalType":"uint64","name":"endTime","type":"uint64"},{"internalType":"bool","name":"isTicketDrawn","type":"bool"}],"indexed":false,"internalType":"struct RaffleDataTypes.RaffleData","name":"globalData","type":"tuple"}],"name":"NewRaffle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"raffleContract","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ticketNumbers","type":"uint256[]"}],"name":"TicketPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"raffleContract","type":"address"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":true,"internalType":"address","name":"nftContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"nftId","type":"uint256"}],"name":"WinnerClaimedPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"raffleContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"winningTicket","type":"uint256"}],"name":"WinningTicketDrawned","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimTicketSalesAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"creator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"drawnTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"creator","type":"address"},{"internalType":"contract IERC20","name":"purchaseCurrency","type":"address"},{"internalType":"contract IERC721","name":"nftContract","type":"address"},{"internalType":"uint256","name":"nftId","type":"uint256"},{"internalType":"uint256","name":"maxTicketSupply","type":"uint256"},{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"uint64","name":"endTime","type":"uint64"}],"internalType":"struct RaffleDataTypes.InitRaffleParams","name":"_data","type":"tuple"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isTicketDrawn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftToWin","outputs":[{"internalType":"contract IERC721","name":"nftContractAddress","type":"address"},{"internalType":"uint256","name":"nftId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"purchaseCurrency","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"nbOfTickets","type":"uint256"}],"name":"purchaseTickets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ticketPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winnerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningTicket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address)":{"returns":{"_0":"True if ticket has been drawn, False otherwise"}},"claimPrice()":{"details":"Ticket number must be draw and raffle close to new participants"},"claimTicketSalesAmount()":{"details":"The functions should send to the creator his part after fees"},"creator()":{"returns":{"_0":"The address of the creator"}},"endTime()":{"returns":{"_0":"The time in timestamps"}},"isTicketDrawn()":{"returns":{"_0":"True if ticket has been drawn, False otherwise"}},"maxSupply()":{"returns":{"_0":"The total amount of tickets sold"}},"nftToWin()":{"returns":{"nftContractAddress":"The address of the nft","nftId":"The id of the nft"}},"ownerOf(uint256)":{"returns":{"_0":"The address that bought the own the ticket"}},"purchaseCurrency()":{"returns":{"_0":"The address of the ERC20"}},"purchaseTickets(uint256)":{"details":"Only accessible if raffle still open to particpants","params":{"nbOfTickets":"number of tickets purchased"}},"ticketPrice()":{"returns":{"_0":"The amount of token that one ticket cost"}},"totalSupply()":{"returns":{"_0":"The total amount of tickets sold"}},"winnerAddress()":{"details":"revert if ticket sales not close and if ticket number hasn't be drawn","returns":{"_0":"The address of the wallet that won the raffle"}},"winningTicket()":{"details":"revert if ticket sales not close and if ticket number hasn't be drawn","returns":{"_0":"The ticket number that win the raffle"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610fb7806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063a127760011610071578063a127760014610241578063c26eea5414610254578063ccf1125c1461025c578063d5abeb0114610264578063ed7a4e0b1461026c57600080fd5b80636352211e146101df578063636ed74c146102085780636a4a5b2d1461021057806370a082311461022157600080fd5b8063237be938116100de578063237be9381461015e5780633197cbb61461017157806332095a661461018c5780633b398ff8146101a957600080fd5b806302d05d3f146101105780631209b1f61461013a57806315d655c91461014c57806318160ddd14610156575b600080fd5b6002546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6008545b604051908152602001610131565b610154610274565b005b60075461013e565b61015461016c366004610cda565b6103ba565b600a546040516001600160401b039091168152602001610131565b600a54600160401b900460ff166040519015158152602001610131565b6101c06004546005546001600160a01b0390911691565b604080516001600160a01b039093168352602083019190915201610131565b61011d6101ed366004610d82565b6000908152602081905260409020546001600160a01b031690565b610154610607565b6003546001600160a01b031661011d565b61023461022f366004610d9b565b6107a6565b6040516101319190610dbf565b61015461024f366004610d82565b610812565b61013e610ac6565b610154610b26565b60065461013e565b61011d610bf6565b600a546001600160401b03164210156102a057604051630c2695bf60e11b815260040160405180910390fd5b600a54600160401b900460ff166102ca576040516316de234960e11b815260040160405180910390fd5b6102d2610bf6565b6001600160a01b0316336001600160a01b0316146103035760405163b4e5b12160e01b815260040160405180910390fd5b60048054600554604051632142170760e11b8152309381019390935233602484015260448301526001600160a01b0316906342842e0e90606401600060405180830381600087803b15801561035757600080fd5b505af115801561036b573d6000803e3d6000fd5b50506004546005546040519081526001600160a01b03909116925033915030907f1fc6b0218aceb86978fcfee181f91a4a3f28d1eddff4e6df0c3dc99c79ace6d49060200160405180910390a4565b600b54610100900460ff16158080156103da5750600b54600160ff909116105b806103f45750303b1580156103f45750600b5460ff166001145b61045b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600b805460ff19166001179055801561047e57600b805461ff0019166101001790555b6040828101518351606085015192516323b872dd60e01b81526001600160a01b039182166004820152306024820152604481019390935216906323b872dd90606401600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b50508351600280546001600160a01b039283166001600160a01b03199182161790915560208601516003805491841691831691909117905560408601516004805491909316911617905550506060820151600555608082015160065560a082015160085560c08201516105619042610e19565b600a805467ffffffffffffffff19166001600160401b039290921691909117905560405130907f2db21921e7bb87a5d99fc29841e4b9ad6d32f7e9f0f12471f615d5c611dcf4e2906105b590600290610e40565b60405180910390a2801561060357600b805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600a546001600160401b031642101561063357604051630c2695bf60e11b815260040160405180910390fd5b600a54600160401b900460ff1661065d576040516316de234960e11b815260040160405180910390fd5b6002546001600160a01b0316331461068857604051632cff942760e01b815260040160405180910390fd5b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f59190610ed1565b60035460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610eea565b50604051818152339030907f2427926a2340a250197c73c9c1a12ca71ee0f1f53f8e08badda42770afc6ecf69060200160405180910390a350565b6001600160a01b03811660009081526001602090815260409182902080548351818402810184019094528084526060939283018282801561080657602002820191906000526020600020905b8154815260200190600101908083116107f2575b50505050509050919050565b600a546001600160401b0316421061083d5760405163377d0b8560e11b815260040160405180910390fd5b8060000361085e576040516398fccb2760e01b815260040160405180910390fd5b6006548161086b60075490565b6108759190610f0c565b1115610894576040516384bfcb9560e01b815260040160405180910390fd5b6003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190610ed1565b61090982610c6e565b11156109285760405163119563e560e31b815260040160405180910390fd5b6003546001600160a01b03166323b872dd333061094485610c6e565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190610eea565b503360009081526001602052604081206007549091836001600160401b038111156109e9576109e9610c85565b604051908082528060200260200182016040528015610a12578160200160208202803683370190505b50905060005b84811015610a7e5782828281518110610a3357610a33610f1f565b6020908102919091018101919091528454600181810187556000878152838120909201869055858252918190526040902080546001600160a01b031916331790559283019201610a18565b506007829055604051339030907f3298f998adc3ec4bdcc9bb12f2a924f1d28c61596124855d7d6d4d09e231847a90610ab8908590610dbf565b60405180910390a350505050565b600a546000906001600160401b0316421015610af557604051630c2695bf60e11b815260040160405180910390fd5b600a54600160401b900460ff16610b1f576040516316de234960e11b815260040160405180910390fd5b5060095490565b600a546001600160401b0316421015610b5257604051630c2695bf60e11b815260040160405180910390fd5b600a54600160401b900460ff1615610b7d57604051630a7f733d60e41b815260040160405180910390fd5b6000610b8a600143610f35565b60075490409150610b9b9082610f48565b6009819055600a805468ff00000000000000001916600160401b17905560405130917fbd2ef7d8e723142e22eed26d859400cda0ac602edacddc8b13f96c921011a9ac91610beb91815260200190565b60405180910390a250565b600a546000906001600160401b0316421015610c2557604051630c2695bf60e11b815260040160405180910390fd5b600a54600160401b900460ff16610c4f576040516316de234960e11b815260040160405180910390fd5b506009546000908152602081905260409020546001600160a01b031690565b600854600090610c7f908390610f6a565b92915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610cb057600080fd5b50565b8035610cbe81610c9b565b919050565b80356001600160401b0381168114610cbe57600080fd5b600060e08284031215610cec57600080fd5b60405160e081018181106001600160401b0382111715610d1c57634e487b7160e01b600052604160045260246000fd5b604052610d2883610cb3565b8152610d3660208401610cb3565b6020820152610d4760408401610cb3565b6040820152606083013560608201526080830135608082015260a083013560a0820152610d7660c08401610cc3565b60c08201529392505050565b600060208284031215610d9457600080fd5b5035919050565b600060208284031215610dad57600080fd5b8135610db881610c9b565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610df757835183529284019291840191600101610ddb565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03818116838216019080821115610e3957610e39610e03565b5092915050565b81546001600160a01b03168152610140810160018301546001600160a01b0390811660208401526002840154166040808401919091526003840154606084015260048401546080840152600584015460a0840152600684015460c0840152600784015460e084015260088401546001600160401b0381166101008501529081901c60ff161515610120840152610e39565b600060208284031215610ee357600080fd5b5051919050565b600060208284031215610efc57600080fd5b81518015158114610db857600080fd5b80820180821115610c7f57610c7f610e03565b634e487b7160e01b600052603260045260246000fd5b81810381811115610c7f57610c7f610e03565b600082610f6557634e487b7160e01b600052601260045260246000fd5b500690565b8082028115828204841417610c7f57610c7f610e0356fea26469706673582212201e9fa1818240fa80f2f8f72dc0cbeee3fe798d4f94da487c070d59fb4b4a2f6764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA1277600 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA1277600 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xC26EEA54 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xCCF1125C EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xED7A4E0B EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x636ED74C EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x6A4A5B2D EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x237BE938 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x237BE938 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x32095A66 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x3B398FF8 EQ PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1209B1F6 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x274 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x13E JUMP JUMPDEST PUSH2 0x154 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x131 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D JUMP JUMPDEST PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x154 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH2 0x13E PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x154 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x13E JUMP JUMPDEST PUSH2 0x11D PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D2 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4E5B121 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP CALLER SWAP2 POP ADDRESS SWAP1 PUSH32 0x1FC6B0218ACEB86978FCFEE181F91A4A3F28D1EDDFF4E6DF0C3DC99C79ACE6D4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3DA JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3F4 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F4 JUMPI POP PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0xB DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP3 DUP2 ADD MLOAD DUP4 MLOAD PUSH1 0x60 DUP6 ADD MLOAD SWAP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP4 MLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x4 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x5 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x6 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x8 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x561 SWAP1 TIMESTAMP PUSH2 0xE19 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH32 0x2DB21921E7BB87A5D99FC29841E4B9AD6D32F7E9F0F12471F615D5C611DCF4E2 SWAP1 PUSH2 0x5B5 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0xB DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CFF9427 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 ADDRESS SWAP1 PUSH32 0x2427926A2340A250197C73C9C1A12CA71EE0F1F53F8E08BADDA42770AFC6ECF6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x7F2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH4 0x377D0B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH4 0x98FCCB27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH2 0x86B PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST GT ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH4 0x84BFCB95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x909 DUP3 PUSH2 0xC6E JUMP JUMPDEST GT ISZERO PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119563E5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0x944 DUP6 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 SLOAD SWAP1 SWAP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x9E9 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA12 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA7E JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA33 JUMPI PUSH2 0xA33 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP4 DUP2 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE DUP6 DUP3 MSTORE SWAP2 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xA18 JUMP JUMPDEST POP PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 ADDRESS SWAP1 PUSH32 0x3298F998ADC3EC4BDCC9BB12F2A924F1D28C61596124855D7D6D4D09E231847A SWAP1 PUSH2 0xAB8 SWAP1 DUP6 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA7F733D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB8A PUSH1 0x1 NUMBER PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 BLOCKHASH SWAP2 POP PUSH2 0xB9B SWAP1 DUP3 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP2 PUSH32 0xBD2EF7D8E723142E22EED26D859400CDA0AC602EDACDDC8B13F96C921011A9AC SWAP2 PUSH2 0xBEB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xC7F SWAP1 DUP4 SWAP1 PUSH2 0xF6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xCBE DUP2 PUSH2 0xC9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0xD1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0xD28 DUP4 PUSH2 0xCB3 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xD36 PUSH1 0x20 DUP5 ADD PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD47 PUSH1 0x40 DUP5 ADD PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xD76 PUSH1 0xC0 DUP5 ADD PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDB8 DUP2 PUSH2 0xC9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF7 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDDB JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xE39 JUMPI PUSH2 0xE39 PUSH2 0xE03 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x140 DUP2 ADD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xE03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF65 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xE03 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP16 LOG1 DUP2 DUP3 BLOCKHASH STATICCALL DUP1 CALLCODE 0xF8 0xF7 0x2D 0xC0 0xCB 0xEE 0xE3 INVALID PUSH26 0x8D4F94DA487C070D59FB4B4A2F6764736F6C6343000811003300 ","sourceMap":"543:8150:26:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_calculateTotalTicketsPrice_4927":{"entryPoint":3182,"id":4927,"parameterSlots":1,"returnSlots":1},"@balanceOf_4898":{"entryPoint":1958,"id":4898,"parameterSlots":1,"returnSlots":1},"@claimPrice_4715":{"entryPoint":628,"id":4715,"parameterSlots":0,"returnSlots":0},"@claimTicketSalesAmount_4767":{"entryPoint":1543,"id":4767,"parameterSlots":0,"returnSlots":0},"@creator_4797":{"entryPoint":null,"id":4797,"parameterSlots":0,"returnSlots":1},"@drawnTicket_4663":{"entryPoint":2854,"id":4663,"parameterSlots":0,"returnSlots":0},"@endTime_4828":{"entryPoint":null,"id":4828,"parameterSlots":0,"returnSlots":1},"@initialize_4476":{"entryPoint":954,"id":4476,"parameterSlots":1,"returnSlots":0},"@isContract_2371":{"entryPoint":null,"id":2371,"parameterSlots":1,"returnSlots":1},"@isTicketDrawn_4884":{"entryPoint":null,"id":4884,"parameterSlots":0,"returnSlots":1},"@maxSupply_4787":{"entryPoint":null,"id":4787,"parameterSlots":0,"returnSlots":1},"@nftToWin_4874":{"entryPoint":null,"id":4874,"parameterSlots":0,"returnSlots":2},"@ownerOf_4911":{"entryPoint":null,"id":4911,"parameterSlots":1,"returnSlots":1},"@purchaseCurrency_4808":{"entryPoint":null,"id":4808,"parameterSlots":0,"returnSlots":1},"@purchaseTickets_4616":{"entryPoint":2066,"id":4616,"parameterSlots":1,"returnSlots":0},"@ticketPrice_4818":{"entryPoint":null,"id":4818,"parameterSlots":0,"returnSlots":1},"@totalSupply_4777":{"entryPoint":null,"id":4777,"parameterSlots":0,"returnSlots":1},"@winnerAddress_4858":{"entryPoint":3062,"id":4858,"parameterSlots":0,"returnSlots":1},"@winningTicket_4842":{"entryPoint":2758,"id":4842,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":3251,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_InitRaffleParams_$4974_memory_ptr":{"entryPoint":3290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint64":{"entryPoint":3267,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1222__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC721_$2308_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_RaffleData_$4957_storage__to_t_struct$_RaffleData_$4957_memory_ptr__fromStack_reversed":{"entryPoint":3648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_t_uint256":{"entryPoint":3852,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3946,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3893,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":3912,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3587,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3871,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3205,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3227,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8402:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:60:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"75:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"99:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"104:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"95:3:29"},"nodeType":"YulFunctionCall","src":"95:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"108:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"91:3:29"},"nodeType":"YulFunctionCall","src":"91:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"80:3:29"},"nodeType":"YulFunctionCall","src":"80:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"68:6:29"},"nodeType":"YulFunctionCall","src":"68:44:29"},"nodeType":"YulExpressionStatement","src":"68:44:29"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49:3:29","type":""}],"src":"14:104:29"},{"body":{"nodeType":"YulBlock","src":"224:102:29","statements":[{"nodeType":"YulAssignment","src":"234:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"246:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"257:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"242:3:29"},"nodeType":"YulFunctionCall","src":"242:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"234:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"276:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"291:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"307:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"303:3:29"},"nodeType":"YulFunctionCall","src":"303:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"299:3:29"},"nodeType":"YulFunctionCall","src":"299:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"287:3:29"},"nodeType":"YulFunctionCall","src":"287:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"269:6:29"},"nodeType":"YulFunctionCall","src":"269:51:29"},"nodeType":"YulExpressionStatement","src":"269:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"193:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"204:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"215:4:29","type":""}],"src":"123:203:29"},{"body":{"nodeType":"YulBlock","src":"432:76:29","statements":[{"nodeType":"YulAssignment","src":"442:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:29"},"nodeType":"YulFunctionCall","src":"450:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"442:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"484:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"495:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"477:6:29"},"nodeType":"YulFunctionCall","src":"477:25:29"},"nodeType":"YulExpressionStatement","src":"477:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"401:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"412:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"423:4:29","type":""}],"src":"331:177:29"},{"body":{"nodeType":"YulBlock","src":"545:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"562:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"569:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"574:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"565:3:29"},"nodeType":"YulFunctionCall","src":"565:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"555:6:29"},"nodeType":"YulFunctionCall","src":"555:31:29"},"nodeType":"YulExpressionStatement","src":"555:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"602:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"605:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"595:6:29"},"nodeType":"YulFunctionCall","src":"595:15:29"},"nodeType":"YulExpressionStatement","src":"595:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"626:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"629:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"619:6:29"},"nodeType":"YulFunctionCall","src":"619:15:29"},"nodeType":"YulExpressionStatement","src":"619:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"513:127:29"},{"body":{"nodeType":"YulBlock","src":"690:86:29","statements":[{"body":{"nodeType":"YulBlock","src":"754:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"763:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"766:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"756:6:29"},"nodeType":"YulFunctionCall","src":"756:12:29"},"nodeType":"YulExpressionStatement","src":"756:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"713:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"724:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"739:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"744:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"735:3:29"},"nodeType":"YulFunctionCall","src":"735:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"748:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"731:3:29"},"nodeType":"YulFunctionCall","src":"731:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"720:3:29"},"nodeType":"YulFunctionCall","src":"720:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"710:2:29"},"nodeType":"YulFunctionCall","src":"710:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"703:6:29"},"nodeType":"YulFunctionCall","src":"703:50:29"},"nodeType":"YulIf","src":"700:70:29"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"679:5:29","type":""}],"src":"645:131:29"},{"body":{"nodeType":"YulBlock","src":"830:85:29","statements":[{"nodeType":"YulAssignment","src":"840:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"862:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"849:12:29"},"nodeType":"YulFunctionCall","src":"849:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"840:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"903:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"878:24:29"},"nodeType":"YulFunctionCall","src":"878:31:29"},"nodeType":"YulExpressionStatement","src":"878:31:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"809:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"820:5:29","type":""}],"src":"781:134:29"},{"body":{"nodeType":"YulBlock","src":"968:123:29","statements":[{"nodeType":"YulAssignment","src":"978:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1000:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"987:12:29"},"nodeType":"YulFunctionCall","src":"987:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:29"}]},{"body":{"nodeType":"YulBlock","src":"1069:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1078:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1081:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1071:6:29"},"nodeType":"YulFunctionCall","src":"1071:12:29"},"nodeType":"YulExpressionStatement","src":"1071:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1040:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1047:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:30:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1026:2:29"},"nodeType":"YulFunctionCall","src":"1026:41:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1019:6:29"},"nodeType":"YulFunctionCall","src":"1019:49:29"},"nodeType":"YulIf","src":"1016:69:29"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"947:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"958:5:29","type":""}],"src":"920:171:29"},{"body":{"nodeType":"YulBlock","src":"1200:867:29","statements":[{"body":{"nodeType":"YulBlock","src":"1247:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1256:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1259:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1249:6:29"},"nodeType":"YulFunctionCall","src":"1249:12:29"},"nodeType":"YulExpressionStatement","src":"1249:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1221:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1217:3:29"},"nodeType":"YulFunctionCall","src":"1217:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1242:3:29","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1213:3:29"},"nodeType":"YulFunctionCall","src":"1213:33:29"},"nodeType":"YulIf","src":"1210:53:29"},{"nodeType":"YulVariableDeclaration","src":"1272:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1292:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1286:5:29"},"nodeType":"YulFunctionCall","src":"1286:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1276:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1304:34:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1326:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1334:3:29","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:29"},"nodeType":"YulFunctionCall","src":"1322:16:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1308:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1421:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1442:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1449:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1454:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1445:3:29"},"nodeType":"YulFunctionCall","src":"1445:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1435:6:29"},"nodeType":"YulFunctionCall","src":"1435:31:29"},"nodeType":"YulExpressionStatement","src":"1435:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1486:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1489:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1479:6:29"},"nodeType":"YulFunctionCall","src":"1479:15:29"},"nodeType":"YulExpressionStatement","src":"1479:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1514:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1517:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1507:6:29"},"nodeType":"YulFunctionCall","src":"1507:15:29"},"nodeType":"YulExpressionStatement","src":"1507:15:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1356:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1368:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1353:2:29"},"nodeType":"YulFunctionCall","src":"1353:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1392:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1404:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1389:2:29"},"nodeType":"YulFunctionCall","src":"1389:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1350:2:29"},"nodeType":"YulFunctionCall","src":"1350:62:29"},"nodeType":"YulIf","src":"1347:185:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1548:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1552:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1541:6:29"},"nodeType":"YulFunctionCall","src":"1541:22:29"},"nodeType":"YulExpressionStatement","src":"1541:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1579:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1587:18:29"},"nodeType":"YulFunctionCall","src":"1587:29:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1572:6:29"},"nodeType":"YulFunctionCall","src":"1572:45:29"},"nodeType":"YulExpressionStatement","src":"1572:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1637:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1633:3:29"},"nodeType":"YulFunctionCall","src":"1633:15:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1684:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:29"},"nodeType":"YulFunctionCall","src":"1669:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1650:18:29"},"nodeType":"YulFunctionCall","src":"1650:38:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1626:6:29"},"nodeType":"YulFunctionCall","src":"1626:63:29"},"nodeType":"YulExpressionStatement","src":"1626:63:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1709:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1717:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:29"},"nodeType":"YulFunctionCall","src":"1705:15:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1745:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1756:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1741:3:29"},"nodeType":"YulFunctionCall","src":"1741:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1722:18:29"},"nodeType":"YulFunctionCall","src":"1722:38:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1698:6:29"},"nodeType":"YulFunctionCall","src":"1698:63:29"},"nodeType":"YulExpressionStatement","src":"1698:63:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1781:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1789:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1777:3:29"},"nodeType":"YulFunctionCall","src":"1777:15:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1811:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1822:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1807:3:29"},"nodeType":"YulFunctionCall","src":"1807:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1794:12:29"},"nodeType":"YulFunctionCall","src":"1794:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1770:6:29"},"nodeType":"YulFunctionCall","src":"1770:57:29"},"nodeType":"YulExpressionStatement","src":"1770:57:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1847:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1855:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1843:3:29"},"nodeType":"YulFunctionCall","src":"1843:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1889:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:29"},"nodeType":"YulFunctionCall","src":"1874:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1861:12:29"},"nodeType":"YulFunctionCall","src":"1861:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1836:6:29"},"nodeType":"YulFunctionCall","src":"1836:59:29"},"nodeType":"YulExpressionStatement","src":"1836:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1915:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1923:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:29"},"nodeType":"YulFunctionCall","src":"1911:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1946:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1957:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:29"},"nodeType":"YulFunctionCall","src":"1942:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1929:12:29"},"nodeType":"YulFunctionCall","src":"1929:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1904:6:29"},"nodeType":"YulFunctionCall","src":"1904:59:29"},"nodeType":"YulExpressionStatement","src":"1904:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1983:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1991:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:29"},"nodeType":"YulFunctionCall","src":"1979:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2030:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2015:3:29"},"nodeType":"YulFunctionCall","src":"2015:19:29"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"1997:17:29"},"nodeType":"YulFunctionCall","src":"1997:38:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1972:6:29"},"nodeType":"YulFunctionCall","src":"1972:64:29"},"nodeType":"YulExpressionStatement","src":"1972:64:29"},{"nodeType":"YulAssignment","src":"2045:16:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2055:6:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2045:6:29"}]}]},"name":"abi_decode_tuple_t_struct$_InitRaffleParams_$4974_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1166:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1177:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1189:6:29","type":""}],"src":"1096:971:29"},{"body":{"nodeType":"YulBlock","src":"2115:59:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2132:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2141:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2148:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2137:3:29"},"nodeType":"YulFunctionCall","src":"2137:30:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2125:6:29"},"nodeType":"YulFunctionCall","src":"2125:43:29"},"nodeType":"YulExpressionStatement","src":"2125:43:29"}]},"name":"abi_encode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2099:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2106:3:29","type":""}],"src":"2072:102:29"},{"body":{"nodeType":"YulBlock","src":"2278:101:29","statements":[{"nodeType":"YulAssignment","src":"2288:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2300:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2311:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2296:3:29"},"nodeType":"YulFunctionCall","src":"2296:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2288:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2345:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2353:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:29"},"nodeType":"YulFunctionCall","src":"2341:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:29"},"nodeType":"YulFunctionCall","src":"2323:50:29"},"nodeType":"YulExpressionStatement","src":"2323:50:29"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2247:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2258:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2269:4:29","type":""}],"src":"2179:200:29"},{"body":{"nodeType":"YulBlock","src":"2425:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2442:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2461:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2454:6:29"},"nodeType":"YulFunctionCall","src":"2454:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2447:6:29"},"nodeType":"YulFunctionCall","src":"2447:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2435:6:29"},"nodeType":"YulFunctionCall","src":"2435:34:29"},"nodeType":"YulExpressionStatement","src":"2435:34:29"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2409:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2416:3:29","type":""}],"src":"2384:91:29"},{"body":{"nodeType":"YulBlock","src":"2575:92:29","statements":[{"nodeType":"YulAssignment","src":"2585:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2597:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2608:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2593:3:29"},"nodeType":"YulFunctionCall","src":"2593:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2585:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2627:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2652:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2645:6:29"},"nodeType":"YulFunctionCall","src":"2645:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2638:6:29"},"nodeType":"YulFunctionCall","src":"2638:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2620:6:29"},"nodeType":"YulFunctionCall","src":"2620:41:29"},"nodeType":"YulExpressionStatement","src":"2620:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2544:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2555:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2566:4:29","type":""}],"src":"2480:187:29"},{"body":{"nodeType":"YulBlock","src":"2817:145:29","statements":[{"nodeType":"YulAssignment","src":"2827:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2839:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2850:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2835:3:29"},"nodeType":"YulFunctionCall","src":"2835:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2827:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2884:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2900:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2905:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2896:3:29"},"nodeType":"YulFunctionCall","src":"2896:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2909:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2892:3:29"},"nodeType":"YulFunctionCall","src":"2892:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2880:3:29"},"nodeType":"YulFunctionCall","src":"2880:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2862:6:29"},"nodeType":"YulFunctionCall","src":"2862:51:29"},"nodeType":"YulExpressionStatement","src":"2862:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2933:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2944:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2929:3:29"},"nodeType":"YulFunctionCall","src":"2929:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"2949:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2922:6:29"},"nodeType":"YulFunctionCall","src":"2922:34:29"},"nodeType":"YulExpressionStatement","src":"2922:34:29"}]},"name":"abi_encode_tuple_t_contract$_IERC721_$2308_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2778:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2789:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2797:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2808:4:29","type":""}],"src":"2672:290:29"},{"body":{"nodeType":"YulBlock","src":"3037:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"3083:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3092:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3095:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3085:6:29"},"nodeType":"YulFunctionCall","src":"3085:12:29"},"nodeType":"YulExpressionStatement","src":"3085:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3058:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3067:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3054:3:29"},"nodeType":"YulFunctionCall","src":"3054:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3079:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3050:3:29"},"nodeType":"YulFunctionCall","src":"3050:32:29"},"nodeType":"YulIf","src":"3047:52:29"},{"nodeType":"YulAssignment","src":"3108:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3131:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3118:12:29"},"nodeType":"YulFunctionCall","src":"3118:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3108:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3003:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3014:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3026:6:29","type":""}],"src":"2967:180:29"},{"body":{"nodeType":"YulBlock","src":"3268:102:29","statements":[{"nodeType":"YulAssignment","src":"3278:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3290:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3301:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3286:3:29"},"nodeType":"YulFunctionCall","src":"3286:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3278:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3335:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3351:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3356:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3347:3:29"},"nodeType":"YulFunctionCall","src":"3347:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"3360:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3343:3:29"},"nodeType":"YulFunctionCall","src":"3343:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3331:3:29"},"nodeType":"YulFunctionCall","src":"3331:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3313:6:29"},"nodeType":"YulFunctionCall","src":"3313:51:29"},"nodeType":"YulExpressionStatement","src":"3313:51:29"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1222__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3237:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3248:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3259:4:29","type":""}],"src":"3152:218:29"},{"body":{"nodeType":"YulBlock","src":"3445:177:29","statements":[{"body":{"nodeType":"YulBlock","src":"3491:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3500:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3503:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3493:6:29"},"nodeType":"YulFunctionCall","src":"3493:12:29"},"nodeType":"YulExpressionStatement","src":"3493:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3466:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3475:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3462:3:29"},"nodeType":"YulFunctionCall","src":"3462:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3487:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3458:3:29"},"nodeType":"YulFunctionCall","src":"3458:32:29"},"nodeType":"YulIf","src":"3455:52:29"},{"nodeType":"YulVariableDeclaration","src":"3516:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3542:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3529:12:29"},"nodeType":"YulFunctionCall","src":"3529:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3520:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3586:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3561:24:29"},"nodeType":"YulFunctionCall","src":"3561:31:29"},"nodeType":"YulExpressionStatement","src":"3561:31:29"},{"nodeType":"YulAssignment","src":"3601:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3611:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3601:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3411:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3422:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3434:6:29","type":""}],"src":"3375:247:29"},{"body":{"nodeType":"YulBlock","src":"3778:481:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3788:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3798:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3792:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3809:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3827:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3838:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3823:3:29"},"nodeType":"YulFunctionCall","src":"3823:18:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3813:6:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3857:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3868:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3850:6:29"},"nodeType":"YulFunctionCall","src":"3850:21:29"},"nodeType":"YulExpressionStatement","src":"3850:21:29"},{"nodeType":"YulVariableDeclaration","src":"3880:17:29","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3891:6:29"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3884:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3906:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3926:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3920:5:29"},"nodeType":"YulFunctionCall","src":"3920:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3910:6:29","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3949:6:29"},{"name":"length","nodeType":"YulIdentifier","src":"3957:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3942:6:29"},"nodeType":"YulFunctionCall","src":"3942:22:29"},"nodeType":"YulExpressionStatement","src":"3942:22:29"},{"nodeType":"YulAssignment","src":"3973:25:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3984:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3995:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3980:3:29"},"nodeType":"YulFunctionCall","src":"3980:18:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3973:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"4007:29:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4025:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4033:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4021:3:29"},"nodeType":"YulFunctionCall","src":"4021:15:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4011:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4045:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4054:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4049:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4113:120:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4134:3:29"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4145:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4139:5:29"},"nodeType":"YulFunctionCall","src":"4139:13:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4127:6:29"},"nodeType":"YulFunctionCall","src":"4127:26:29"},"nodeType":"YulExpressionStatement","src":"4127:26:29"},{"nodeType":"YulAssignment","src":"4166:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4177:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4182:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4173:3:29"},"nodeType":"YulFunctionCall","src":"4173:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4166:3:29"}]},{"nodeType":"YulAssignment","src":"4198:25:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4212:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4220:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4208:3:29"},"nodeType":"YulFunctionCall","src":"4208:15:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4198:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4075:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"4078:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4072:2:29"},"nodeType":"YulFunctionCall","src":"4072:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4086:18:29","statements":[{"nodeType":"YulAssignment","src":"4088:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4097:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"4100:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4093:3:29"},"nodeType":"YulFunctionCall","src":"4093:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4088:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"4068:3:29","statements":[]},"src":"4064:169:29"},{"nodeType":"YulAssignment","src":"4242:11:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4242:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3747:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3758:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3769:4:29","type":""}],"src":"3627:632:29"},{"body":{"nodeType":"YulBlock","src":"4421:218:29","statements":[{"nodeType":"YulAssignment","src":"4431:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4443:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4454:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4439:3:29"},"nodeType":"YulFunctionCall","src":"4439:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4431:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"4466:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4484:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4489:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4480:3:29"},"nodeType":"YulFunctionCall","src":"4480:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"4493:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4476:3:29"},"nodeType":"YulFunctionCall","src":"4476:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4470:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4511:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4526:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4534:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4522:3:29"},"nodeType":"YulFunctionCall","src":"4522:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4504:6:29"},"nodeType":"YulFunctionCall","src":"4504:34:29"},"nodeType":"YulExpressionStatement","src":"4504:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4558:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4569:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:29"},"nodeType":"YulFunctionCall","src":"4554:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4578:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4586:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4574:3:29"},"nodeType":"YulFunctionCall","src":"4574:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4547:6:29"},"nodeType":"YulFunctionCall","src":"4547:43:29"},"nodeType":"YulExpressionStatement","src":"4547:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4610:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4621:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4606:3:29"},"nodeType":"YulFunctionCall","src":"4606:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"4626:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4599:6:29"},"nodeType":"YulFunctionCall","src":"4599:34:29"},"nodeType":"YulExpressionStatement","src":"4599:34:29"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4374:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4385:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4393:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4401:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4412:4:29","type":""}],"src":"4264:375:29"},{"body":{"nodeType":"YulBlock","src":"4818:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4835:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4846:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4828:6:29"},"nodeType":"YulFunctionCall","src":"4828:21:29"},"nodeType":"YulExpressionStatement","src":"4828:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4869:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4880:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4865:3:29"},"nodeType":"YulFunctionCall","src":"4865:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4885:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4858:6:29"},"nodeType":"YulFunctionCall","src":"4858:30:29"},"nodeType":"YulExpressionStatement","src":"4858:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4908:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4919:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4904:3:29"},"nodeType":"YulFunctionCall","src":"4904:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"4924:34:29","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4897:6:29"},"nodeType":"YulFunctionCall","src":"4897:62:29"},"nodeType":"YulExpressionStatement","src":"4897:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4979:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4990:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4975:3:29"},"nodeType":"YulFunctionCall","src":"4975:18:29"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"4995:16:29","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4968:6:29"},"nodeType":"YulFunctionCall","src":"4968:44:29"},"nodeType":"YulExpressionStatement","src":"4968:44:29"},{"nodeType":"YulAssignment","src":"5021:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5033:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5044:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5029:3:29"},"nodeType":"YulFunctionCall","src":"5029:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5021:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4809:4:29","type":""}],"src":"4644:410:29"},{"body":{"nodeType":"YulBlock","src":"5091:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5108:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5115:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5120:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5111:3:29"},"nodeType":"YulFunctionCall","src":"5111:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5101:6:29"},"nodeType":"YulFunctionCall","src":"5101:31:29"},"nodeType":"YulExpressionStatement","src":"5101:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5148:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5151:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5141:6:29"},"nodeType":"YulFunctionCall","src":"5141:15:29"},"nodeType":"YulExpressionStatement","src":"5141:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5172:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5175:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5165:6:29"},"nodeType":"YulFunctionCall","src":"5165:15:29"},"nodeType":"YulExpressionStatement","src":"5165:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5059:127:29"},{"body":{"nodeType":"YulBlock","src":"5238:133:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5248:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5258:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5252:2:29","type":""}]},{"nodeType":"YulAssignment","src":"5285:34:29","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5300:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5303:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5296:3:29"},"nodeType":"YulFunctionCall","src":"5296:10:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5312:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5315:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5308:3:29"},"nodeType":"YulFunctionCall","src":"5308:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:29"},"nodeType":"YulFunctionCall","src":"5292:27:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5285:3:29"}]},{"body":{"nodeType":"YulBlock","src":"5343:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5345:16:29"},"nodeType":"YulFunctionCall","src":"5345:18:29"},"nodeType":"YulExpressionStatement","src":"5345:18:29"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"5334:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5339:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5331:2:29"},"nodeType":"YulFunctionCall","src":"5331:11:29"},"nodeType":"YulIf","src":"5328:37:29"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5221:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"5224:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5230:3:29","type":""}],"src":"5191:180:29"},{"body":{"nodeType":"YulBlock","src":"5453:61:29","statements":[{"nodeType":"YulAssignment","src":"5463:45:29","value":{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"5476:10:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5496:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5501:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5492:3:29"},"nodeType":"YulFunctionCall","src":"5492:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"5505:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5488:3:29"},"nodeType":"YulFunctionCall","src":"5488:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5472:3:29"},"nodeType":"YulFunctionCall","src":"5472:36:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5463:5:29"}]}]},"name":"extract_from_storage_value_offsett_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"5428:10:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5443:5:29","type":""}],"src":"5376:138:29"},{"body":{"nodeType":"YulBlock","src":"5673:996:29","statements":[{"nodeType":"YulAssignment","src":"5683:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5695:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5706:3:29","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5691:3:29"},"nodeType":"YulFunctionCall","src":"5691:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5683:4:29"}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5787:6:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5781:5:29"},"nodeType":"YulFunctionCall","src":"5781:13:29"}],"functionName":{"name":"extract_from_storage_value_offsett_address","nodeType":"YulIdentifier","src":"5738:42:29"},"nodeType":"YulFunctionCall","src":"5738:57:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5797:9:29"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"5719:18:29"},"nodeType":"YulFunctionCall","src":"5719:88:29"},"nodeType":"YulExpressionStatement","src":"5719:88:29"},{"nodeType":"YulVariableDeclaration","src":"5816:88:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5889:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5897:4:29","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5885:3:29"},"nodeType":"YulFunctionCall","src":"5885:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5879:5:29"},"nodeType":"YulFunctionCall","src":"5879:24:29"}],"functionName":{"name":"extract_from_storage_value_offsett_address","nodeType":"YulIdentifier","src":"5836:42:29"},"nodeType":"YulFunctionCall","src":"5836:68:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5820:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5932:12:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5950:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5961:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5946:3:29"},"nodeType":"YulFunctionCall","src":"5946:20:29"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"5913:18:29"},"nodeType":"YulFunctionCall","src":"5913:54:29"},"nodeType":"YulExpressionStatement","src":"5913:54:29"},{"nodeType":"YulVariableDeclaration","src":"5976:90:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6051:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:29","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6047:3:29"},"nodeType":"YulFunctionCall","src":"6047:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6041:5:29"},"nodeType":"YulFunctionCall","src":"6041:24:29"}],"functionName":{"name":"extract_from_storage_value_offsett_address","nodeType":"YulIdentifier","src":"5998:42:29"},"nodeType":"YulFunctionCall","src":"5998:68:29"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"5980:14:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"6094:14:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6114:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6125:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6110:3:29"},"nodeType":"YulFunctionCall","src":"6110:20:29"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"6075:18:29"},"nodeType":"YulFunctionCall","src":"6075:56:29"},"nodeType":"YulExpressionStatement","src":"6075:56:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6151:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6162:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6147:3:29"},"nodeType":"YulFunctionCall","src":"6147:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6187:4:29","type":"","value":"0x03"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6175:3:29"},"nodeType":"YulFunctionCall","src":"6175:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6169:5:29"},"nodeType":"YulFunctionCall","src":"6169:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6140:6:29"},"nodeType":"YulFunctionCall","src":"6140:54:29"},"nodeType":"YulExpressionStatement","src":"6140:54:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6214:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6225:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6210:3:29"},"nodeType":"YulFunctionCall","src":"6210:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6242:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6250:4:29","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6238:3:29"},"nodeType":"YulFunctionCall","src":"6238:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6232:5:29"},"nodeType":"YulFunctionCall","src":"6232:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6203:6:29"},"nodeType":"YulFunctionCall","src":"6203:54:29"},"nodeType":"YulExpressionStatement","src":"6203:54:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6277:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6288:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6273:3:29"},"nodeType":"YulFunctionCall","src":"6273:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6305:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6313:4:29","type":"","value":"0x05"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:29"},"nodeType":"YulFunctionCall","src":"6301:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6295:5:29"},"nodeType":"YulFunctionCall","src":"6295:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:29"},"nodeType":"YulFunctionCall","src":"6266:54:29"},"nodeType":"YulExpressionStatement","src":"6266:54:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6340:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6351:4:29","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6336:3:29"},"nodeType":"YulFunctionCall","src":"6336:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6368:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6376:4:29","type":"","value":"0x06"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6364:3:29"},"nodeType":"YulFunctionCall","src":"6364:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6358:5:29"},"nodeType":"YulFunctionCall","src":"6358:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6329:6:29"},"nodeType":"YulFunctionCall","src":"6329:54:29"},"nodeType":"YulExpressionStatement","src":"6329:54:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6403:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6414:4:29","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6399:3:29"},"nodeType":"YulFunctionCall","src":"6399:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6431:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6439:4:29","type":"","value":"0x07"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6427:3:29"},"nodeType":"YulFunctionCall","src":"6427:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6421:5:29"},"nodeType":"YulFunctionCall","src":"6421:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6392:6:29"},"nodeType":"YulFunctionCall","src":"6392:54:29"},"nodeType":"YulExpressionStatement","src":"6392:54:29"},{"nodeType":"YulVariableDeclaration","src":"6455:41:29","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6482:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6490:4:29","type":"","value":"0x08"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:29"},"nodeType":"YulFunctionCall","src":"6478:17:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6472:5:29"},"nodeType":"YulFunctionCall","src":"6472:24:29"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"6459:9:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6527:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6538:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6523:3:29"},"nodeType":"YulFunctionCall","src":"6523:34:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6563:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6574:6:29","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6559:3:29"},"nodeType":"YulFunctionCall","src":"6559:22:29"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"6505:17:29"},"nodeType":"YulFunctionCall","src":"6505:77:29"},"nodeType":"YulExpressionStatement","src":"6505:77:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6615:4:29","type":"","value":"0x40"},{"name":"slotValue","nodeType":"YulIdentifier","src":"6621:9:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6611:3:29"},"nodeType":"YulFunctionCall","src":"6611:20:29"},{"kind":"number","nodeType":"YulLiteral","src":"6633:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6607:3:29"},"nodeType":"YulFunctionCall","src":"6607:31:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6644:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6655:6:29","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6640:3:29"},"nodeType":"YulFunctionCall","src":"6640:22:29"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"6591:15:29"},"nodeType":"YulFunctionCall","src":"6591:72:29"},"nodeType":"YulExpressionStatement","src":"6591:72:29"}]},"name":"abi_encode_tuple_t_struct$_RaffleData_$4957_storage__to_t_struct$_RaffleData_$4957_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5642:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5653:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5664:4:29","type":""}],"src":"5519:1150:29"},{"body":{"nodeType":"YulBlock","src":"6781:87:29","statements":[{"nodeType":"YulAssignment","src":"6791:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6803:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6814:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6799:3:29"},"nodeType":"YulFunctionCall","src":"6799:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6791:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6833:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6848:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6856:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6844:3:29"},"nodeType":"YulFunctionCall","src":"6844:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6826:6:29"},"nodeType":"YulFunctionCall","src":"6826:36:29"},"nodeType":"YulExpressionStatement","src":"6826:36:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6750:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6761:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6772:4:29","type":""}],"src":"6674:194:29"},{"body":{"nodeType":"YulBlock","src":"6954:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"7000:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7009:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7012:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7002:6:29"},"nodeType":"YulFunctionCall","src":"7002:12:29"},"nodeType":"YulExpressionStatement","src":"7002:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6975:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6984:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6971:3:29"},"nodeType":"YulFunctionCall","src":"6971:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6967:3:29"},"nodeType":"YulFunctionCall","src":"6967:32:29"},"nodeType":"YulIf","src":"6964:52:29"},{"nodeType":"YulAssignment","src":"7025:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7041:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7035:5:29"},"nodeType":"YulFunctionCall","src":"7035:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7025:6:29"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6920:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6931:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6943:6:29","type":""}],"src":"6873:184:29"},{"body":{"nodeType":"YulBlock","src":"7191:145:29","statements":[{"nodeType":"YulAssignment","src":"7201:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7213:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7224:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7209:3:29"},"nodeType":"YulFunctionCall","src":"7209:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7201:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7243:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7258:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7274:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7279:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7270:3:29"},"nodeType":"YulFunctionCall","src":"7270:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"7283:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7266:3:29"},"nodeType":"YulFunctionCall","src":"7266:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7254:3:29"},"nodeType":"YulFunctionCall","src":"7254:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7236:6:29"},"nodeType":"YulFunctionCall","src":"7236:51:29"},"nodeType":"YulExpressionStatement","src":"7236:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7307:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7318:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:29"},"nodeType":"YulFunctionCall","src":"7303:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"7323:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7296:6:29"},"nodeType":"YulFunctionCall","src":"7296:34:29"},"nodeType":"YulExpressionStatement","src":"7296:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7152:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7163:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7171:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7182:4:29","type":""}],"src":"7062:274:29"},{"body":{"nodeType":"YulBlock","src":"7419:199:29","statements":[{"body":{"nodeType":"YulBlock","src":"7465:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7474:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7477:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7467:6:29"},"nodeType":"YulFunctionCall","src":"7467:12:29"},"nodeType":"YulExpressionStatement","src":"7467:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7440:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7449:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7436:3:29"},"nodeType":"YulFunctionCall","src":"7436:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7461:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7432:3:29"},"nodeType":"YulFunctionCall","src":"7432:32:29"},"nodeType":"YulIf","src":"7429:52:29"},{"nodeType":"YulVariableDeclaration","src":"7490:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7509:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7503:5:29"},"nodeType":"YulFunctionCall","src":"7503:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7494:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7572:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7581:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7584:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7574:6:29"},"nodeType":"YulFunctionCall","src":"7574:12:29"},"nodeType":"YulExpressionStatement","src":"7574:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7541:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7562:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7555:6:29"},"nodeType":"YulFunctionCall","src":"7555:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7548:6:29"},"nodeType":"YulFunctionCall","src":"7548:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7538:2:29"},"nodeType":"YulFunctionCall","src":"7538:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7531:6:29"},"nodeType":"YulFunctionCall","src":"7531:40:29"},"nodeType":"YulIf","src":"7528:60:29"},{"nodeType":"YulAssignment","src":"7597:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7607:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7597:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7385:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7396:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7408:6:29","type":""}],"src":"7341:277:29"},{"body":{"nodeType":"YulBlock","src":"7671:77:29","statements":[{"nodeType":"YulAssignment","src":"7681:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7692:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"7695:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7688:3:29"},"nodeType":"YulFunctionCall","src":"7688:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7681:3:29"}]},{"body":{"nodeType":"YulBlock","src":"7720:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7722:16:29"},"nodeType":"YulFunctionCall","src":"7722:18:29"},"nodeType":"YulExpressionStatement","src":"7722:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7712:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"7715:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7709:2:29"},"nodeType":"YulFunctionCall","src":"7709:10:29"},"nodeType":"YulIf","src":"7706:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7654:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"7657:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7663:3:29","type":""}],"src":"7623:125:29"},{"body":{"nodeType":"YulBlock","src":"7785:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7802:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7809:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7814:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7805:3:29"},"nodeType":"YulFunctionCall","src":"7805:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7795:6:29"},"nodeType":"YulFunctionCall","src":"7795:31:29"},"nodeType":"YulExpressionStatement","src":"7795:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7842:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7845:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7835:6:29"},"nodeType":"YulFunctionCall","src":"7835:15:29"},"nodeType":"YulExpressionStatement","src":"7835:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7866:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7869:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7859:6:29"},"nodeType":"YulFunctionCall","src":"7859:15:29"},"nodeType":"YulExpressionStatement","src":"7859:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7753:127:29"},{"body":{"nodeType":"YulBlock","src":"7934:79:29","statements":[{"nodeType":"YulAssignment","src":"7944:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7956:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"7959:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7952:3:29"},"nodeType":"YulFunctionCall","src":"7952:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7944:4:29"}]},{"body":{"nodeType":"YulBlock","src":"7985:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7987:16:29"},"nodeType":"YulFunctionCall","src":"7987:18:29"},"nodeType":"YulExpressionStatement","src":"7987:18:29"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7976:4:29"},{"name":"x","nodeType":"YulIdentifier","src":"7982:1:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7973:2:29"},"nodeType":"YulFunctionCall","src":"7973:11:29"},"nodeType":"YulIf","src":"7970:37:29"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7916:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"7919:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7925:4:29","type":""}],"src":"7885:128:29"},{"body":{"nodeType":"YulBlock","src":"8056:171:29","statements":[{"body":{"nodeType":"YulBlock","src":"8087:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8108:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8115:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8120:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8111:3:29"},"nodeType":"YulFunctionCall","src":"8111:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8101:6:29"},"nodeType":"YulFunctionCall","src":"8101:31:29"},"nodeType":"YulExpressionStatement","src":"8101:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8152:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8155:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8145:6:29"},"nodeType":"YulFunctionCall","src":"8145:15:29"},"nodeType":"YulExpressionStatement","src":"8145:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8180:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8183:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8173:6:29"},"nodeType":"YulFunctionCall","src":"8173:15:29"},"nodeType":"YulExpressionStatement","src":"8173:15:29"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8076:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8069:6:29"},"nodeType":"YulFunctionCall","src":"8069:9:29"},"nodeType":"YulIf","src":"8066:132:29"},{"nodeType":"YulAssignment","src":"8207:14:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8216:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"8219:1:29"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8212:3:29"},"nodeType":"YulFunctionCall","src":"8212:9:29"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8207:1:29"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8041:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"8044:1:29","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8050:1:29","type":""}],"src":"8018:209:29"},{"body":{"nodeType":"YulBlock","src":"8284:116:29","statements":[{"nodeType":"YulAssignment","src":"8294:20:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8309:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"8312:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8305:3:29"},"nodeType":"YulFunctionCall","src":"8305:9:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8294:7:29"}]},{"body":{"nodeType":"YulBlock","src":"8372:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8374:16:29"},"nodeType":"YulFunctionCall","src":"8374:18:29"},"nodeType":"YulExpressionStatement","src":"8374:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8343:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8336:6:29"},"nodeType":"YulFunctionCall","src":"8336:9:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8350:1:29"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"8357:7:29"},{"name":"x","nodeType":"YulIdentifier","src":"8366:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8353:3:29"},"nodeType":"YulFunctionCall","src":"8353:15:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8347:2:29"},"nodeType":"YulFunctionCall","src":"8347:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8333:2:29"},"nodeType":"YulFunctionCall","src":"8333:37:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8326:6:29"},"nodeType":"YulFunctionCall","src":"8326:45:29"},"nodeType":"YulIf","src":"8323:71:29"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8263:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"8266:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8272:7:29","type":""}],"src":"8232:168:29"}]},"contents":"{\n    { }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_InitRaffleParams_$4974_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 224)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_address(headStart))\n        mstore(add(memPtr, 32), abi_decode_address(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_address(add(headStart, 64)))\n        mstore(add(memPtr, 96), calldataload(add(headStart, 96)))\n        mstore(add(memPtr, 128), calldataload(add(headStart, 128)))\n        mstore(add(memPtr, 160), calldataload(add(headStart, 160)))\n        mstore(add(memPtr, 192), abi_decode_uint64(add(headStart, 192)))\n        value0 := memPtr\n    }\n    function abi_encode_uint64(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$2308_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1222__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function extract_from_storage_value_offsett_address(slot_value) -> value\n    {\n        value := and(slot_value, sub(shl(160, 1), 1))\n    }\n    function abi_encode_tuple_t_struct$_RaffleData_$4957_storage__to_t_struct$_RaffleData_$4957_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        abi_encode_address(extract_from_storage_value_offsett_address(sload(value0)), headStart)\n        let memberValue0 := extract_from_storage_value_offsett_address(sload(add(value0, 0x01)))\n        abi_encode_address(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := extract_from_storage_value_offsett_address(sload(add(value0, 0x02)))\n        abi_encode_address(memberValue0_1, add(headStart, 0x40))\n        mstore(add(headStart, 0x60), sload(add(value0, 0x03)))\n        mstore(add(headStart, 0x80), sload(add(value0, 0x04)))\n        mstore(add(headStart, 0xa0), sload(add(value0, 0x05)))\n        mstore(add(headStart, 0xc0), sload(add(value0, 0x06)))\n        mstore(add(headStart, 0xe0), sload(add(value0, 0x07)))\n        let slotValue := sload(add(value0, 0x08))\n        abi_encode_uint64(and(slotValue, 0xffffffffffffffff), add(headStart, 0x0100))\n        abi_encode_bool(and(shr(0x40, slotValue), 0xff), add(headStart, 0x0120))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA1277600 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA1277600 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xC26EEA54 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xCCF1125C EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xED7A4E0B EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x636ED74C EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x6A4A5B2D EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x237BE938 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x237BE938 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x32095A66 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x3B398FF8 EQ PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1209B1F6 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x274 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x13E JUMP JUMPDEST PUSH2 0x154 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x131 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x131 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D JUMP JUMPDEST PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x154 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH2 0x13E PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x154 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x13E JUMP JUMPDEST PUSH2 0x11D PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D2 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4E5B121 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP CALLER SWAP2 POP ADDRESS SWAP1 PUSH32 0x1FC6B0218ACEB86978FCFEE181F91A4A3F28D1EDDFF4E6DF0C3DC99C79ACE6D4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3DA JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3F4 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F4 JUMPI POP PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0xB DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP3 DUP2 ADD MLOAD DUP4 MLOAD PUSH1 0x60 DUP6 ADD MLOAD SWAP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP4 MLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x3 DUP1 SLOAD SWAP2 DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x4 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x5 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x6 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x8 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x561 SWAP1 TIMESTAMP PUSH2 0xE19 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH32 0x2DB21921E7BB87A5D99FC29841E4B9AD6D32F7E9F0F12471F615D5C611DCF4E2 SWAP1 PUSH2 0x5B5 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0xB DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CFF9427 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 ADDRESS SWAP1 PUSH32 0x2427926A2340A250197C73C9C1A12CA71EE0F1F53F8E08BADDA42770AFC6ECF6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x7F2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH4 0x377D0B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH4 0x98FCCB27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH2 0x86B PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST GT ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH4 0x84BFCB95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x909 DUP3 PUSH2 0xC6E JUMP JUMPDEST GT ISZERO PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119563E5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0x944 DUP6 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 SLOAD SWAP1 SWAP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x9E9 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA12 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA7E JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA33 JUMPI PUSH2 0xA33 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP4 DUP2 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE DUP6 DUP3 MSTORE SWAP2 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xA18 JUMP JUMPDEST POP PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 ADDRESS SWAP1 PUSH32 0x3298F998ADC3EC4BDCC9BB12F2A924F1D28C61596124855D7D6D4D09E231847A SWAP1 PUSH2 0xAB8 SWAP1 DUP6 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA7F733D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB8A PUSH1 0x1 NUMBER PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 BLOCKHASH SWAP2 POP PUSH2 0xB9B SWAP1 DUP3 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP2 PUSH32 0xBD2EF7D8E723142E22EED26D859400CDA0AC602EDACDDC8B13F96C921011A9AC SWAP2 PUSH2 0xBEB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2695BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x16DE2349 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xC7F SWAP1 DUP4 SWAP1 PUSH2 0xF6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xCBE DUP2 PUSH2 0xC9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0xD1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0xD28 DUP4 PUSH2 0xCB3 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xD36 PUSH1 0x20 DUP5 ADD PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD47 PUSH1 0x40 DUP5 ADD PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xD76 PUSH1 0xC0 DUP5 ADD PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDB8 DUP2 PUSH2 0xC9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF7 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDDB JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xE39 JUMPI PUSH2 0xE39 PUSH2 0xE03 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x140 DUP2 ADD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xE03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF65 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xE03 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP16 LOG1 DUP2 DUP3 BLOCKHASH STATICCALL DUP1 CALLCODE 0xF8 0xF7 0x2D 0xC0 0xCB 0xEE 0xE3 INVALID PUSH26 0x8D4F94DA487C070D59FB4B4A2F6764736F6C6343000811003300 ","sourceMap":"543:8150:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5721:91;5786:11;:19;-1:-1:-1;;;;;5786:19:26;5721:91;;;-1:-1:-1;;;;;287:32:29;;;269:51;;257:2;242:18;5721:91:26;;;;;;;;6161:99;6230:23;;6161:99;;;477:25:29;;;465:2;450:18;6161:99:26;331:177:29;4346:373:26;;;:::i;:::-;;5259:100;5328:24;;5259:100;;1994:619;;;;;;:::i;:::-;;:::i;6376:90::-;6440:19;;6376:90;;-1:-1:-1;;;;;6440:19:26;;;2323:50:29;;2311:2;2296:18;6376:90:26;2179:200:29;7646:100:26;7714:25;;-1:-1:-1;;;7714:25:26;;;;7646:100;;2645:14:29;;2638:22;2620:41;;2608:2;2593:18;7646:100:26;2480:187:29;7353:151:26;;7454:23;;7479:17;;-1:-1:-1;;;;;7454:23:26;;;;7353:151;;;;;-1:-1:-1;;;;;2880:32:29;;;2862:51;;2944:2;2929:18;;2922:34;;;;2835:18;7353:151:26;2672:290:29;8142:99:26;;;;;;:::i;:::-;8193:7;8218:16;;;;;;;;;;;-1:-1:-1;;;;;8218:16:26;;8142:99;4753:387;;;:::i;5935:108::-;6008:28;;-1:-1:-1;;;;;6008:28:26;5935:108;;7882:115;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2769:1140::-;;;;;;:::i;:::-;;:::i;6668:147::-;;;:::i;3943:369::-;;;:::i;5488:101::-;5555:27;;5488:101;;7018:161;;;:::i;4346:373::-;1561:19;;-1:-1:-1;;;;;1561:19:26;1543:15;:37;1540:75;;;1589:26;;-1:-1:-1;;;1589:26:26;;;;;;;;;;;1540:75;7714:25;;-1:-1:-1;;;7714:25:26;;;;1796:53:::1;;1824:25;;-1:-1:-1::0;;;1824:25:26::1;;;;;;;;;;;1796:53;4450:15:::2;:13;:15::i;:::-;-1:-1:-1::0;;;;;4436:29:26::2;:10;-1:-1:-1::0;;;;;4436:29:26::2;;4433:71;;4474:30;;-1:-1:-1::0;;;4474:30:26::2;;;;;;;;;;;4433:71;4514:23:::0;;;4581:17;;4514:85:::2;::::0;-1:-1:-1;;;4514:85:26;;4563:4:::2;4514:85:::0;;::::2;4504:34:29::0;;;;4570:10:26::2;4554:18:29::0;;;4547:43;4606:18;;;4599:34;-1:-1:-1;;;;;4514:23:26::2;::::0;:40:::2;::::0;4439:18:29;;4514:85:26::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4668:23:26;;4694:17;;4614:98:::2;::::0;477:25:29;;;-1:-1:-1;;;;;4668:23:26;;::::2;::::0;-1:-1:-1;4648:10:26::2;::::0;-1:-1:-1;4641:4:26::2;::::0;4614:98:::2;::::0;465:2:29;450:18;4614:98:26::2;;;;;;;4346:373::o:0;1994:619::-;3291:13:2;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:2;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:2;1702:19:10;:23;;;3376:55:2;;-1:-1:-1;3414:12:2;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:2;;4846:2:29;3314:190:2;;;4828:21:29;4885:2;4865:18;;;4858:30;4924:34;4904:18;;;4897:62;-1:-1:-1;;;4975:18:29;;;4968:44;5029:19;;3314:190:2;;;;;;;;3514:12;:16;;-1:-1:-1;;3514:16:2;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:2;;;;;3540:65;2092:17:26::1;::::0;;::::1;::::0;2123:13;;2153:11:::1;::::0;::::1;::::0;2092:73;;-1:-1:-1;;;2092:73:26;;-1:-1:-1;;;;;4522:15:29;;;2092:73:26::1;::::0;::::1;4504:34:29::0;2146:4:26::1;4554:18:29::0;;;4547:43;4606:18;;;4599:34;;;;2092:30:26::1;::::0;::::1;::::0;4439:18:29;;2092:73:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2198:13:26;;2176:11:::1;:35:::0;;-1:-1:-1;;;;;2176:35:26;;::::1;-1:-1:-1::0;;;;;;2176:35:26;;::::1;;::::0;;;2252:22:::1;::::0;::::1;::::0;2221:28;:53;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;2310:17:::1;::::0;::::1;::::0;2284:23;:43;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;;2357:11:26::1;::::0;::::1;::::0;2337:17;:31;2408:21:::1;::::0;::::1;::::0;2378:27;:51;2465:17:::1;::::0;::::1;::::0;2439:23;:43;2540:13:::1;::::0;::::1;::::0;2514:39:::1;::::0;2521:15:::1;2514:39;:::i;:::-;2492:19:::0;:61;;-1:-1:-1;;2492:61:26::1;-1:-1:-1::0;;;;;2492:61:26;;;::::1;::::0;;;::::1;::::0;;2569:37:::1;::::0;2587:4:::1;::::0;2569:37:::1;::::0;::::1;::::0;2492:11:::1;::::0;2569:37:::1;:::i;:::-;;;;;;;;3629:14:2::0;3625:99;;;3659:13;:21;;-1:-1:-1;;3659:21:2;;;3699:14;;-1:-1:-1;6826:36:29;;3699:14:2;;6814:2:29;6799:18;3699:14:2;;;;;;;3625:99;3258:472;1994:619:26;:::o;4753:387::-;1561:19;;-1:-1:-1;;;;;1561:19:26;1543:15;:37;1540:75;;;1589:26;;-1:-1:-1;;;1589:26:26;;;;;;;;;;;1540:75;7714:25;;-1:-1:-1;;;7714:25:26;;;;1796:53:::1;;1824:25;;-1:-1:-1::0;;;1824:25:26::1;;;;;;;;;;;1796:53;5786:11:::0;:19;-1:-1:-1;;;;;5786:19:26;4855:10:::2;:23;4852:55;;4887:20;;-1:-1:-1::0;;;4887:20:26::2;;;;;;;;;;;4852:55;4934:28:::0;;:53:::2;::::0;-1:-1:-1;;;4934:53:26;;4981:4:::2;4934:53;::::0;::::2;269:51:29::0;4917:14:26::2;::::0;-1:-1:-1;;;;;4934:28:26::2;::::0;:38:::2;::::0;242:18:29;;4934:53:26::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4997:28:::0;;:57:::2;::::0;-1:-1:-1;;;4997:57:26;;5035:10:::2;4997:57;::::0;::::2;2862:51:29::0;2929:18;;;2922:34;;;4917:70:26;;-1:-1:-1;;;;;;4997:28:26::2;::::0;:37:::2;::::0;2835:18:29;;4997:57:26::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5069:64:26::2;::::0;477:25:29;;;5114:10:26::2;::::0;5107:4:::2;::::0;5069:64:::2;::::0;465:2:29;450:18;5069:64:26::2;;;;;;;4842:298;4753:387::o:0;7882:115::-;-1:-1:-1;;;;;7971:19:26;;;;;;:13;:19;;;;;;;;;7964:26;;;;;;;;;;;;;;;;;7937:16;;7964:26;;;7971:19;7964:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7882:115;;;:::o;2769:1140::-;1430:19;;-1:-1:-1;;;;;1430:19:26;1411:15;:38;1408:71;;1458:21;;-1:-1:-1;;;1458:21:26;;;;;;;;;;;1408:71;2863:11:::1;2878:1;2863:16:::0;2860:49:::1;;2888:21;;-1:-1:-1::0;;;2888:21:26::1;;;;;;;;;;;2860:49;2952:27:::0;;2938:11;2922:13:::1;5328:24:::0;;;5259:100;2922:13:::1;:27;;;;:::i;:::-;:57;2919:104;;;2988:35;;-1:-1:-1::0;;;2988:35:26::1;;;;;;;;;;;2919:104;3079:28:::0;;:50:::1;::::0;-1:-1:-1;;;3079:50:26;;3118:10:::1;3079:50;::::0;::::1;269:51:29::0;-1:-1:-1;;;;;3079:28:26;;::::1;::::0;:38:::1;::::0;242:18:29;;3079:50:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3036:40;3064:11;3036:27;:40::i;:::-;:93;3033:132;;;3138:27;;-1:-1:-1::0;;;3138:27:26::1;;;;;;;;;;;3033:132;3184:28:::0;;-1:-1:-1;;;;;3184:28:26::1;:41;3226:10;3246:4;3253:40;3281:11:::0;3253:27:::1;:40::i;:::-;3184:110;::::0;-1:-1:-1;;;;;;3184:110:26::1;::::0;;;;;;-1:-1:-1;;;;;4522:15:29;;;3184:110:26::1;::::0;::::1;4504:34:29::0;4574:15;;;;4554:18;;;4547:43;4606:18;;;4599:34;4439:18;;3184:110:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3352:10:26::1;3305:30;3338:25:::0;;;:13:::1;:25;::::0;;;;3396:24;;3338:25;;3481:11;-1:-1:-1;;;;;3467:26:26;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3467:26:26::1;;3431:62;;3507:6;3503:276;3517:11;3515:1;:13;3503:276;;;3567:12;3545:16;3562:1;3545:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;:34;;;;3593:31;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3593:31:26;;;;;;;;::::1;::::0;;;3638:26;;;;;;;;;;:39;;-1:-1:-1;;;;;;3638:39:26::1;3667:10;3638:39;::::0;;3719:14;;::::1;::::0;3751:3:::1;3503:276;;;-1:-1:-1::0;3788:24:26;:39;;;3842:60:::1;::::0;3873:10:::1;::::0;3866:4:::1;::::0;3842:60:::1;::::0;::::1;::::0;3885:16;;3842:60:::1;:::i;:::-;;;;;;;;2850:1059;;;2769:1140:::0;:::o;6668:147::-;1561:19;;6751:7;;-1:-1:-1;;;;;1561:19:26;1543:15;:37;1540:75;;;1589:26;;-1:-1:-1;;;1589:26:26;;;;;;;;;;;1540:75;7714:25;;-1:-1:-1;;;7714:25:26;;;;1796:53:::1;;1824:25;;-1:-1:-1::0;;;1824:25:26::1;;;;;;;;;;;1796:53;-1:-1:-1::0;6777:31:26;;6668:147;:::o;3943:369::-;1561:19;;-1:-1:-1;;;;;1561:19:26;1543:15;:37;1540:75;;;1589:26;;-1:-1:-1;;;1589:26:26;;;;;;;;;;;1540:75;7714:25;;-1:-1:-1;;;7714:25:26;;;;1679:56:::1;;;1706:29;;-1:-1:-1::0;;;1706:29:26::1;;;;;;;;;;;1679:56;4035:20:::2;4076:16;4091:1;4076:12;:16;:::i;:::-;4154:24:::0;;4066:27;::::2;::::0;-1:-1:-1;4139:39:26::2;::::0;4066:27;4139:39:::2;:::i;:::-;4104:31:::0;:75;;;4189:25;:32;;-1:-1:-1;;4189:32:26::2;-1:-1:-1::0;;;4189:32:26::2;::::0;;4236:69:::2;::::0;4265:4:::2;::::0;4236:69:::2;::::0;::::2;::::0;477:25:29;;465:2;450:18;;331:177;4236:69:26::2;;;;;;;;4025:287;3943:369::o:0;7018:161::-;1561:19;;7101:7;;-1:-1:-1;;;;;1561:19:26;1543:15;:37;1540:75;;;1589:26;;-1:-1:-1;;;1589:26:26;;;;;;;;;;;1540:75;7714:25;;-1:-1:-1;;;7714:25:26;;;;1796:53:::1;;1824:25;;-1:-1:-1::0;;;1824:25:26::1;;;;;;;;;;;1796:53;-1:-1:-1::0;7140:31:26;;7127:12:::2;:45:::0;;;::::2;::::0;;;;;;;-1:-1:-1;;;;;7127:45:26::2;7018:161:::0;:::o;8522:169::-;8647:23;;8602:19;;8647:37;;8673:11;;8647:37;:::i;:::-;8633:51;8522:169;-1:-1:-1;;8522:169:26:o;513:127:29:-;574:10;569:3;565:20;562:1;555:31;605:4;602:1;595:15;629:4;626:1;619:15;645:131;-1:-1:-1;;;;;720:31:29;;710:42;;700:70;;766:1;763;756:12;700:70;645:131;:::o;781:134::-;849:20;;878:31;849:20;878:31;:::i;:::-;781:134;;;:::o;920:171::-;987:20;;-1:-1:-1;;;;;1036:30:29;;1026:41;;1016:69;;1081:1;1078;1071:12;1096:971;1189:6;1242:3;1230:9;1221:7;1217:23;1213:33;1210:53;;;1259:1;1256;1249:12;1210:53;1292:2;1286:9;1334:3;1326:6;1322:16;1404:6;1392:10;1389:22;-1:-1:-1;;;;;1356:10:29;1353:34;1350:62;1347:185;;;1454:10;1449:3;1445:20;1442:1;1435:31;1489:4;1486:1;1479:15;1517:4;1514:1;1507:15;1347:185;1548:2;1541:22;1587:29;1606:9;1587:29;:::i;:::-;1579:6;1572:45;1650:38;1684:2;1673:9;1669:18;1650:38;:::i;:::-;1645:2;1637:6;1633:15;1626:63;1722:38;1756:2;1745:9;1741:18;1722:38;:::i;:::-;1717:2;1709:6;1705:15;1698:63;1822:2;1811:9;1807:18;1794:32;1789:2;1781:6;1777:15;1770:57;1889:3;1878:9;1874:19;1861:33;1855:3;1847:6;1843:16;1836:59;1957:3;1946:9;1942:19;1929:33;1923:3;1915:6;1911:16;1904:59;1997:38;2030:3;2019:9;2015:19;1997:38;:::i;:::-;1991:3;1979:16;;1972:64;1983:6;1096:971;-1:-1:-1;;;1096:971:29:o;2967:180::-;3026:6;3079:2;3067:9;3058:7;3054:23;3050:32;3047:52;;;3095:1;3092;3085:12;3047:52;-1:-1:-1;3118:23:29;;2967:180;-1:-1:-1;2967:180:29:o;3375:247::-;3434:6;3487:2;3475:9;3466:7;3462:23;3458:32;3455:52;;;3503:1;3500;3493:12;3455:52;3542:9;3529:23;3561:31;3586:5;3561:31;:::i;:::-;3611:5;3375:247;-1:-1:-1;;;3375:247:29:o;3627:632::-;3798:2;3850:21;;;3920:13;;3823:18;;;3942:22;;;3769:4;;3798:2;4021:15;;;;3995:2;3980:18;;;3769:4;4064:169;4078:6;4075:1;4072:13;4064:169;;;4139:13;;4127:26;;4208:15;;;;4173:12;;;;4100:1;4093:9;4064:169;;;-1:-1:-1;4250:3:29;;3627:632;-1:-1:-1;;;;;;3627:632:29:o;5059:127::-;5120:10;5115:3;5111:20;5108:1;5101:31;5151:4;5148:1;5141:15;5175:4;5172:1;5165:15;5191:180;-1:-1:-1;;;;;5296:10:29;;;5308;;;5292:27;;5331:11;;;5328:37;;;5345:18;;:::i;:::-;5328:37;5191:180;;;;:::o;5519:1150::-;5781:13;;-1:-1:-1;;;;;5472:36:29;68:44;;5706:3;5691:19;;5897:4;5885:17;;5879:24;-1:-1:-1;;;;;5472:36:29;;;5961:4;5946:20;;68:44;6059:4;6047:17;;6041:24;5472:36;6125:4;6110:20;;;68:44;;;;6187:4;6175:17;;6169:24;6162:4;6147:20;;6140:54;6250:4;6238:17;;6232:24;6225:4;6210:20;;6203:54;6313:4;6301:17;;6295:24;6288:4;6273:20;;6266:54;6376:4;6364:17;;6358:24;6351:4;6336:20;;6329:54;6439:4;6427:17;;6421:24;6414:4;6399:20;;6392:54;6490:4;6478:17;;6472:24;-1:-1:-1;;;;;6523:34:29;;6574:6;6559:22;;2125:43;6611:20;;;;6633:4;6607:31;2454:13;2447:21;6655:6;6640:22;;2435:34;6591:72;2384:91;6873:184;6943:6;6996:2;6984:9;6975:7;6971:23;6967:32;6964:52;;;7012:1;7009;7002:12;6964:52;-1:-1:-1;7035:16:29;;6873:184;-1:-1:-1;6873:184:29:o;7341:277::-;7408:6;7461:2;7449:9;7440:7;7436:23;7432:32;7429:52;;;7477:1;7474;7467:12;7429:52;7509:9;7503:16;7562:5;7555:13;7548:21;7541:5;7538:32;7528:60;;7584:1;7581;7574:12;7623:125;7688:9;;;7709:10;;;7706:36;;;7722:18;;:::i;7753:127::-;7814:10;7809:3;7805:20;7802:1;7795:31;7845:4;7842:1;7835:15;7869:4;7866:1;7859:15;7885:128;7952:9;;;7973:11;;;7970:37;;;7987:18;;:::i;8018:209::-;8050:1;8076;8066:132;;8120:10;8115:3;8111:20;8108:1;8101:31;8155:4;8152:1;8145:15;8183:4;8180:1;8173:15;8066:132;-1:-1:-1;8212:9:29;;8018:209::o;8232:168::-;8305:9;;;8336;;8353:15;;;8347:22;;8333:37;8323:71;;8374:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"804600","executionCost":"838","totalCost":"805438"},"external":{"balanceOf(address)":"infinite","claimPrice()":"infinite","claimTicketSalesAmount()":"infinite","creator()":"2333","drawnTicket()":"54557","endTime()":"2346","initialize((address,address,address,uint256,uint256,uint256,uint64))":"infinite","isTicketDrawn()":"2376","maxSupply()":"2380","nftToWin()":"4556","ownerOf(uint256)":"2492","purchaseCurrency()":"2387","purchaseTickets(uint256)":"infinite","ticketPrice()":"2327","totalSupply()":"2382","winnerAddress()":"8908","winningTicket()":"6642"},"internal":{"_calculateTotalTicketsPrice(uint256)":"infinite"}},"methodIdentifiers":{"balanceOf(address)":"70a08231","claimPrice()":"15d655c9","claimTicketSalesAmount()":"636ed74c","creator()":"02d05d3f","drawnTicket()":"ccf1125c","endTime()":"3197cbb6","initialize((address,address,address,uint256,uint256,uint256,uint64))":"237be938","isTicketDrawn()":"32095a66","maxSupply()":"d5abeb01","nftToWin()":"3b398ff8","ownerOf(uint256)":"6352211e","purchaseCurrency()":"6a4a5b2d","purchaseTickets(uint256)":"a1277600","ticketPrice()":"1209b1f6","totalSupply()":"18160ddd","winnerAddress()":"ed7a4e0b","winningTicket()":"c26eea54"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CANT_BE_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MAX_TICKET_SUPPLY_EXCEEDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MSG_SENDER_NOT_WINNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_CREATOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RAFFLE_CLOSE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RAFFLE_STILL_OPEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TICKET_ALREADY_DRAWN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TICKET_NOT_DRAWN\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"raffleContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"CreatorClaimTicketSalesAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"raffleContract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"purchaseCurrency\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isTicketDrawn\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct RaffleDataTypes.RaffleData\",\"name\":\"globalData\",\"type\":\"tuple\"}],\"name\":\"NewRaffle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"raffleContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ticketNumbers\",\"type\":\"uint256[]\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"raffleContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"WinnerClaimedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"raffleContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningTicket\",\"type\":\"uint256\"}],\"name\":\"WinningTicketDrawned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTicketSalesAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawnTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"purchaseCurrency\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"}],\"internalType\":\"struct RaffleDataTypes.InitRaffleParams\",\"name\":\"_data\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTicketDrawn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftToWin\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTickets\",\"type\":\"uint256\"}],\"name\":\"purchaseTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningTicket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"returns\":{\"_0\":\"True if ticket has been drawn, False otherwise\"}},\"claimPrice()\":{\"details\":\"Ticket number must be draw and raffle close to new participants\"},\"claimTicketSalesAmount()\":{\"details\":\"The functions should send to the creator his part after fees\"},\"creator()\":{\"returns\":{\"_0\":\"The address of the creator\"}},\"endTime()\":{\"returns\":{\"_0\":\"The time in timestamps\"}},\"isTicketDrawn()\":{\"returns\":{\"_0\":\"True if ticket has been drawn, False otherwise\"}},\"maxSupply()\":{\"returns\":{\"_0\":\"The total amount of tickets sold\"}},\"nftToWin()\":{\"returns\":{\"nftContractAddress\":\"The address of the nft\",\"nftId\":\"The id of the nft\"}},\"ownerOf(uint256)\":{\"returns\":{\"_0\":\"The address that bought the own the ticket\"}},\"purchaseCurrency()\":{\"returns\":{\"_0\":\"The address of the ERC20\"}},\"purchaseTickets(uint256)\":{\"details\":\"Only accessible if raffle still open to particpants\",\"params\":{\"nbOfTickets\":\"number of tickets purchased\"}},\"ticketPrice()\":{\"returns\":{\"_0\":\"The amount of token that one ticket cost\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The total amount of tickets sold\"}},\"winnerAddress()\":{\"details\":\"revert if ticket sales not close and if ticket number hasn't be drawn\",\"returns\":{\"_0\":\"The address of the wallet that won the raffle\"}},\"winningTicket()\":{\"details\":\"revert if ticket sales not close and if ticket number hasn't be drawn\",\"returns\":{\"_0\":\"The ticket number that win the raffle\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"get all tickets number bought by a user\"},\"claimPrice()\":{\"notice\":\"Allows the winner to claim his price\"},\"claimTicketSalesAmount()\":{\"notice\":\"Allows the creator to claim the amount related to the ticket sales\"},\"creator()\":{\"notice\":\"get the address of the wallet that initiated the raffle\"},\"drawnTicket()\":{\"notice\":\"Allows to drawn a ticket randommly\"},\"endTime()\":{\"notice\":\"get the end time before ticket sales closing\"},\"isTicketDrawn()\":{\"notice\":\"get info if the winning ticket has been drawn\"},\"maxSupply()\":{\"notice\":\"get the max amount of tickets that can be sold\"},\"nftToWin()\":{\"notice\":\"get the information regarding the nft to win\"},\"ownerOf(uint256)\":{\"notice\":\"get the wallet that bought a specific ticket number\"},\"purchaseCurrency()\":{\"notice\":\"get the address of the token used to buy tickets\"},\"purchaseTickets(uint256)\":{\"notice\":\"Allows users to purchase tickets\"},\"ticketPrice()\":{\"notice\":\"get the price of one ticket\"},\"totalSupply()\":{\"notice\":\"get the total amount of tickets sold\"},\"winnerAddress()\":{\"notice\":\"get the winner address\"},\"winningTicket()\":{\"notice\":\"get the winning ticket number\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/raffle/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xef38a9dc04006cb780740ff85651f9bac7e522f42640527b6b1deda46e3155c7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/interfaces/IRaffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IRaffle {\\n\\n    /**\\n     * @notice Allows users to purchase tickets\\n     * @dev Only accessible if raffle still open to particpants\\n     * @param nbOfTickets number of tickets purchased\\n     */\\n    function purchaseTickets(uint256 nbOfTickets) external;\\n\\n    /**\\n     * @notice Allows the winner to claim his price\\n     * @dev Ticket number must be draw and raffle close to new participants\\n     */\\n    function claimPrice() external;\\n    \\n    /**\\n     * @notice Allows the creator to claim the amount related to the ticket sales\\n     * @dev The functions should send to the creator his part after fees\\n     */\\n    function claimTicketSalesAmount() external;\\n    \\n    /**\\n     * @notice Allows to drawn a ticket randommly\\n     */\\n    function drawnTicket() external;\\n}\",\"keccak256\":\"0xbc7dcc7df434d185b76c666609157e15f0f9c237925a70cce85f8715a4ee2376\",\"license\":\"MIT\"},\"src/libraries/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Errors library\\n * @notice Defines the error messages emitted by the different contracts of the protocol\\n */\\nlibrary Errors {\\n    error BE_ADDRESS_0(); // 'Address must be address(0)'\\n    error NOT_ADDRESS_0(); // 'Address must not be address(0)'\\n    error RAFFLE_CLOSE(); // 'Current timestamps greater or equal than the close time'\\n    error RAFFLE_STILL_OPEN(); // 'Current timestamps lesser or equal than the close time'\\n    error CANT_BE_ZERO(); // 'Value can't must be higher than 0'\\n    error MAX_TICKET_SUPPLY_EXCEEDED(); // 'Maximum amount of ticket sold for the raffle has been reached'\\n    error NOT_ENOUGH_BALANCE(); // 'Balance lower than required'\\n    error MSG_SENDER_NOT_WINNER(); // 'msg.sender is not winner address'\\n    error NOT_CREATOR(); // 'msg.sender is not the creator of the raffle'\\n    error TICKET_NOT_DRAWN(); // 'ticket must be drawn'\\n    error TICKET_ALREADY_DRAWN(); // 'ticket has already be drawn'\\n    error NOT_MAINTAINER(); // 'Caller is not the maintainer'\\n    error IMPLEMENTATION_NOT_FOUND(); // 'Implementation interfaces is not registered'\\n}\\n\\n \",\"keccak256\":\"0x6cc7ca88848c2452afbf0b57160efdf8289cad985bcf369efe599c2bcc3cadd3\",\"license\":\"MIT\"},\"src/raffle/Raffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {Initializable} from \\\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\\\";\\nimport {IERC20} from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC721} from \\\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\\\";\\n\\nimport {Errors} from \\\"../libraries/helpers/Errors.sol\\\";\\nimport {IRaffle} from \\\"../interfaces/IRaffle.sol\\\";\\n\\nimport {RaffleDataTypes} from \\\"./RaffleDataTypes.sol\\\";\\nimport {RaffleStorage} from \\\"./RaffleStorage.sol\\\";\\n \\ncontract Raffle is IRaffle, RaffleStorage, Initializable {\\n\\n    //----------------------------------------\\n    // Events\\n    //----------------------------------------\\n\\n    event NewRaffle(address indexed raffleContract, RaffleDataTypes.RaffleData globalData);\\n    event TicketPurchased(address indexed raffleContract, address indexed buyer, uint256[] ticketNumbers);\\n    event WinnerClaimedPrice(address indexed raffleContract, address indexed winner, address indexed nftContract, uint256 nftId);\\n    event CreatorClaimTicketSalesAmount(address indexed raffleContract, address indexed winner, uint256 amountReceived);\\n    event WinningTicketDrawned(address indexed raffleContract, uint256 winningTicket);\\n      \\n    //----------------------------------------\\n    // Modifier\\n    //----------------------------------------\\n\\n    modifier ticketSalesOpen() {\\n        if(block.timestamp >= _globalData.endTime) revert Errors.RAFFLE_CLOSE();\\n        _;\\n    }\\n    modifier ticketSalesClose() {\\n        if(block.timestamp < _globalData.endTime) revert Errors.RAFFLE_STILL_OPEN();\\n        _;\\n    }\\n\\n    modifier ticketHasNotBeDrawn(){\\n        if(isTicketDrawn()) revert Errors.TICKET_ALREADY_DRAWN();\\n        _;\\n    }\\n\\n    modifier ticketHasBeDrawn(){\\n        if(!isTicketDrawn()) revert Errors.TICKET_NOT_DRAWN();\\n        _;\\n    }\\n\\n    //----------------------------------------\\n    // Initialize function\\n    //----------------------------------------\\n    function initialize(RaffleDataTypes.InitRaffleParams memory _data) external initializer {\\n        _data.nftContract.transferFrom(_data.creator, address(this), _data.nftId);\\n\\n        _globalData.creator = _data.creator;\\n        _globalData.purchaseCurrency = _data.purchaseCurrency;\\n        _globalData.nftContract = _data.nftContract;\\n        _globalData.nftId = _data.nftId;\\n        _globalData.maxTicketSupply = _data.maxTicketSupply;\\n        _globalData.ticketPrice = _data.ticketPrice;\\n        _globalData.endTime = uint64(block.timestamp) + _data.endTime;\\n\\n        emit NewRaffle(address(this), _globalData);\\n    }\\n\\n    //----------------------------------------\\n    // Externals Functions\\n    //----------------------------------------\\n\\n    /// @inheritdoc IRaffle\\n    function purchaseTickets(uint256 nbOfTickets) external override ticketSalesOpen(){\\n        if(nbOfTickets == 0) revert Errors.CANT_BE_ZERO();\\n        if(totalSupply() + nbOfTickets > _globalData.maxTicketSupply) revert Errors.MAX_TICKET_SUPPLY_EXCEEDED();\\n        if(_calculateTotalTicketsPrice(nbOfTickets) > _globalData.purchaseCurrency.balanceOf(msg.sender)) revert Errors.NOT_ENOUGH_BALANCE();\\n        \\n        _globalData.purchaseCurrency.transferFrom(msg.sender, address(this), _calculateTotalTicketsPrice(nbOfTickets));\\n\\n        uint256[] storage ownerTickets = _ownerTickets[msg.sender];\\n        uint256 ticketNumber = _globalData.ticketSupply;\\n\\n        uint256[] memory ticketsPurchased = new uint256[](nbOfTickets);\\n        for(uint i; i<nbOfTickets; ){\\n            ticketsPurchased[i] = ticketNumber;\\n            ownerTickets.push(ticketNumber);\\n            _ticketOwner[ticketNumber] = msg.sender;\\n            unchecked {\\n                ++ticketNumber;\\n                ++i;\\n            }\\n        }\\n        _globalData.ticketSupply = ticketNumber;\\n        emit TicketPurchased(address(this), msg.sender, ticketsPurchased);\\n    }\\n\\n    /// @inheritdoc IRaffle\\n    function drawnTicket() external override ticketSalesClose() ticketHasNotBeDrawn() {\\n        uint256 randomNumber = uint256(blockhash(block.number - 1));\\n        _globalData.winningTicketNumber = (randomNumber % _globalData.ticketSupply);\\n        _globalData.isTicketDrawn = true;\\n        emit WinningTicketDrawned(address(this), _globalData.winningTicketNumber );\\n    }\\n\\n    /// @inheritdoc IRaffle\\n    function claimPrice() external override ticketSalesClose() ticketHasBeDrawn(){\\n        if(msg.sender != winnerAddress()) revert Errors.MSG_SENDER_NOT_WINNER();\\n        _globalData.nftContract.safeTransferFrom(address(this), msg.sender,_globalData.nftId);\\n        emit WinnerClaimedPrice(address(this), msg.sender, address(_globalData.nftContract), _globalData.nftId);\\n    }\\n\\n    /// @inheritdoc IRaffle\\n    function claimTicketSalesAmount() external override ticketSalesClose() ticketHasBeDrawn(){\\n        if(msg.sender != creator()) revert Errors.NOT_CREATOR();\\n        uint256 amount = _globalData.purchaseCurrency.balanceOf(address(this));\\n        _globalData.purchaseCurrency.transfer(msg.sender, amount);\\n        emit CreatorClaimTicketSalesAmount(address(this), msg.sender, amount);\\n    }\\n\\n    /**\\n    * @notice get the total amount of tickets sold\\n    * @return The total amount of tickets sold\\n    */\\n    function totalSupply() public view returns(uint256) {\\n        return _globalData.ticketSupply;\\n    }\\n\\n    /**\\n    * @notice get the max amount of tickets that can be sold\\n    * @return The total amount of tickets sold\\n    */\\n    function maxSupply() public view returns(uint256) {\\n        return _globalData.maxTicketSupply;\\n    }\\n\\n    /**\\n    * @notice get the address of the wallet that initiated the raffle\\n    * @return The address of the creator\\n    */\\n    function creator() public view returns(address) {\\n        return _globalData.creator;\\n    }\\n\\n    /**\\n    * @notice get the address of the token used to buy tickets\\n    * @return The address of the ERC20\\n    */\\n    function purchaseCurrency() public view returns(IERC20) {\\n        return _globalData.purchaseCurrency;\\n    }\\n\\n    /**\\n    * @notice get the price of one ticket\\n    * @return The amount of token that one ticket cost\\n    */\\n    function ticketPrice() public view returns(uint256) {\\n        return _globalData.ticketPrice;\\n    }\\n\\n   /**\\n    * @notice get the end time before ticket sales closing\\n    * @return The time in timestamps\\n    */\\n    function endTime() public view returns(uint64) {\\n        return _globalData.endTime;\\n    }\\n    \\n    /**\\n    * @notice get the winning ticket number\\n    * @dev revert if ticket sales not close and if ticket number hasn't be drawn\\n    * @return The ticket number that win the raffle\\n    */\\n    function winningTicket() public ticketSalesClose() ticketHasBeDrawn() view returns(uint256) {\\n        return _globalData.winningTicketNumber;\\n    }\\n    \\n    /**\\n    * @notice get the winner address\\n    * @dev revert if ticket sales not close and if ticket number hasn't be drawn\\n    * @return The address of the wallet that won the raffle\\n    */\\n    function winnerAddress() public ticketSalesClose() ticketHasBeDrawn() view returns(address) {\\n        return _ticketOwner[_globalData.winningTicketNumber];\\n    }\\n\\n    /**\\n    * @notice get the information regarding the nft to win\\n    * @return nftContractAddress The address of the nft\\n    * @return nftId The id of the nft\\n    */\\n    function nftToWin() public view returns(IERC721 nftContractAddress, uint256 nftId) {\\n        return (_globalData.nftContract, _globalData.nftId);\\n    }\\n\\n    /**\\n    * @notice get info if the winning ticket has been drawn\\n    * @return True if ticket has been drawn, False otherwise\\n    */\\n    function isTicketDrawn() public view returns(bool) {\\n        return _globalData.isTicketDrawn;\\n    }\\n\\n    /**\\n    * @notice get all tickets number bought by a user\\n    * @return True if ticket has been drawn, False otherwise\\n    */\\n    function balanceOf(address user) external view returns(uint256[] memory){\\n        return _ownerTickets[user];\\n    }\\n\\n     /**\\n    * @notice get the wallet that bought a specific ticket number\\n    * @return The address that bought the own the ticket\\n    */\\n    function ownerOf(uint256 id) external view returns(address){\\n        return _ticketOwner[id];\\n    }\\n\\n    //----------------------------------------\\n    // Internals Functions\\n    //----------------------------------------\\n\\n    /**\\n    * @notice calculate the total price that must be paid regarding the amount of tickets to buy\\n    * @return amountPrice the total cost\\n    */\\n    function _calculateTotalTicketsPrice(uint256 nbOfTickets) internal view returns(uint256 amountPrice) {\\n        amountPrice = _globalData.ticketPrice * nbOfTickets;\\n    }\\n}\",\"keccak256\":\"0xf1e86ab77c300d3edd9c4ff150abc8c9e1f1f8100215b637b4fb27c784dee67a\",\"license\":\"MIT\"},\"src/raffle/RaffleDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {IERC20} from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC721} from \\\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\\\";\\n\\nlibrary RaffleDataTypes {\\n\\n    struct RaffleData {\\n        address creator;\\n        IERC20 purchaseCurrency;\\n        IERC721 nftContract;\\n        uint256 nftId;\\n        uint256 maxTicketSupply;\\n        uint256 ticketSupply;\\n        uint256 ticketPrice;\\n        uint256 winningTicketNumber;\\n        uint64 endTime;\\n        bool isTicketDrawn;\\n    }\\n\\n    struct InitRaffleParams {\\n        address creator;\\n        IERC20 purchaseCurrency;\\n        IERC721 nftContract;\\n        uint256 nftId;\\n        uint256 maxTicketSupply;\\n        uint256 ticketPrice;\\n        uint64 endTime;\\n    }\\n}\",\"keccak256\":\"0x16200965dde454d507cb6b99b376fbee27d6232b7f255268f1422b4438b006dd\",\"license\":\"MIT\"},\"src/raffle/RaffleStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {RaffleDataTypes} from './RaffleDataTypes.sol';\\n\\n/**\\n * @title RaffleStorage\\n * @notice Contract used as storage of the Raffle contract.\\n * @dev It defines the storage layout of the Raffle contract.\\n */\\ncontract RaffleStorage {\\n\\n    // Mapping from ticket ID to owner address\\n    mapping(uint256 => address) internal _ticketOwner;\\n\\n    // Mapping owner address to tickets list\\n    mapping(address => uint256[]) internal _ownerTickets;\\n\\n    RaffleDataTypes.RaffleData internal _globalData;\\n\\n}\",\"keccak256\":\"0x665df428937ca947fa2194ca63f03f337351927f605c9e467b2973f65f5617be\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4984,"contract":"src/raffle/Raffle.sol:Raffle","label":"_ticketOwner","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_address)"},{"astId":4989,"contract":"src/raffle/Raffle.sol:Raffle","label":"_ownerTickets","offset":0,"slot":"1","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":4992,"contract":"src/raffle/Raffle.sol:Raffle","label":"_globalData","offset":0,"slot":"2","type":"t_struct(RaffleData)4957_storage"},{"astId":395,"contract":"src/raffle/Raffle.sol:Raffle","label":"_initialized","offset":0,"slot":"11","type":"t_uint8"},{"astId":398,"contract":"src/raffle/Raffle.sol:Raffle","label":"_initializing","offset":1,"slot":"11","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)1222":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IERC721)2308":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_struct(RaffleData)4957_storage":{"encoding":"inplace","label":"struct RaffleDataTypes.RaffleData","members":[{"astId":4936,"contract":"src/raffle/Raffle.sol:Raffle","label":"creator","offset":0,"slot":"0","type":"t_address"},{"astId":4939,"contract":"src/raffle/Raffle.sol:Raffle","label":"purchaseCurrency","offset":0,"slot":"1","type":"t_contract(IERC20)1222"},{"astId":4942,"contract":"src/raffle/Raffle.sol:Raffle","label":"nftContract","offset":0,"slot":"2","type":"t_contract(IERC721)2308"},{"astId":4944,"contract":"src/raffle/Raffle.sol:Raffle","label":"nftId","offset":0,"slot":"3","type":"t_uint256"},{"astId":4946,"contract":"src/raffle/Raffle.sol:Raffle","label":"maxTicketSupply","offset":0,"slot":"4","type":"t_uint256"},{"astId":4948,"contract":"src/raffle/Raffle.sol:Raffle","label":"ticketSupply","offset":0,"slot":"5","type":"t_uint256"},{"astId":4950,"contract":"src/raffle/Raffle.sol:Raffle","label":"ticketPrice","offset":0,"slot":"6","type":"t_uint256"},{"astId":4952,"contract":"src/raffle/Raffle.sol:Raffle","label":"winningTicketNumber","offset":0,"slot":"7","type":"t_uint256"},{"astId":4954,"contract":"src/raffle/Raffle.sol:Raffle","label":"endTime","offset":0,"slot":"8","type":"t_uint64"},{"astId":4956,"contract":"src/raffle/Raffle.sol:Raffle","label":"isTicketDrawn","offset":8,"slot":"8","type":"t_bool"}],"numberOfBytes":"288"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"balanceOf(address)":{"notice":"get all tickets number bought by a user"},"claimPrice()":{"notice":"Allows the winner to claim his price"},"claimTicketSalesAmount()":{"notice":"Allows the creator to claim the amount related to the ticket sales"},"creator()":{"notice":"get the address of the wallet that initiated the raffle"},"drawnTicket()":{"notice":"Allows to drawn a ticket randommly"},"endTime()":{"notice":"get the end time before ticket sales closing"},"isTicketDrawn()":{"notice":"get info if the winning ticket has been drawn"},"maxSupply()":{"notice":"get the max amount of tickets that can be sold"},"nftToWin()":{"notice":"get the information regarding the nft to win"},"ownerOf(uint256)":{"notice":"get the wallet that bought a specific ticket number"},"purchaseCurrency()":{"notice":"get the address of the token used to buy tickets"},"purchaseTickets(uint256)":{"notice":"Allows users to purchase tickets"},"ticketPrice()":{"notice":"get the price of one ticket"},"totalSupply()":{"notice":"get the total amount of tickets sold"},"winnerAddress()":{"notice":"get the winner address"},"winningTicket()":{"notice":"get the winning ticket number"}},"version":1}}},"src/raffle/RaffleDataTypes.sol":{"RaffleDataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204777ccbb8e9e8b096ae0ecc19204988a8dd46177c40ac7a3e03134f00183536064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE PUSH24 0xCCBB8E9E8B096AE0ECC19204988A8DD46177C40AC7A3E031 CALLVALUE CREATE ADD DUP4 MSTORE8 PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"229:582:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;229:582:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204777ccbb8e9e8b096ae0ecc19204988a8dd46177c40ac7a3e03134f00183536064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE PUSH24 0xCCBB8E9E8B096AE0ECC19204988A8DD46177C40AC7A3E031 CALLVALUE CREATE ADD DUP4 MSTORE8 PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"229:582:27:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/raffle/RaffleDataTypes.sol\":\"RaffleDataTypes\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/raffle/RaffleDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {IERC20} from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC721} from \\\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\\\";\\n\\nlibrary RaffleDataTypes {\\n\\n    struct RaffleData {\\n        address creator;\\n        IERC20 purchaseCurrency;\\n        IERC721 nftContract;\\n        uint256 nftId;\\n        uint256 maxTicketSupply;\\n        uint256 ticketSupply;\\n        uint256 ticketPrice;\\n        uint256 winningTicketNumber;\\n        uint64 endTime;\\n        bool isTicketDrawn;\\n    }\\n\\n    struct InitRaffleParams {\\n        address creator;\\n        IERC20 purchaseCurrency;\\n        IERC721 nftContract;\\n        uint256 nftId;\\n        uint256 maxTicketSupply;\\n        uint256 ticketPrice;\\n        uint64 endTime;\\n    }\\n}\",\"keccak256\":\"0x16200965dde454d507cb6b99b376fbee27d6232b7f255268f1422b4438b006dd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/raffle/RaffleStorage.sol":{"RaffleStorage":{"abi":[],"devdoc":{"details":"It defines the storage layout of the Raffle contract.","kind":"dev","methods":{},"title":"RaffleStorage","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b099187dc9f84986c0e0b2e3e1af9098fd1ed1c18ae91a30f92d8440620c21f164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP10 XOR PUSH30 0xC9F84986C0E0B2E3E1AF9098FD1ED1C18AE91A30F92D8440620C21F16473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"267:288:28:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220b099187dc9f84986c0e0b2e3e1af9098fd1ed1c18ae91a30f92d8440620c21f164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP10 XOR PUSH30 0xC9F84986C0E0B2E3E1AF9098FD1ED1C18AE91A30F92D8440620C21F16473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"267:288:28:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"It defines the storage layout of the Raffle contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RaffleStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract used as storage of the Raffle contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/raffle/RaffleStorage.sol\":\"RaffleStorage\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363735363136353632333631\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/raffle/RaffleDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {IERC20} from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC721} from \\\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\\\";\\n\\nlibrary RaffleDataTypes {\\n\\n    struct RaffleData {\\n        address creator;\\n        IERC20 purchaseCurrency;\\n        IERC721 nftContract;\\n        uint256 nftId;\\n        uint256 maxTicketSupply;\\n        uint256 ticketSupply;\\n        uint256 ticketPrice;\\n        uint256 winningTicketNumber;\\n        uint64 endTime;\\n        bool isTicketDrawn;\\n    }\\n\\n    struct InitRaffleParams {\\n        address creator;\\n        IERC20 purchaseCurrency;\\n        IERC721 nftContract;\\n        uint256 nftId;\\n        uint256 maxTicketSupply;\\n        uint256 ticketPrice;\\n        uint64 endTime;\\n    }\\n}\",\"keccak256\":\"0x16200965dde454d507cb6b99b376fbee27d6232b7f255268f1422b4438b006dd\",\"license\":\"MIT\"},\"src/raffle/RaffleStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {RaffleDataTypes} from './RaffleDataTypes.sol';\\n\\n/**\\n * @title RaffleStorage\\n * @notice Contract used as storage of the Raffle contract.\\n * @dev It defines the storage layout of the Raffle contract.\\n */\\ncontract RaffleStorage {\\n\\n    // Mapping from ticket ID to owner address\\n    mapping(uint256 => address) internal _ticketOwner;\\n\\n    // Mapping owner address to tickets list\\n    mapping(address => uint256[]) internal _ownerTickets;\\n\\n    RaffleDataTypes.RaffleData internal _globalData;\\n\\n}\",\"keccak256\":\"0x665df428937ca947fa2194ca63f03f337351927f605c9e467b2973f65f5617be\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4984,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"_ticketOwner","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_address)"},{"astId":4989,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"_ownerTickets","offset":0,"slot":"1","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":4992,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"_globalData","offset":0,"slot":"2","type":"t_struct(RaffleData)4957_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)1222":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IERC721)2308":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_struct(RaffleData)4957_storage":{"encoding":"inplace","label":"struct RaffleDataTypes.RaffleData","members":[{"astId":4936,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"creator","offset":0,"slot":"0","type":"t_address"},{"astId":4939,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"purchaseCurrency","offset":0,"slot":"1","type":"t_contract(IERC20)1222"},{"astId":4942,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"nftContract","offset":0,"slot":"2","type":"t_contract(IERC721)2308"},{"astId":4944,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"nftId","offset":0,"slot":"3","type":"t_uint256"},{"astId":4946,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"maxTicketSupply","offset":0,"slot":"4","type":"t_uint256"},{"astId":4948,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"ticketSupply","offset":0,"slot":"5","type":"t_uint256"},{"astId":4950,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"ticketPrice","offset":0,"slot":"6","type":"t_uint256"},{"astId":4952,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"winningTicketNumber","offset":0,"slot":"7","type":"t_uint256"},{"astId":4954,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"endTime","offset":0,"slot":"8","type":"t_uint64"},{"astId":4956,"contract":"src/raffle/RaffleStorage.sol:RaffleStorage","label":"isTicketDrawn","offset":8,"slot":"8","type":"t_bool"}],"numberOfBytes":"288"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"notice":"Contract used as storage of the Raffle contract.","version":1}}}}}}